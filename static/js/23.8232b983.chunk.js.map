{"version":3,"sources":["views/Roles/WebPermission.js","views/Roles/MobilePermission.js","views/Roles/AssignRole.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","height","minWidth","checkbox","width","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","margin","marginTop","chip","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","divider","paper","color","text","secondary","button","fab","float","extendedIcon","marginRight","formControl","WebPermission","useState","pages","setPages","roles","setRoles","classes","role","saved","values","setValues","useEffect","getRoles","then","response","prop","listMenu","selectedRole","getMenu","newPages","menus","map","page","includes","checked","newChildrens","children","onChangeMenu","index","indexChild","event","status","target","idsToUpdate","length","idx","push","_id","countChecked","idxChildrend","idrole","updateMenuRole","_","React","Container","Typography","Paper","className","onSubmit","e","preventDefault","roleName","Grid","container","direction","item","xs","TextField","fullWidth","select","clsx","textField","variant","label","value","onChange","option","MenuItem","key","name","Table","TableBody","TableRow","TableCell","title","TableHead","Switch","edge","subPage","indexSubPage","MobilePermission","updateMenu","AssingRole","setValue","TabContext","TabList","newValue","aria-label","Tab","TabPanel"],"mappings":"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","file":"static/js/23.8232b983.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport clsx from 'clsx';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Swal from 'sweetalert2'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { getRoles, getMenu, updateMenuRole } from '../../api/api';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250,\r\n        minWidth: 290\r\n    },\r\n    checkbox: {\r\n        width: 10\r\n    },\r\n    input: {\r\n        display: \"flex\",\r\n        padding: 0,\r\n        height: \"auto\"\r\n    },\r\n    valueContainer: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        overflow: \"hidden\"\r\n    },\r\n    margin: {\r\n        marginTop: 10\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5, 0.25)\r\n    },\r\n    chipFocused: {\r\n        backgroundColor: emphasize(\r\n            theme.palette.type === \"light\"\r\n                ? theme.palette.grey[300]\r\n                : theme.palette.grey[700],\r\n            0.08\r\n        )\r\n    },\r\n    noOptionsMessage: {\r\n        padding: theme.spacing(1, 2)\r\n    },\r\n    singleValue: {\r\n        fontSize: 16\r\n    },\r\n    placeholder: {\r\n        position: \"absolute\",\r\n        left: 2,\r\n        bottom: 6,\r\n        fontSize: 16\r\n    },\r\n\r\n    divider: {\r\n        height: theme.spacing(2)\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    button:\r\n    {\r\n        margin: theme.spacing(1),\r\n    },\r\n    fab:\r\n    {\r\n        marginTop: -2,\r\n        float: \"right\"\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst WebPermission = () => {\r\n\r\n    const [pages, setPages] = useState([]);\r\n    const [roles, setRoles] = useState([]);\r\n    const classes = useStyles();\r\n    const [values, setValues] = useState({\r\n        role: '',\r\n        saved: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        getRoles().then(response => {\r\n            setRoles(response.roles);\r\n        });\r\n    }, []);\r\n\r\n    const inputChange = prop => event => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        listMenu(event.target.value);\r\n    }\r\n\r\n    const listMenu = selectedRole => {\r\n        getMenu({ type: \"web\" }).then(response => {\r\n            const newPages = response.menus.pages.map(page => {\r\n                if (page.roles.includes(selectedRole)) {\r\n                    page.checked = true;\r\n                } else {\r\n                    page.checked = false;\r\n                }\r\n                const newChildrens = page.children.map(children => {\r\n                    if (children.roles.includes(selectedRole)) {\r\n                        children.checked = true;\r\n                    } else {\r\n                        children.checked = false;\r\n                    }\r\n                    return children;\r\n                })\r\n                pages.children = newChildrens;\r\n                return page\r\n            })\r\n            setPages(newPages);\r\n        });\r\n    }\r\n\r\n    const onChangeMenu = (index, indexChild) => event => {\r\n        let status = event.target.checked\r\n        let idsToUpdate = [];\r\n\r\n        if (pages[index].children.length === 0) {\r\n            const newPages = pages.map((page, idx) => {\r\n                if (idx === index) {\r\n                    page.checked = status;\r\n                    idsToUpdate.push({ page: page._id, status })\r\n                }\r\n                return page\r\n            })\r\n            setPages(newPages);\r\n        } else {\r\n            if (indexChild === -1) {\r\n\r\n                const newPages = pages.map((page, idx) => {\r\n                    if (idx === index) {\r\n                        page.checked = status;\r\n                        idsToUpdate.push({ page: page._id, status })\r\n                        const newChildrens = page.children.map(children => {\r\n                            children.checked = status;\r\n                            idsToUpdate.push({ page: children._id, status })\r\n                            return children;\r\n                        })\r\n                        page.children = newChildrens;\r\n                    }\r\n                    return page\r\n                });\r\n                setPages(newPages);\r\n            } else {\r\n                const newPages = pages.map((page, idx) => {\r\n                    if (idx === index) {\r\n                        let countChecked = 0;\r\n\r\n                        if (status) {\r\n                            page.checked = status;\r\n                            idsToUpdate.push({ page: page._id, status })\r\n                        }\r\n\r\n                        const newChildrens = page.children.map((children, idxChildrend) => {\r\n\r\n                            if (idxChildrend === indexChild) {\r\n                                idsToUpdate.push({ page: children._id, status })\r\n                                children.checked = status;\r\n                            } else {\r\n                                if (!status && children.checked) {\r\n                                    countChecked++;\r\n                                }\r\n                            }\r\n                            return children;\r\n                        })\r\n                        if (countChecked === 0 && !status) {\r\n                            page.checked = status;\r\n                            idsToUpdate.push({ page: page._id, status })\r\n                        }\r\n                        page.children = newChildrens;\r\n                    }\r\n                    return page\r\n                });\r\n                setPages(newPages);\r\n            }\r\n        }\r\n        const input = {\r\n            pages: idsToUpdate,\r\n            idrole: values.role,\r\n        }\r\n        updateMenuRole(input).then(_ => { });\r\n\r\n    }\r\n\r\n\r\n    const onSubmitRole = e => {\r\n\r\n        const input = {\r\n            name: values.roleName,\r\n            status: true\r\n        }\r\n    }\r\n\r\n    const [value, setValue] = React.useState('1');\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <Typography><b>Permisos aplicación web</b></Typography>\r\n                <Paper className={classes.paper}>\r\n                    <form onSubmit={e => {\r\n                        e.preventDefault()\r\n                        onSubmitRole()\r\n                    }} >\r\n                        <Grid container spacing={1} direction=\"column\" >\r\n                            <Grid item xs={6} >\r\n                                <TextField\r\n                                    fullWidth\r\n                                    select\r\n                                    className={clsx(classes.margin, classes.textField)}\r\n                                    variant=\"outlined\"\r\n                                    label=\"Rol\"\r\n                                    value={values.role}\r\n                                    onChange={inputChange('role')}>\r\n                                    {\r\n                                        roles.map(option => (\r\n                                            <MenuItem key={option._id} value={option._id} >\r\n                                                {option.name}\r\n                                            </MenuItem>))\r\n\r\n                                    }\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n\r\n                <Grid item xs={12} >\r\n                    <Paper className={classes.paper}>\r\n                        {\r\n                            <Table>\r\n\r\n                                <TableBody>\r\n                                    {\r\n                                        pages.map(function (page, index) {\r\n\r\n                                            if (page.children.length <= 0) {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell>\r\n                                                            <fieldset>\r\n                                                                <legend> <Typography> {page.title} </Typography></legend>\r\n                                                                <Table>\r\n                                                                    <TableHead>\r\n                                                                        <TableRow>\r\n                                                                            <TableCell>{page.title}</TableCell>\r\n                                                                            <TableCell className={classes.checkbox}><Switch checked={page.checked} edge=\"end\" onChange={onChangeMenu(index, -1)} /></TableCell>\r\n                                                                        </TableRow>\r\n                                                                    </TableHead>\r\n                                                                </Table>\r\n                                                            </fieldset>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            }\r\n                                            else {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell>\r\n                                                            <fieldset>\r\n                                                                <legend> <Typography>{page.title} </Typography></legend>\r\n                                                                <Table>\r\n                                                                    <TableHead>\r\n                                                                        <TableRow>\r\n                                                                            <TableCell>{page.title}</TableCell>\r\n                                                                            <TableCell><Switch edge=\"end\" checked={page.checked} onChange={onChangeMenu(index, -1)} /></TableCell>\r\n                                                                        </TableRow>\r\n                                                                    </TableHead>\r\n                                                                    <TableBody>\r\n                                                                        {\r\n                                                                            page.children.map(function (subPage, indexSubPage) {\r\n                                                                                return (\r\n                                                                                    <TableRow key={indexSubPage}>\r\n                                                                                        <TableCell>{subPage.title} {subPage.checked ? 'checked' : 'none'}</TableCell>\r\n                                                                                        <TableCell className={classes.checkbox} ><Switch edge=\"end\" checked={subPage.checked} onChange={onChangeMenu(index, indexSubPage)} /></TableCell>\r\n                                                                                    </TableRow>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </TableBody>\r\n                                                                </Table>\r\n                                                            </fieldset>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n\r\n\r\n                                                )\r\n\r\n                                            }\r\n\r\n                                        })\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default WebPermission","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport clsx from 'clsx';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Swal from 'sweetalert2'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { getRoles, getMenu, updateMenuRole } from '../../api/api';\r\nimport { updateMenu } from '../../utils/socket.io';\r\nimport { update } from 'lodash';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250,\r\n        minWidth: 290\r\n    },\r\n    checkbox: {\r\n        width: 10\r\n    },\r\n    input: {\r\n        display: \"flex\",\r\n        padding: 0,\r\n        height: \"auto\"\r\n    },\r\n    valueContainer: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        overflow: \"hidden\"\r\n    },\r\n    margin: {\r\n        marginTop: 10\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5, 0.25)\r\n    },\r\n    chipFocused: {\r\n        backgroundColor: emphasize(\r\n            theme.palette.type === \"light\"\r\n                ? theme.palette.grey[300]\r\n                : theme.palette.grey[700],\r\n            0.08\r\n        )\r\n    },\r\n    noOptionsMessage: {\r\n        padding: theme.spacing(1, 2)\r\n    },\r\n    singleValue: {\r\n        fontSize: 16\r\n    },\r\n    placeholder: {\r\n        position: \"absolute\",\r\n        left: 2,\r\n        bottom: 6,\r\n        fontSize: 16\r\n    },\r\n\r\n    divider: {\r\n        height: theme.spacing(2)\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    button:\r\n    {\r\n        margin: theme.spacing(1),\r\n    },\r\n    fab:\r\n    {\r\n        marginTop: -2,\r\n        float: \"right\"\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst MobilePermission = () => {\r\n\r\n    const [pages, setPages] = useState([]);\r\n    const [roles, setRoles] = useState([]);\r\n    const classes = useStyles();\r\n    const [values, setValues] = useState({\r\n        role: '',\r\n        saved: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        getRoles().then(response => {\r\n\r\n            setRoles(response.roles);\r\n        });\r\n    }, []);\r\n\r\n    const inputChange = prop => event => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        listMenu(event.target.value);\r\n    }\r\n\r\n    const listMenu = (selectedRole) => {\r\n        getMenu({ type: \"mobile\" }).then(response => {\r\n            const newPages = response.menus.pages.map(page => {\r\n                if (page.roles.includes(selectedRole)) {\r\n                    page.checked = true;\r\n                } else {\r\n                    page.checked = false;\r\n                }\r\n                const newChildrens = page.children.map(children => {\r\n                    if (children.roles.includes(selectedRole)) {\r\n                        children.checked = true;\r\n                    } else {\r\n                        children.checked = false;\r\n                    }\r\n                    return children;\r\n                })\r\n                pages.children = newChildrens;\r\n                return page\r\n            })\r\n            setPages(newPages);\r\n        });\r\n    }\r\n\r\n    const onChangeMenu = (index, indexChild) => event => {\r\n\r\n        let status = event.target.checked\r\n        let idsToUpdate = [];\r\n\r\n\r\n        if (pages[index].children.length === 0) {\r\n            const newPages = pages.map((page, idx) => {\r\n                if (idx === index) {\r\n                    page.checked = status;\r\n                    idsToUpdate.push({ page: page._id, status })\r\n                }\r\n                return page\r\n            })\r\n            setPages(newPages);\r\n        } else {\r\n            if (indexChild === -1) {\r\n\r\n                const newPages = pages.map((page, idx) => {\r\n                    if (idx === index) {\r\n                        page.checked = status;\r\n                        idsToUpdate.push({ page: page._id, status })\r\n                        const newChildrens = page.children.map(children => {\r\n                            children.checked = status;\r\n                            idsToUpdate.push({ page: children._id, status })\r\n                            return children;\r\n                        })\r\n                        page.children = newChildrens;\r\n                    }\r\n                    return page\r\n                });\r\n                setPages(newPages);\r\n            } else {\r\n                const newPages = pages.map((page, idx) => {\r\n                    if (idx === index) {\r\n                        let countChecked = 0;\r\n\r\n                        if (status) {\r\n                            page.checked = status;\r\n                            idsToUpdate.push({ page: page._id, status })\r\n                        }\r\n\r\n                        const newChildrens = page.children.map((children, idxChildrend) => {\r\n\r\n                            if (idxChildrend === indexChild) {\r\n                                idsToUpdate.push({ page: children._id, status })\r\n                                children.checked = status;\r\n                            } else {\r\n                                if (!status && children.checked) {\r\n                                    countChecked++;\r\n                                }\r\n                            }\r\n                            return children;\r\n                        })\r\n                        if (countChecked === 0 && !status) {\r\n                            page.checked = status;\r\n                            idsToUpdate.push({ page: page._id, status })\r\n                        }\r\n                        page.children = newChildrens;\r\n                    }\r\n                    return page\r\n                });\r\n                setPages(newPages);\r\n            }\r\n        }\r\n        const input = {\r\n            pages: idsToUpdate,\r\n            idrole: values.role,\r\n        }\r\n        updateMenu({ idrole: values.role, })\r\n        updateMenuRole(input).then(_ => { });\r\n\r\n    }\r\n\r\n    const onSubmitRole = e => {\r\n\r\n        const input = {\r\n            name: values.roleName,\r\n            status: true\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <Typography> <b>Permisos aplicación movil</b></Typography>\r\n                <Paper className={classes.paper}>\r\n                    <form onSubmit={e => {\r\n                        e.preventDefault()\r\n                        onSubmitRole()\r\n                    }} >\r\n                        <Grid container spacing={1} direction=\"column\" >\r\n                            <Grid item xs={6} >\r\n                                <TextField\r\n                                    fullWidth\r\n                                    select\r\n                                    className={clsx(classes.margin, classes.textField)}\r\n                                    variant=\"outlined\"\r\n                                    label=\"Rol\"\r\n                                    value={values.role}\r\n                                    onChange={inputChange('role')}>\r\n                                    {\r\n                                        roles.map(option => (\r\n                                            <MenuItem key={option._id} value={option._id} >\r\n                                                {option.name}\r\n                                            </MenuItem>))\r\n\r\n                                    }\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n\r\n                <Grid item xs={12} >\r\n                    <Paper className={classes.paper}>\r\n                        {\r\n                            <Table>\r\n\r\n                                <TableBody>\r\n                                    {\r\n                                        pages.map(function (page, index) {\r\n\r\n                                            if (page.children.length <= 0) {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell>\r\n                                                            <fieldset>\r\n                                                                <legend> <Typography> {page.title} </Typography></legend>\r\n                                                                <Table>\r\n                                                                    <TableHead>\r\n                                                                        <TableRow>\r\n                                                                            <TableCell>{page.title}</TableCell>\r\n                                                                            <TableCell className={classes.checkbox}><Switch checked={page.checked} edge=\"end\" onChange={onChangeMenu(index, -1)} /></TableCell>\r\n                                                                        </TableRow>\r\n                                                                    </TableHead>\r\n                                                                </Table>\r\n                                                            </fieldset>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            }\r\n                                            else {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell>\r\n                                                            <fieldset>\r\n                                                                <legend> <Typography>{page.title} </Typography></legend>\r\n                                                                <Table>\r\n                                                                    <TableHead>\r\n                                                                        <TableRow>\r\n                                                                            <TableCell>{page.title}</TableCell>\r\n                                                                            <TableCell><Switch edge=\"end\" checked={page.roles.includes(values.role) ? true : false} onChange={onChangeMenu(index, -1)} /></TableCell>\r\n                                                                        </TableRow>\r\n                                                                    </TableHead>\r\n                                                                    <TableBody>\r\n                                                                        {\r\n                                                                            page.children.map(function (subPage, indexSubPage) {\r\n                                                                                return (\r\n                                                                                    <TableRow key={indexSubPage}>\r\n                                                                                        <TableCell>{subPage.title}</TableCell>\r\n                                                                                        <TableCell className={classes.checkbox} ><Switch edge=\"end\" checked={subPage.checked} onChange={onChangeMenu(index, indexSubPage)} /></TableCell>\r\n                                                                                    </TableRow>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </TableBody>\r\n                                                                </Table>\r\n                                                            </fieldset>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n\r\n\r\n                                                )\r\n\r\n                                            }\r\n\r\n                                        })\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MobilePermission","import React, { Fragment } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabList from '@material-ui/lab/TabList';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport WebPermission from './WebPermission';\r\nimport MobilePermission from \"./MobilePermission\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250,\r\n        minWidth: 290\r\n    },\r\n    checkbox: {\r\n        width: 10\r\n    },\r\n    input: {\r\n        display: \"flex\",\r\n        padding: 0,\r\n        height: \"auto\"\r\n    },\r\n    valueContainer: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        overflow: \"hidden\"\r\n    },\r\n    margin: {\r\n        marginTop: 10\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5, 0.25)\r\n    },\r\n    chipFocused: {\r\n        backgroundColor: emphasize(\r\n            theme.palette.type === \"light\"\r\n                ? theme.palette.grey[300]\r\n                : theme.palette.grey[700],\r\n            0.08\r\n        )\r\n    },\r\n    noOptionsMessage: {\r\n        padding: theme.spacing(1, 2)\r\n    },\r\n    singleValue: {\r\n        fontSize: 16\r\n    },\r\n    placeholder: {\r\n        position: \"absolute\",\r\n        left: 2,\r\n        bottom: 6,\r\n        fontSize: 16\r\n    },\r\n\r\n    divider: {\r\n        height: theme.spacing(2)\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    button:\r\n    {\r\n        margin: theme.spacing(1),\r\n    },\r\n    fab:\r\n    {\r\n        marginTop: -2,\r\n        float: \"right\"\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst AssingRole = () => {\r\n\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('1');\r\n\r\n    const handleChange = (_, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.root}>\r\n                <TabContext value={value}>\r\n                    <TabList onChange={handleChange} aria-label=\"simple tabs example\">\r\n                        <Tab label=\"Permisos aplicación web\" value=\"1\" />\r\n                        <Tab label=\"Permisos aplicación movil\" value=\"2\" />\r\n                    </TabList>\r\n                    <TabPanel value=\"1\">\r\n                        <WebPermission />\r\n                    </TabPanel>\r\n                    <TabPanel value=\"2\">\r\n                        <MobilePermission />\r\n                    </TabPanel>\r\n                </TabContext>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AssingRole"],"sourceRoot":""}