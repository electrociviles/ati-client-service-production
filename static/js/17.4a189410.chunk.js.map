{"version":3,"sources":["views/Configuration/AlertService.js","mutations/Configuration/configuration.js","queries/configuration.query.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","color","palette","text","secondary","button","margin","input","display","fab","marginTop","float","extendedIcon","marginRight","formControl","AlertService","props","dataAlertService","useQuery","Alert_Service","variables","id","match","params","fetchPolicy","onCompleted","setTextAlertService","getAlertService","valueStr","data","useMutation","Update_Alert_Service","updateAlerService","classes","useState","textAlertService","container","item","xs","className","onSubmit","e","preventDefault","then","response","status","Swal","fire","icon","title","showConfirmButton","timer","message","fullWidth","multiline","rows","clsx","textField","variant","autoComplete","label","value","onChange","event","target","type","gql","Update_Authorization_Email","Authorizate_Email"],"mappings":"2OAgBMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAU,GAEdC,MAAO,CACHC,QAASJ,EAAMK,QAAQ,GACvBC,MAAON,EAAMO,QAAQC,KAAKC,WAE9BC,OAAQ,CACJC,OAAQX,EAAMK,QAAQ,IAE1BO,MAAO,CACHC,QAAS,QAEbC,IAAK,CACDC,WAAY,EACZC,MAAO,SAEXC,aAAc,CACVC,YAAalB,EAAMK,QAAQ,IAE/Bc,YAAa,CACTR,OAAQX,EAAMK,QAAQ,QAqFfe,UAhFM,SAAAC,GAAU,IAEbC,EAAqBC,YAASC,IAAe,CACvDC,UAAW,CAAEC,GAAIL,EAAMM,MAAMC,OAAOF,IACpCG,YAAa,WACbC,YAAa,WACTC,EAAoBT,EAAiBU,gBAAgBC,aAJrDC,KAFkB,EAUEC,YAAYC,KAAjCC,EAVmB,oBAYpBC,EAAUxC,IAZU,EAasByC,mBAAS,IAb/B,mBAanBC,EAbmB,KAaDT,EAbC,KA2C1B,OACI,kBAAC,WAAD,KAEI,kBAAC,IAAD,CAAMU,WAAS,GACX,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAAC,IAAD,CAAOC,UAAWN,EAAQnC,OACtB,0BAAM0C,SAAU,SAAAC,GACZA,EAAEC,iBA7BtBV,EAAkB,CACdZ,UAAW,CAAEjB,KAAMgC,KACpBQ,MAAK,SAAAC,GACAA,EAASf,KAAKG,kBAAkBa,OAChCC,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,UACP9C,KAAM,sCACN+C,mBAAmB,EACnBC,MAAO,MAGXL,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,QACP9C,KAAMyC,EAASf,KAAKG,kBAAkBoB,QACtCF,mBAAmB,EACnBC,MAAO,WAeC,kBAAC,IAAD,CAAMf,WAAS,EAACpC,QAAS,GACrB,kBAAC,IAAD,CAAMqC,MAAI,EAACC,GAAI,IACX,kBAAC,IAAD,CAAWe,WAAS,EAChBC,WAAS,EACTC,KAAM,EACNlC,GAAG,kCACHkB,UAAWiB,YAAKvB,EAAQ3B,OAAQ2B,EAAQwB,WACxCC,QAAQ,WACRC,aAAa,MACbC,MAAM,yDACNC,MAAO1B,EACP2B,SAhDP,SAAAC,GACzBrC,EAAoBqC,EAAMC,OAAOH,WAkDT,kBAAC,IAAD,CAAMxB,MAAI,EAACC,GAAI,IACX,kBAAC,IAAD,CAAQoB,QAAQ,YAAYO,KAAK,SAAShE,MAAM,WAAhD,uB,klBC5G7B,IAAM8B,EAAuBmC,IAAH,KAWpBC,EAA6BD,IAAH,M,gXCZhC,IAAM/C,EAAgB+C,IAAH,KAMbE,EAAoBF,IAAH","file":"static/js/17.4a189410.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport { useMutation, useQuery } from \"@apollo/react-hooks\"\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport clsx from 'clsx';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Update_Alert_Service } from '../../mutations/Configuration/configuration'\nimport 'react-toastify/dist/ReactToastify.css';\nimport Swal from 'sweetalert2'\nimport { Alert_Service } from '../../queries/configuration.query'\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    input: {\n        display: 'none',\n    },\n    fab: {\n        marginTop: -2,\n        float: \"right\"\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n    },\n\n}));\n\nconst AlertService = props => {\n\n    const { data: dataAlertService } = useQuery(Alert_Service, {\n        variables: { id: props.match.params.id },\n        fetchPolicy: 'no-cache',\n        onCompleted: () => {\n            setTextAlertService(dataAlertService.getAlertService.valueStr)\n        }\n    })\n\n    const [updateAlerService] = useMutation(Update_Alert_Service)\n\n    const classes = useStyles()\n    const [textAlertService, setTextAlertService] = useState('')\n\n\n    const onChangeAlertService = event => {\n        setTextAlertService(event.target.value)\n    }\n\n    const onUpdateAlertService = e => {\n        updateAlerService({\n            variables: { text: textAlertService }\n        }).then(response => {\n            if (response.data.updateAlerService.status) {\n                Swal.fire({\n                    icon: 'success',\n                    title: 'Mensaje',\n                    text: 'Operación realizada exitosamente',\n                    showConfirmButton: false,\n                    timer: 3000\n                })\n            } else {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Error',\n                    text: response.data.updateAlerService.message,\n                    showConfirmButton: false,\n                    timer: 3000\n                })\n            }\n        })\n    }\n    return (\n        <Fragment>\n\n            <Grid container>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <form onSubmit={e => {\n                            e.preventDefault()\n                            onUpdateAlertService()\n                        }}>\n                            <Grid container spacing={1}>\n                                <Grid item xs={12}>\n                                    <TextField fullWidth\n                                        multiline\n                                        rows={2}\n                                        id=\"outlined-simple-start-adornment\"\n                                        className={clsx(classes.margin, classes.textField)}\n                                        variant=\"outlined\"\n                                        autoComplete='off'\n                                        label=\"Descripción de la alerta para los servicios moviles\"\n                                        value={textAlertService}\n                                        onChange={onChangeAlertService} />\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <Button variant=\"contained\" type=\"submit\" color='primary'>Actualizar</Button>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Fragment>\n    )\n}\n\nexport default AlertService;\n","import gql from 'graphql-tag'\n\n\nexport const Update_Alert_Service = gql`\n  mutation updateAlerService($text: String) \n  {\n    updateAlerService(text: $text)\n    {\n        status\n        message\n    }\n  }\n`\n\nexport const Update_Authorization_Email = gql`\n  mutation updateAuthorizationEmail($emails: [String]) \n  {\n    updateAuthorizationEmail(emails: $emails)\n    {\n        status\n        message\n    }\n  }\n`","import gql from 'graphql-tag'\n\nexport const Alert_Service = gql`{\n    getAlertService {\n      valueStr\n    }\n  }`\n\nexport const Authorizate_Email = gql`{\n  getAuthorizateEmail {\n    valueArr\n  }\n}`"],"sourceRoot":""}