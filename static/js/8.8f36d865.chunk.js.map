{"version":3,"sources":["views/Person/PersonDetail.js","views/Person/PersonForm.js","views/Person/Person.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","height","minWidth","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","chip","margin","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","divider","paper","color","text","secondary","button","fab","marginTop","float","extendedIcon","marginRight","formControl","PersonDetail","props","console","log","classes","useState","Card","CardHeader","title","Divider","CardContent","className","content","Table","TableBody","TableRow","TableCell","person","names","selected","last_name","documentType","documentNumber","checkDigit","email","address","PersonForm","useEffect","setName","name","setDocumentNumber","document_number","setUsername","username","setRole","role","disabled","file","setFile","password","setPassword","repeatPassword","setRepeatPassword","errorName","setErrorName","errorTextName","setErrorTextName","errorDocument","setErrorDocument","errorTextDocument","setErrorTextDocument","validateName","value","undefined","toString","trim","validateDocument","onSubmitPerson","_","errores","errors","validateForm","toast","error","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","formData","FormData","append","_id","updateUser","then","response","status","info","createUser","Container","maxWidth","Paper","encType","onSubmit","e","preventDefault","Grid","container","item","xs","sm","TextField","fullWidth","select","clsx","textField","variant","label","onChange","target","MenuItem","key","helperText","autoComplete","id","open","filesLimit","dropzoneText","acceptedFiles","Button","iconWidth","width","icon","DialogTitle","withStyles","closeButton","right","top","children","onClose","other","disableTypography","Typography","IconButton","aria-label","onClick","Transition","React","forwardRef","ref","Slide","direction","Person","listUsers","setPersons","users","setTotalPersons","count","persons","totalPersons","page","setPage","rowsPerPage","setRowsPerPage","setOpen","openRestorePerson","setOpenRestorePerson","openDetailPerson","setOpenDetailPerson","openEditPerson","setOpenEditPerson","openCreatePerson","setOpenCreatePerson","setPersonSelected","onOpenRestorePerson","onCloseDeletePerson","onDetailPerson","closeApu","onEditPerson","onCloseEditPerson","onCloseRestorePerson","onCloseCreatePerson","Fab","size","TableHead","map","Tooltip","placement","estado","TablePagination","rowsPerPageOptions","component","onChangePage","event","newPage","onChangeRowsPerPage","Dialog","aria-labelledby","style","cursor","DialogContent","DialogContentText","DialogActions","autoFocus","deleteUser","success","message","newPersons","currentPerson","catch","restoreUser","TransitionComponent","handleClose","modal"],"mappings":"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","file":"static/js/8.8f36d865.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\n\nimport { Label } from 'components';\n\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n    minWidth: 290\n  },\n  input: {\n    display: \"flex\",\n    padding: 0,\n    height: \"auto\"\n  },\n  valueContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flex: 1,\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: theme.spacing(1, 2)\n  },\n  singleValue: {\n    fontSize: 16\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 2,\n    bottom: 6,\n    fontSize: 16\n  },\n\n  divider: {\n    height: theme.spacing(2)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n\n  },\n  button:\n  {\n    margin: theme.spacing(1),\n  },\n  fab:\n  {\n    marginTop: -2,\n    float: \"right\"\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}))\n\nconst PersonDetail = props => {\n\n  console.log('props', props)\n\n  const classes = useStyles()\n\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <Card>\n      <CardHeader title=\"Detalle Usuario\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Nombres</TableCell>\n              <TableCell>{props.person.names}</TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>Apellidos</TableCell>\n              <TableCell>{props.person.last_name}</TableCell>\n            </TableRow>\n            \n            <TableRow>\n              <TableCell>Tipo de documento</TableCell>\n              <TableCell>{props.person.documentType ? props.person.documentType.documentType : ''}</TableCell>\n            </TableRow>\n\n            <TableRow selected>\n              <TableCell>Número de documento</TableCell>\n              <TableCell>{props.person.documentNumber} {props.person.checkDigit >= 0 ? props.person.checkDigit : ''}</TableCell>\n            </TableRow>\n\n            \n            <TableRow>\n              <TableCell>Correo electrónico</TableCell>\n              <TableCell>{props.person.email}</TableCell>\n            </TableRow>\n\n            <TableRow selected>\n              <TableCell>Dirección</TableCell>\n              <TableCell>{props.person.address}</TableCell>\n            </TableRow>\n\n            <TableRow >\n              <TableCell>Correo electrónico</TableCell>\n              <TableCell>{props.person.email}</TableCell>\n            </TableRow>\n\n          </TableBody>\n        </Table>\n      </CardContent>\n\n    </Card>\n  )\n}\n\nexport default PersonDetail","import React, { Fragment, useState, useEffect } from 'react'\nimport { emphasize, makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Container from '@material-ui/core/Container'\n\nimport clsx from 'clsx'\n\nimport { Button } from '@material-ui/core'\nimport { DropzoneArea } from 'material-ui-dropzone'\n\nimport PropTypes from \"prop-types\"\nimport TextField from \"@material-ui/core/TextField\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport { createUser, updateUser } from '../../api/api';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n    minWidth: 290\n  },\n  input: {\n    display: \"flex\",\n    padding: 0,\n    height: \"auto\"\n  },\n  valueContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flex: 1,\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: theme.spacing(1, 2)\n  },\n  singleValue: {\n    fontSize: 16\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 2,\n    bottom: 6,\n    fontSize: 16\n  },\n\n  divider: {\n    height: theme.spacing(2)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n\n  },\n  button:\n  {\n    margin: theme.spacing(1),\n  },\n  fab:\n  {\n    marginTop: -2,\n    float: \"right\"\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}))\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />\n}\n\ninputComponent.propTypes = {\n  inputRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({\n      current: PropTypes.any.isRequired\n    })\n  ])\n}\nconst PersonForm = props => {\n\n\n  useEffect(() => {\n    console.log(props)\n\n    if (props.person) {\n\n      setName(props.person.name);\n      setDocumentNumber(props.person.document_number);\n      setUsername(props.person.username);\n      setRole(props.person.role);\n    }\n  }, [])\n\n  const [dataResponse, setDataResponse] = useState([])\n  const [disabled, setDisabled] = useState(false)\n\n  const [file, setFile] = useState({})\n  const classes = useStyles()\n\n\n  const [roles, setRoles] = useState([]);\n  const [name, setName] = useState('');\n  const [documentNumber, setDocumentNumber] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [repeatPassword, setRepeatPassword] = useState('');\n  const [role, setRole] = useState(null);\n\n  const [errorName, setErrorName] = useState(false)\n  const [errorTextName, setErrorTextName] = useState('')\n\n  const [errorDocument, setErrorDocument] = useState(false)\n  const [errorTextDocument, setErrorTextDocument] = useState('')\n\n  const handlePicture = file => {\n    setFile(file[0])\n  }\n  const onChangeName = e => {\n    setName(e.target.value);\n    validateName(e.target.value);\n  }\n  const onChangeDocumentNumber = e => {\n    setDocumentNumber(e.target.value);\n    validateDocument(e.target.value);\n  }\n  const onChangeUserame = e => {\n    setUsername(e.target.value)\n  }\n  const onChangePassword = e => {\n    setPassword(e.target.value)\n  }\n  const onChangeRepeatPassword = e => {\n    setRepeatPassword(e.target.value)\n  }\n\n  const validateForm = () => {\n    let errors = 0\n    errors += validateName()\n    // errors += validatePrice()\n    // errors += validateQuantity()\n    return errors\n  }\n\n  const validateName = (value) => {\n    let text = value !== undefined ? value : name\n\n    if (text == null || text.toString().trim() === '') {\n      setErrorName(true)\n      setErrorTextName('Este campo es requerido')\n      return 1\n    }\n    else {\n      setErrorName(false)\n      setErrorTextName('')\n      return 0\n    }\n  }\n\n  const validateDocument = (value) => {\n    let text = value !== undefined ? value : documentNumber\n\n    if (text == null || text.toString().trim() === '') {\n      setErrorDocument(true)\n      setErrorTextDocument('Este campo es requerido')\n      return 1\n    }\n    else {\n      setErrorDocument(false)\n      setErrorTextDocument('')\n      return 0\n    }\n  }\n\n  const onChangeRol = e => {\n    console.log(e.target.value)\n    setRole(e.target.value)\n  }\n\n  const onSubmitPerson = _ => {\n\n    let errores = validateForm()\n    errores += validateDocument();\n\n    if (password && repeatPassword) {\n      if (password !== repeatPassword) {\n        toast.error('Las contraseñas no son iguales', {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n\n\n\n    if (errores === 0) {\n      const formData = new FormData();\n      if (props.person) {\n        formData.append(\"id\", props.person._id);\n      }\n      formData.append(\"photo\", file);\n      formData.append(\"name\", name);\n      formData.append(\"username\", username);\n      formData.append(\"documentNumber\", documentNumber);\n      formData.append(\"role\", role);\n      formData.append(\"password\", password);\n\n      if (!props.person) {\n        createUser(formData).then(response => {\n          console.log('response', response);\n          if (response.status == 'success') {\n            toast.info('Funcionario registrado exitosamente', {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          } else {\n            toast.error('Ocurrió un error al registrar el funcionario', {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          }\n\n        });\n\n      } else {\n\n        updateUser(formData).then(response => {\n          console.log('response', response);\n          if (response.status == 'success') {\n            toast.info('Funcionario registrado exitosamente', {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          } else {\n            toast.error('Ocurrió un error al registrar el funcionario', {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          }\n\n        });\n      }\n    } else {\n      toast.error('🦄 Wow so easy!', {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  }\n\n\n  return (\n    <Fragment>\n      <ToastContainer />\n      <Container maxWidth=\"md\">\n\n        <Paper className={classes.paper}>\n          <form encType={'multipart/form-data'}\n            onSubmit={e => {\n              e.preventDefault()\n              onSubmitPerson()\n            }} >\n            <Grid container spacing={3}>\n\n              <Grid item xs={12} sm={4}>\n\n                <TextField\n                  fullWidth\n                  select\n\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Rol\"\n                  margin=\"dense\"\n                  onChange={onChangeRol} >\n                  <MenuItem key={\"administrator\"} value={\"administrator\"}>Administrador</MenuItem>\n                  <MenuItem key={\"technical\"} value={\"technical\"}>Técnico</MenuItem>\n                </TextField>\n              </Grid>\n\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  error={errorName}\n                  helperText={errorTextName}\n                  margin=\"dense\"\n                  autoComplete='off'\n                  id=\"outlined-simple-start-adornment\"\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Nombre\"\n                  value={name}\n                  onChange={onChangeName} />\n              </Grid>\n\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  error={errorDocument}\n                  helperText={errorTextDocument}\n                  margin=\"dense\"\n                  autoComplete='off'\n                  id=\"outlined-simple-start-adornment\"\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  value={documentNumber}\n                  onChange={onChangeDocumentNumber}\n                  label=\"Documento\" />\n              </Grid>\n\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  autoComplete='off'\n                  id=\"outlined-simple-start-adornment\"\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Nombre de usuario\"\n                  value={username}\n                  onChange={onChangeUserame} />\n              </Grid>\n\n\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  autoComplete='off'\n                  id=\"outlined-simple-start-adornment\"\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  type='password'\n                  label=\"Contraseña\"\n                  onChange={onChangePassword} />\n              </Grid>\n\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  autoComplete='off'\n                  type='password'\n                  id=\"outlined-simple-start-adornment\"\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Repite la contraseña\"\n                  onChange={onChangeRepeatPassword} />\n              </Grid>\n\n\n\n              <Grid item xs={12} sm={12}>\n                <DropzoneArea\n                  open={true}\n                  filesLimit={1}\n                  dropzoneText=\"Arrastre y suelte un archivo de imagen aquí o haga clic\"\n                  acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\n                  onChange={handlePicture} />\n\n              </Grid>\n\n\n              <Grid item xs={2} sm={3}>\n                <Button disabled={disabled} type=\"submit\" variant=\"contained\" color='primary'>\n                  {props.person ? \"Actualizar\" : \"Guardar\"}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n\n      </Container>\n    </Fragment>\n  )\n}\n\nexport default PersonForm","import React, { useState, useEffect, Fragment } from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport PersonDetail from './PersonDetail'\nimport { Button } from '@material-ui/core';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Slide from '@material-ui/core/Slide';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport PersonForm from \"./../Person/PersonForm\";\n\nimport Tooltip from '@material-ui/core/Tooltip'\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { deleteUser, restoreUser, listUsers } from '../../api/api';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    iconWidth: {\n        width: 10\n    },\n    paper: {\n        padding: theme.spacing(2),\n        marginTop: 10,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    input: {\n        display: 'none',\n    },\n    fab: {\n        margin: theme.spacing(1),\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n        color: 'black'\n    },\n}))\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n})\n\n\n\nconst Person = _ => {\n\n    useEffect(() => {\n        listUsers().then(response => {\n            console.log(response);\n            setPersons(response.users);\n            setTotalPersons(response.count);\n        });\n    }, []);\n\n\n\n    const classes = useStyles()\n\n    const [persons, setPersons] = useState([])\n    const [totalPersons, setTotalPersons] = useState(0)\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n\n\n    const [open, setOpen] = useState(false);\n    const [openRestorePerson, setOpenRestorePerson] = useState(false);\n    const [openDetailPerson, setOpenDetailPerson] = useState(false);\n    const [openEditPerson, setOpenEditPerson] = useState(false);\n    const [openCreatePerson, setOpenCreatePerson] = useState(false);\n    const [person, setPersonSelected] = useState({})\n\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n        // getPersons({ variables: { start: newPage, end: rowsPerPage } })\n    }\n\n    const handleChangeRowsPerPage = event => {\n\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n        // getPersons({ variables: { start: 0, end: event.target.value } })\n    }\n\n    const onOpenDeletePerson = id => () => {\n        setPersonSelected(id)\n        setOpen(true);\n    }\n\n    const onOpenRestorePerson = id => () => {\n        setPersonSelected(id)\n        setOpenRestorePerson(true);\n    }\n\n    const onCloseDeletePerson = () => {\n        setOpen(false);\n    }\n\n    const onDeletePerson = () => {\n        setOpen(false);\n\n        deleteUser(person).then(response => {\n            if (response.status === 'success') {\n                toast.success(response.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n                const newPersons = persons.map((currentPerson) => {\n                    if (person !== currentPerson._id)\n                        return currentPerson\n\n                    currentPerson.estado = \"inactivo\";\n                    return currentPerson\n                })\n                setPersons(newPersons)\n            } else {\n                toast.error(response.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n        }).catch(e => {\n\n            toast.error('Ocurrió un error al desactivar el funcionario', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        })\n\n    }\n\n    const onRestorePerson = () => {\n\n        setOpenRestorePerson(false)\n\n        restoreUser(person).then(response => {\n            if (response.status === 'success') {\n                toast.success(response.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n                const newPersons = persons.map((currentPerson) => {\n                    if (person !== currentPerson._id)\n                        return currentPerson\n\n                    currentPerson.estado = \"activo\";\n                    return currentPerson\n                })\n                setPersons(newPersons)\n            } else {\n                toast.error(response.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n        }).catch(e => {\n            toast.error('Ocurrió un error al activar el funcionario', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        })\n    }\n\n    const onDetailPerson = person => () => {\n        setPersonSelected(person)\n        setOpenDetailPerson(true)\n    }\n\n    const closeApu = () => {\n        setOpenDetailPerson(false)\n    }\n\n    const onEditPerson = person => () => {\n        setPersonSelected(person)\n        setOpenEditPerson(true)\n    };\n    const onCloseEditPerson = () => {\n        setOpenEditPerson(false)\n    };\n    const onCloseRestorePerson = () => {\n        setOpenRestorePerson(false)\n    };\n\n    const onCreatePerson = () => {\n        setOpenCreatePerson(true)\n    }\n    const onCloseCreatePerson = () => {\n        setOpenCreatePerson(false)\n    }\n\n\n    return (\n        <Fragment>\n            <ToastContainer />\n            <Paper className={classes.paper}>\n                <Fab onClick={onCreatePerson} variant=\"extended\" color=\"primary\" size=\"small\" className={classes.margin}>\n                    <AddIcon className={classes.extendedIcon} />\n                    Nuevo funcionario\n                </Fab>\n\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>FUNCIONARIO</TableCell>\n                            <TableCell>DOCUMENTO</TableCell>\n                            <TableCell>NOMBRE DE USUARIO</TableCell>\n                            <TableCell>ROL</TableCell>\n                            <TableCell>FOTO</TableCell>\n                            <TableCell></TableCell>\n                            <TableCell></TableCell>\n                            <TableCell></TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            persons.map(item => {\n\n                                return (\n                                    <TableRow key={item._id}>\n                                        <TableCell>{item.name} </TableCell>\n                                        <TableCell>{item.document_number}</TableCell>\n                                        <TableCell>{item.username}</TableCell>\n                                        <TableCell>{item.role}</TableCell>\n                                        <TableCell>{item.username}</TableCell>\n\n\n                                        <TableCell className={classes.iconWidth}>\n                                            <Tooltip title=\"Detalle\" placement=\"top\">\n                                                <SearchIcon className={classes.icon} onClick={onDetailPerson(item)} />\n                                            </Tooltip>\n                                        </TableCell>\n\n                                        <TableCell className={classes.iconWidth}>\n                                            <Tooltip title=\"Editar\" placement=\"top\">\n                                                <EditIcon className={classes.icon} onClick={onEditPerson(item)} />\n                                            </Tooltip>\n                                        </TableCell>\n                                        <TableCell className={classes.iconWidth}>\n                                            <Tooltip title=\"Eliminar\" placement=\"top\">\n                                                {\n                                                    item.estado === 'activo' ?\n                                                        <DeleteIcon className={classes.icon} onClick={onOpenDeletePerson(item._id)} />\n                                                        :\n                                                        <RestoreIcon className={classes.icon} onClick={onOpenRestorePerson(item._id)} />\n                                                }\n                                            </Tooltip>\n                                        </TableCell>\n                                    </TableRow>)\n                            }\n                            )}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={totalPersons}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n\n\n            <Dialog\n                open={open}\n                onClose={onCloseDeletePerson}\n                aria-labelledby=\"draggable-dialog-title\">\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n                    Alerta\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Esta seguro de eliminar este funcionario?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={onCloseDeletePerson} color=\"primary\">\n                        NO\n                    </Button>\n                    <Button onClick={onDeletePerson} color=\"primary\">\n                        SI\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={openRestorePerson}\n                onClose={onCloseRestorePerson}\n                aria-labelledby=\"draggable-dialog-title\">\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n                    Alerta\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Esta seguro de Reactivar a esta persona?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={onCloseRestorePerson} color=\"primary\">\n                        NO\n                    </Button>\n                    <Button onClick={onRestorePerson} color=\"primary\">\n                        SI\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog open={openDetailPerson} onClose={closeApu} TransitionComponent={Transition}>\n                <DialogContent>\n                    <PersonDetail person={person} />\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={closeApu} color=\"primary\">\n                        Cerrar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog maxWidth=\"md\" open={openEditPerson} onClose={onCloseEditPerson} TransitionComponent={Transition}>\n                <DialogContent>\n                    <PersonForm onCloseEditPerson={onCloseEditPerson} person={person} />\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={onCloseEditPerson} color=\"primary\">\n                        Cerrar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                fullWidth={true}\n                maxWidth=\"md\"\n                open={openCreatePerson}>\n                <DialogTitle onClose={onCloseCreatePerson}>Crear usuario</DialogTitle>\n\n                <DialogContent>\n                    <PersonForm handleClose={onCloseCreatePerson} modal={true} />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onCloseCreatePerson} color=\"primary\">\n                        Cerrar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Fragment>)\n}\n\nexport default Person"],"sourceRoot":""}