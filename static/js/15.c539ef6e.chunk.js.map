{"version":3,"sources":["views/Attentions/AttentionAdditionalInformationForm.js","views/Attentions/Attentions.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","iconWidth","width","paper","padding","spacing","marginTop","button","margin","input","display","fab","extendedIcon","marginRight","icon","color","AttentionAdditionalInformationForm","props","classes","useEffect","attention","setAttention","setSubtotal","subTotal","setImprevistos","imprevistos","setAdministracion","administracion","setUtilidad","utilidad","setIvaSobreUtilidad","ivaSobreUtilidad","setTotal","total","useState","subtotal","errorSubtotal","setErrorSubtotal","errorTextSubtotal","setErrorTextSubtotal","errorAdministracion","setErrorAdministracion","errorTextAdministracion","setErrorTextAdministracion","errorImprevistos","setErrorImprevistos","errorTextImprevistos","setErrorTextImprevistos","errorUtilidad","setErrorUtilidad","errorTextUtilidad","setErrorTextUtilidad","errorIvaSobreUtilidad","setErrorIvaSobreUtilidad","errorTextIvaSobreUtilidad","setErrorTextIvaSobreUtilidad","errorTotal","setErrorTotal","errorTextTotal","setErrorTextTotal","validateSubtotal","value","text","undefined","toString","trim","validateAdministracion","validateImprevistos","validateUtilidad","validateIvaSobreUtilidad","validateTotal","validateForm","errors","Paper","className","encType","onSubmit","e","preventDefault","_","data","id","_id","action","updateAdditionalInformationAttention","then","response","console","log","status","onClose","toast","info","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","updateAttention","error","Grid","container","item","xs","sm","TextField","fullWidth","helperText","clsx","textField","variant","label","type","onChange","target","Button","DialogTitle","withStyles","closeButton","right","top","palette","grey","children","other","disableTypography","Typography","IconButton","aria-label","onClick","Transition","React","forwardRef","ref","Slide","direction","Attentions","user","jwtDecode","localStorage","getItem","setRoles","start","end","rowsPerPage","paginate","listAttentions","setAttentions","attentions","setTotalAttentions","count","roles","totalAttentions","page","setPage","setRowsPerPage","open","setOpen","openSendCustomer","setOpenSendCustomer","openDetailAttention","setOpenDetailAttention","setAction","openHistory","setOpenHistory","onCloseDeleteAttention","onDetailAttention","onOpenAttention","openAttention","success","newAttentions","map","currentAttention","catch","onCloseAttention","closeAttention","closeDetailAttention","onCloseSendCustomer","onSendCustomer","downloadAttention","downloading","onDownloadAttention","onOpenModalHistory","onCloseModalHistory","getStatus","statusSend","moment","date","format","Table","TableHead","TableRow","TableCell","colSpan","TableBody","key","title","description","Chip","style","size","getStatusSend","customer","name","Tooltip","placement","includes","role","CircularProgress","descriptions","length","TablePagination","rowsPerPageOptions","component","onChangePage","newPage","onChangeRowsPerPage","event","Dialog","cursor","DialogContent","DialogContentText","DialogActions","autoFocus","aria-labelledby","deleteAttention","maxWidth","TransitionComponent","AttentionDetail","List","ListItem","alignItems","ListItemIcon","fontSize","getIcon","ListItemText","primary","secondary"],"mappings":"waAWMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAU,GAEdC,UAAW,CACPC,MAAO,IAEXC,MAAO,CACHC,QAASN,EAAMO,QAAQ,GACvBC,UAAW,IAEfC,OAAQ,CACJC,OAAQV,EAAMO,QAAQ,IAE1BI,MAAO,CACHC,QAAS,QAEbC,IAAK,CACDH,OAAQV,EAAMO,QAAQ,IAE1BO,aAAc,CACVC,YAAaf,EAAMO,QAAQ,IAE/BS,KAAM,CACFD,YAAaf,EAAMO,QAAQ,GAC3BU,MAAO,aA8UAC,EA/T4B,SAAAC,GAEvC,IAAMC,EAAUtB,IAChBuB,qBAAU,WACFF,EAAMG,YACNC,EAAaJ,EAAMG,WACnBE,EAAYL,EAAMG,UAAUG,UAC5BC,EAAeP,EAAMG,UAAUK,aAC/BC,EAAkBT,EAAMG,UAAUO,gBAClCC,EAAYX,EAAMG,UAAUS,UAC5BC,EAAoBb,EAAMG,UAAUW,kBACpCC,EAASf,EAAMG,UAAUa,UAE9B,IAb6C,MAcdC,mBAAS,MAdK,mBAczCd,EAdyC,KAc9BC,EAd8B,OAiBhBa,mBAAS,IAjBO,mBAiBzCC,EAjByC,KAiB/Bb,EAjB+B,OAkBJY,mBAAS,IAlBL,mBAkBzCP,EAlByC,KAkBzBD,EAlByB,OAmBVQ,mBAAS,IAnBC,mBAmBzCT,EAnByC,KAmB5BD,EAnB4B,OAoBhBU,mBAAS,IApBO,mBAoBzCL,EApByC,KAoB/BD,EApB+B,OAqBAM,mBAAS,IArBT,mBAqBzCH,EArByC,KAqBvBD,EArBuB,OAsBtBI,mBAAS,IAtBa,mBAsBzCD,EAtByC,KAsBlCD,EAtBkC,OAwBNE,oBAAS,GAxBH,mBAwBzCE,EAxByC,KAwB1BC,EAxB0B,OAyBEH,mBAAS,IAzBX,mBAyBzCI,EAzByC,KAyBtBC,EAzBsB,OA2BML,oBAAS,GA3Bf,mBA2BzCM,EA3ByC,KA2BpBC,EA3BoB,OA4BcP,mBAAS,IA5BvB,oBA4BzCQ,GA5ByC,MA4BhBC,GA5BgB,SA8BAT,oBAAS,GA9BT,qBA8BzCU,GA9ByC,MA8BvBC,GA9BuB,SA+BQX,mBAAS,IA/BjB,qBA+BzCY,GA/ByC,MA+BnBC,GA/BmB,SAiCNb,oBAAS,GAjCH,qBAiCzCc,GAjCyC,MAiC1BC,GAjC0B,SAkCEf,mBAAS,IAlCX,qBAkCzCgB,GAlCyC,MAkCtBC,GAlCsB,SAoCUjB,oBAAS,GApCnB,qBAoCzCkB,GApCyC,MAoClBC,GApCkB,SAqCkBnB,mBAAS,IArC3B,qBAqCzCoB,GArCyC,MAqCdC,GArCc,SAuCZrB,oBAAS,GAvCG,qBAuCzCsB,GAvCyC,MAuC7BC,GAvC6B,SAwCJvB,mBAAS,IAxCL,qBAwCzCwB,GAxCyC,MAwCzBC,GAxCyB,MAkH1CC,GAAmB,SAACC,GACtB,IAAIC,OAAiBC,IAAVF,EAAsBA,EAAQ1B,EAEzC,OAAY,MAAR2B,GAA2C,KAA3BA,EAAKE,WAAWC,QAChC5B,GAAiB,GACjBE,EAAqB,2BACd,IAGPF,GAAiB,GACjBE,EAAqB,IACd,IAGT2B,GAAyB,SAACL,GAC5B,IAAIC,OAAiBC,IAAVF,EAAsBA,EAAQlC,EAEzC,OAAY,MAARmC,GAA2C,KAA3BA,EAAKE,WAAWC,QAChCxB,GAAuB,GACvBE,GAA2B,2BACpB,IAGPF,GAAuB,GACvBE,GAA2B,IACpB,IAGTwB,GAAsB,SAACN,GACzB,IAAIC,OAAiBC,IAAVF,EAAsBA,EAAQpC,EAEzC,OAAY,MAARqC,GAA2C,KAA3BA,EAAKE,WAAWC,QAChCpB,IAAoB,GACpBE,GAAwB,2BACjB,IAGPF,IAAoB,GACpBE,GAAwB,IACjB,IAGTqB,GAAmB,SAACP,GACtB,IAAIC,OAAiBC,IAAVF,EAAsBA,EAAQhC,EAEzC,OAAY,MAARiC,GAA2C,KAA3BA,EAAKE,WAAWC,QAChChB,IAAiB,GACjBE,GAAqB,2BACd,IAGPF,IAAiB,GACjBE,GAAqB,IACd,IAGTkB,GAA2B,SAACR,GAC9B,IAAIC,OAAiBC,IAAVF,EAAsBA,EAAQ9B,EAEzC,OAAY,MAAR+B,GAA2C,KAA3BA,EAAKE,WAAWC,QAChCZ,IAAyB,GACzBE,GAA6B,2BACtB,IAGPF,IAAyB,GACzBE,GAA6B,IACtB,IAGTe,GAAgB,SAACT,GACnB,IAAIC,OAAiBC,IAAVF,EAAsBA,EAAQ5B,EAEzC,OAAY,MAAR6B,GAA2C,KAA3BA,EAAKE,WAAWC,QAChCR,IAAc,GACdE,GAAkB,2BACX,IAGPF,IAAc,GACdE,GAAkB,IACX,IAGTY,GAAe,WACjB,IAAIC,EAAS,EAOb,OANAA,GAAUZ,KACVY,GAAUN,KACVM,GAAUL,KACVK,GAAUJ,KACVI,GAAUH,KACVG,GAAUF,MAGd,OACI,kBAACG,EAAA,EAAD,CAAOC,UAAWxD,EAAQf,OACtB,kBAAC,IAAD,MAEA,0BAAMwE,QAAS,sBACXC,SAAU,SAAAC,GACNA,EAAEC,iBA5KD,SAAAC,GAGb,GAAgB,IAFFR,KAEK,CAEf,IAAIS,EAAO,CACPC,GAAI7D,EAAU8D,IACd/C,WACAR,iBACAF,cACAI,WACAE,mBACAE,QACAkD,OAAQlE,EAAMkE,QAGlBC,YAAqCJ,GAAMK,MAAK,SAAAC,GAC5CC,QAAQC,IAAI,WAAYF,GACD,WAAnBA,EAASG,QACTxE,EAAMyE,SAAQ,GAEdC,IAAMC,KAAKN,EAASO,QAAS,CACzBC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUrC,IAGd9C,EAAMoF,gBAAgBf,EAASlE,YAG/BuE,IAAMW,MAAMhB,EAASO,QAAS,CAC1BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUrC,QAoIda,KAEJ,kBAAC2B,EAAA,EAAD,CAAMC,WAAS,EAACnG,QAAS,GAErB,kBAACkG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTP,MAAOlE,EACP0E,WAAYxE,EACZoC,UAAWqC,YAAK7F,EAAQV,OAAQU,EAAQ8F,WACxCC,QAAQ,WACRC,MAAM,WACN1G,OAAO,QACP2G,KAAK,SACLtD,MAAO1B,EACPiF,SA5IC,SAAAvC,GACrBvD,EAAYuD,EAAEwC,OAAOxD,OACrBD,GAAiBiB,EAAEwC,OAAOxD,WA8Id,kBAAC0C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTP,MAAO9D,EACPsE,WAAYpE,GACZgC,UAAWqC,YAAK7F,EAAQV,OAAQU,EAAQ8F,WACxCC,QAAQ,WACRC,MAAM,oBACN1G,OAAO,QACP2G,KAAK,SACLtD,MAAOlC,EACPyF,SAvJO,SAAAvC,GAC3BnD,EAAkBmD,EAAEwC,OAAOxD,OAC3BK,GAAuBW,EAAEwC,OAAOxD,WAyJpB,kBAAC0C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTP,MAAO1D,GACPkE,WAAYhE,GACZ4B,UAAWqC,YAAK7F,EAAQV,OAAQU,EAAQ8F,WACxCC,QAAQ,WACRC,MAAM,cACN1G,OAAO,QACP2G,KAAK,SACLtD,MAAOpC,EACP2F,SAlKI,SAAAvC,GACxBrD,EAAeqD,EAAEwC,OAAOxD,OACxBM,GAAoBU,EAAEwC,OAAOxD,WAoKjB,kBAAC0C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTP,MAAOtD,GACP8D,WAAY5D,GACZwB,UAAWqC,YAAK7F,EAAQV,OAAQU,EAAQ8F,WACxCC,QAAQ,WACRC,MAAM,WACN1G,OAAO,QACP2G,KAAK,SACLtD,MAAOhC,EACPuF,SA7KC,SAAAvC,GACrBjD,EAAYiD,EAAEwC,OAAOxD,OACrBO,GAAiBS,EAAEwC,OAAOxD,WA+Kd,kBAAC0C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTP,MAAOlD,GACP0D,WAAYxD,GACZoB,UAAWqC,YAAK7F,EAAQV,OAAQU,EAAQ8F,WACxCC,QAAQ,WACRC,MAAM,qBACN1G,OAAO,QACP2G,KAAK,SACLtD,MAAO9B,EACPqF,SAxLS,SAAAvC,GAC7B/C,EAAoB+C,EAAEwC,OAAOxD,OAC7BQ,GAAyBQ,EAAEwC,OAAOxD,WA0LtB,kBAAC0C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTP,MAAO9C,GACPsD,WAAYpD,GACZgB,UAAWqC,YAAK7F,EAAQV,OAAQU,EAAQ8F,WACxCC,QAAQ,WACRC,MAAM,QACN1G,OAAO,QACP2G,KAAK,SACLtD,MAAO5B,EACPmF,SAnMF,SAAAvC,GAClB7C,EAAS6C,EAAEwC,OAAOxD,OAClBS,GAAcO,EAAEwC,OAAOxD,WAqMX,kBAAC0C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,IAClB,kBAACW,EAAA,EAAD,CAAQH,KAAK,SAASF,QAAQ,YAAYlG,MAAM,WAC3CE,EAAMG,UAAY,aAAe,e,yHCjTxDxB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAU,GAEdC,UAAW,CACPC,MAAO,IAEXC,MAAO,CACHC,QAASN,EAAMO,QAAQ,GACvBC,UAAW,IAEfC,OAAQ,CACJC,OAAQV,EAAMO,QAAQ,IAE1BI,MAAO,CACHC,QAAS,QAEbC,IAAK,CACDH,OAAQV,EAAMO,QAAQ,IAE1BO,aAAc,CACVC,YAAaf,EAAMO,QAAQ,IAE/BS,KAAM,CACFD,YAAaf,EAAMO,QAAQ,GAC3BU,MAAO,aAiBTwG,GAAcC,aAbL,SAAC1H,GAAD,MAAY,CACvBC,KAAM,CACFS,OAAQ,EACRJ,QAASN,EAAMO,QAAQ,IAE3BoH,YAAa,CACT3B,SAAU,WACV4B,MAAO5H,EAAMO,QAAQ,GACrBsH,IAAK7H,EAAMO,QAAQ,GACnBU,MAAOjB,EAAM8H,QAAQC,KAAK,SAIdL,EAAmB,SAACvG,GAAW,IACvC6G,EAAyC7G,EAAzC6G,SAAU5G,EAA+BD,EAA/BC,QAASwE,EAAsBzE,EAAtByE,QAAYqC,EADO,YACG9G,EADH,kCAE9C,OACI,kBAAC,IAAD,eAAgB+G,mBAAiB,EAACtD,UAAWxD,EAAQnB,MAAUgI,GAC3D,kBAACE,EAAA,EAAD,CAAYhB,QAAQ,MAAMa,GACzBpC,EACG,kBAACwC,EAAA,EAAD,CAAYC,aAAW,QAAQzD,UAAWxD,EAAQuG,YAAaW,QAAS1C,GACpE,kBAAC,IAAD,OAEJ,SAKV2C,GAAaC,IAAMC,YAAW,SAAoBtH,EAAOuH,GAC3D,OAAO,kBAACC,EAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASvH,OAykBhC0H,UAtkBI,SAAA5D,GAEf,IAAM6D,EAAOC,IAAUC,aAAaC,QAAQ,UAE5C5H,qBAAU,WAEN6H,EAAS,CAAC,6BACV,IAAIhE,EAAO,CAAEiE,MAAO,EAAGC,IAAKC,GAAaC,UAAU,GACnDC,YAAerE,GAAMK,MAAK,SAAAC,GACtBgE,EAAchE,EAASiE,YACvBC,EAAmBlE,EAASmE,YAEjC,IAEH,IAAMvI,EAAUtB,KAdI,EAgBMsC,mBAAS,IAhBf,mBAgBbwH,EAhBa,KAgBNV,EAhBM,OAiBgB9G,mBAAS,IAjBzB,mBAiBbqH,EAjBa,KAiBDD,EAjBC,OAkBcpH,mBAAS,MAlBvB,mBAkBbd,EAlBa,KAkBFC,EAlBE,OAmB0Ba,mBAAS,GAnBnC,mBAmBbyH,EAnBa,KAmBIH,EAnBJ,QAoBItH,mBAAS,GApBb,qBAoBb0H,GApBa,MAoBPC,GApBO,SAqBkB3H,mBAAS,IArB3B,qBAqBbiH,GArBa,MAqBAW,GArBA,SAuBI5H,oBAAS,GAvBb,qBAuBb6H,GAvBa,MAuBPC,GAvBO,SAwB4B9H,oBAAS,GAxBrC,qBAwBb+H,GAxBa,MAwBKC,GAxBL,SAyBkChI,oBAAS,GAzB3C,qBAyBbiI,GAzBa,MAyBQC,GAzBR,SA0BQlI,mBAAS,IA1BjB,qBA0BbiD,GA1Ba,MA0BLkF,GA1BK,SA6BkBnI,oBAAS,GA7B3B,qBA6BboI,GA7Ba,MA6BAC,GA7BA,MAiDdC,GAAyB,WAC3BR,IAAQ,IAiDNS,GAAoB,SAAArJ,GAAS,OAAI,WACnCC,EAAaD,GACbgJ,IAAuB,KAErBM,GAAkB,SAAAtJ,GAAS,OAAI,WACjCuJ,YAAcvJ,EAAU8D,KAAKG,MAAK,SAAAC,GAC9B,GAAwB,YAApBA,EAASG,OAAsB,CAE/BE,IAAMiF,QAAQtF,EAASO,QAAS,CAC5BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUrC,IAGd,IAAM8G,EAAgBtB,EAAWuB,KAAI,SAACC,GAClC,OAAI3J,EAAU8D,MAAQ6F,EAAiB7F,MAGvC6F,EAAiBtF,OAAS,WAFfsF,KAKfzB,EAAcuB,QAEdlF,IAAMW,MAAMhB,EAASO,QAAS,CAC1BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUrC,OAGnBiH,OAAM,SAAAnG,GACLU,QAAQC,IAAIX,GACZc,IAAMW,MAAM,+CAA0C,CAClDR,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUrC,SAIhBkH,GAAmB,SAAA7J,GAAS,OAAI,WAClC,IAAI4D,EAAO,CAAEC,GAAI7D,EAAU8D,IAAKO,OAAQ,QACxCyF,YAAelG,GAAMK,MAAK,SAAAC,GACtB,GAAwB,YAApBA,EAASG,OAAsB,CAE/BE,IAAMC,KAAKN,EAASO,QAAS,CACzBC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUrC,IAEd,IAAM8G,EAAgBtB,EAAWuB,KAAI,SAACC,GAClC,OAAI3J,EAAU8D,MAAQ6F,EAAiB7F,MAGvC6F,EAAiBtF,OAAS,YAFfsF,KAKfzB,EAAcuB,QAEdlF,IAAMW,MAAMhB,EAASO,QAAS,CAC1BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUrC,OAGnBiH,OAAM,SAAAnG,GACLU,QAAQC,IAAIX,GACZc,IAAMW,MAAM,gDAA2C,CACnDR,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUrC,SAIhBoH,GAAuB,WACzBf,IAAuB,IAErBgB,GAAsB,WACxBlB,IAAoB,IAElBmB,GAAiB,SAACjK,EAAW+D,GAAZ,OAAuB,WAC1CkF,GAAUlF,GACV9D,EAAaD,GACb8I,IAAoB,KAElBoB,GAAoB,SAAAlK,GAAS,OAAI,WACnC,IAAMyJ,EAAgBtB,EAAWuB,KAAI,SAAAC,GAIjC,OAHIA,EAAiB7F,MAAQ9D,EAAU8D,MACnC6F,EAAiBQ,aAAc,GAE5BR,KAEXzB,EAAcuB,GAEd,IAAI7F,EAAO,CAAEC,GAAI7D,EAAU8D,KAC3BsG,YAAoBxG,GAAMK,MAAK,SAAAC,GAE3B,IAAMuF,EAAgBtB,EAAWuB,KAAI,SAAAC,GAIjC,OAHIA,EAAiB7F,MAAQ9D,EAAU8D,MACnC6F,EAAiBQ,aAAc,GAE5BR,KAEXzB,EAAcuB,GAEdtF,QAAQC,IAAIF,GACY,YAApBA,EAASG,QAETE,IAAMC,KAAKN,EAASO,QAAS,CACzBC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUrC,IAEduF,EAAcuB,IAIdlF,IAAMW,MAAMhB,EAASO,QAAS,CAC1BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUrC,OAGnBiH,OAAM,SAAAnG,GACLc,IAAMW,MAAM,mDAA8C,CACtDR,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUrC,SAWhB0H,GAAqB,SAAArK,GAAS,OAAI,WACpCmJ,IAAe,GACflJ,EAAaD,KAGXsK,GAAsB,WACxBnB,IAAe,IAEboB,GAAY,SAAAlF,GACd,OAAQA,EAAKmF,YACT,IAAK,OACD,OAAO,yBAAKlH,UAAU,oBAClB,yBAAKA,UAAU,iBAAf,WACA,yBAAKA,UAAU,eAAemH,IAAOpF,EAAKqF,MAAMC,OAAO,yBAI/D,IAAK,SACD,OAAO,yBAAKrH,UAAU,oBAClB,yBAAKA,UAAU,iBAAf,aACA,yBAAKA,UAAU,eAAemH,IAAOpF,EAAKqF,MAAMC,OAAO,yBAG/D,IAAK,SACD,OAAO,yBAAKrH,UAAU,oBAClB,yBAAKA,UAAU,iBAAf,aACA,yBAAKA,UAAU,eAAemH,IAAOpF,EAAKqF,MAAMC,OAAO,yBAG/D,IAAK,SACD,OAAO,yBAAKrH,UAAU,oBAClB,yBAAKA,UAAU,iBAAf,YACA,yBAAKA,UAAU,eAAemH,IAAOpF,EAAKqF,MAAMC,OAAO,2BAsDvE,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,MACA,kBAACtH,EAAA,EAAD,CAAOC,UAAWxD,EAAQf,OACtB,kBAAC6L,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,qBACA,kBAACA,EAAA,EAAD,CAAWC,QAAS,GAApB,cAGR,kBAACC,EAAA,EAAD,KAEQ9C,EAAWuB,KAAI,SAAArE,GACX,OACI,kBAACyF,EAAA,EAAD,CAAUI,IAAK7F,EAAKvB,KAChB,kBAACiH,EAAA,EAAD,KAAY1F,EAAK8F,MAAjB,KACA,kBAACJ,EAAA,EAAD,KAAY1F,EAAK+F,YAAjB,KACA,kBAACL,EAAA,EAAD,KAEwB,aAAhB1F,EAAKhB,OACD,kBAACgH,EAAA,EAAD,CAAMC,MAAO,CAAElM,OAAQ,GAAK0G,MAAM,UAAUyF,KAAK,QAAQ1F,QAAQ,aACjE,kBAACwF,EAAA,EAAD,CAAMC,MAAO,CAAElM,OAAQ,GAAK0G,MAAM,UAAUyF,KAAK,QAAQ5L,MAAM,UAAUkG,QAAQ,aAGjE,SAApBR,EAAKmF,WACD,kBAACa,EAAA,EAAD,CAAMC,MAAO,CAAElM,OAAQ,GAAK0G,MAAM,UAAUnG,MAAM,YAAY4L,KAAK,QAAQ1F,QAAQ,aACnF,GA7D1B,SAAA2E,GAClB,OAAQA,GACJ,IAAK,SACD,OAAO,kBAACa,EAAA,EAAD,CAAMvF,MAAM,WAAWyF,KAAK,QAAQ5L,MAAM,YAErD,IAAK,SACD,OAAO,kBAAC0L,EAAA,EAAD,CAAMvF,MAAM,YAAYyF,KAAK,UAExC,IAAK,SACD,OAAO,kBAACF,EAAA,EAAD,CAAMvF,MAAM,YAAYyF,KAAK,UAExC,IAAK,OACD,OAAO,kBAACF,EAAA,EAAD,CAAMvF,MAAM,UAAUyF,KAAK,WAoDFC,CAAcnG,EAAKmF,aAG3B,kBAACO,EAAA,EAAD,KAAY1F,EAAKoG,SAASC,MAE1B,kBAACX,EAAA,EAAD,CAAWzH,UAAWxD,EAAQjB,WAC1B,kBAAC8M,EAAA,EAAD,CAASR,MAAM,UAAUS,UAAU,OAC/B,kBAAC,IAAD,CAAYtI,UAAWxD,EAAQJ,KAAMsH,QAASqC,GAAkBhE,OAKxE,kBAAC0F,EAAA,EAAD,CAAWzH,UAAWxD,EAAQjB,WAEN,aAAhBwG,EAAKhB,OACD,yBAAKf,UAAU,0BACX,kBAAC,IAAD,CAAiBA,UAAU,OAAO0D,QAASsC,GAAgBjE,KAC3D,0BAAM/B,UAAU,cAAhB,UAEJ,yBAAKA,UAAU,0BACX,kBAAC,IAAD,CAAeA,UAAU,OAAO0D,QAAS6C,GAAiBxE,KAC1D,yBAAK/B,UAAU,cAAf,YAKhB,kBAACyH,EAAA,EAAD,CAAWzH,UAAWxD,EAAQjB,WAEH,WAAnBwG,EAAKmF,WACD,kBAACmB,EAAA,EAAD,CAASR,MAAM,iBAAiBS,UAAU,OACtC,6BACI,kBAAC,IAAD,CAAWtI,UAAW,OAAQ0D,QAASiD,GAAe5E,EAAM,cAEvD,IAGzB,kBAAC0F,EAAA,EAAD,CAAWzH,UAAWxD,EAAQjB,WAEtByJ,EAAMuD,SAASrE,EAAKsE,OAA4B,UAAnBzG,EAAKmF,WAC9B,kBAACmB,EAAA,EAAD,CAASR,MAAM,SAASS,UAAU,OAC9B,6BACI,kBAAC,IAAD,CAAStI,UAAW,OAAQ0D,QAASiD,GAAe5E,EAAM,cAErD,GAGrB,kBAACsG,EAAA,EAAD,CAASR,MAAM,YAAYS,UAAU,OAE7BvG,EAAK8E,YACD,yBAAK7G,UAAU,oBACX,kBAACyI,EAAA,EAAD,CAAkBR,KAAM,MAE5B,6BACI,kBAAC,IAAD,CAAwBjI,UAAW,OAAQ0D,QAASkD,GAAkB7E,QAU1F,kBAAC0F,EAAA,EAAD,CAAWzH,UAAWxD,EAAQjB,WAGtBwG,EAAK2G,aAAaC,OAAS,EAAI,kBAACN,EAAA,EAAD,CAASR,MAAM,YAAYS,UAAU,OAChE,6BACI,kBAAC,IAAD,CAAgBtI,UAAW,OAAQ0D,QAASqD,GAAmBhF,OAE1D,UAS7C,kBAAC6G,EAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,UAAU,MACV/D,MAAOE,EACPR,YAAaA,GACbS,KAAMA,GACN6D,aA9bS,SAAC1I,EAAG2I,GACzB7D,GAAQ6D,GACR,IAAI1I,EAAO,CAAEiE,MAAQyE,EAAUvE,GAAcD,IAAKC,GAAaC,UAAU,GACzEC,YAAerE,GAAMK,MAAK,SAAAC,GACtBgE,EAAchE,EAASiE,YACvBC,EAAmBlE,EAASmE,WA0bpBkE,oBAvbgB,SAAAC,GAE5B9D,IAAgB8D,EAAMvG,OAAOxD,OAC7BgG,GAAQ,GACR,IAAI7E,EAAO,CAAEiE,MAAO,EAAGC,IAAK0E,EAAMvG,OAAOxD,MAAOuF,UAAU,GAC1DC,YAAerE,GAAMK,MAAK,SAAAC,GACtBgE,EAAchE,EAASiE,YACvBC,EAAmBlE,EAASmE,cAob5B,kBAACoE,EAAA,EAAD,CACI9D,KAAME,GACNvE,QAAS0F,IACT,kBAAC,GAAD,CAAasB,MAAO,CAAEoB,OAAQ,SAA9B,UAGA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,EAAD,CACI7I,OAAQA,GACR/D,UAAWA,EACXiF,gBApJA,SAAlBA,EAAkBjF,GACpBmE,QAAQC,IAAI,oBAAqBa,GACjC,IAAMwE,EAAgBtB,EAAWuB,KAAI,SAACC,GAClC,OAAI3J,EAAU8D,MAAQ6F,EAAiB7F,IAC5B6F,EAEXA,EAAmB3J,KAGvBkI,EAAcuB,IA4IMnF,QAAS0F,OAIrB,kBAAC6C,EAAA,EAAD,KACI,kBAAC3G,EAAA,EAAD,CAAQ4G,WAAS,EAAC9F,QAASgD,GAAqBrK,MAAM,WAAtD,YAMR,kBAAC8M,EAAA,EAAD,CACI9D,KAAMA,GACNrE,QAAS8E,GACT2D,kBAAgB,0BAChB,kBAAC,GAAD,CAAazB,MAAO,CAAEoB,OAAQ,QAAU7I,GAAG,0BAA3C,UAGA,kBAAC8I,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,mDAIJ,kBAACC,EAAA,EAAD,KACI,kBAAC3G,EAAA,EAAD,CAAQ4G,WAAS,EAAC9F,QAASoC,GAAwBzJ,MAAM,WAAzD,MAGA,kBAACuG,EAAA,EAAD,CAAQc,QArdE,SAAAnD,GACtB+E,IAAQ,GAERoE,YAAgBnJ,GAAII,MAAK,SAAAC,GACrB,GAAwB,YAApBA,EAASG,OAAsB,CAC/BE,IAAMiF,QAAQtF,EAASO,QAAS,CAC5BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUrC,IAEd,IAAM8G,EAAgBtB,EAAWuB,KAAI,SAACC,GAClC,OAAI9F,IAAO8F,EAAiB7F,MAG5B6F,EAAiBtF,OAAS,WAFfsF,KAKfzB,EAAcuB,QAEdlF,IAAMW,MAAMhB,EAASO,QAAS,CAC1BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUrC,OAGnBiH,OAAM,SAAAnG,GAELc,IAAMW,MAAM,iDAA4C,CACpDR,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUrC,QA2a8BhD,MAAM,WAA1C,QAMR,kBAAC8M,EAAA,EAAD,CACIhH,WAAS,EAACwH,SAAS,KACnBtE,KAAMI,GACNzE,QAASyF,GACTmD,oBAAqBjG,IACrB,kBAAC0F,EAAA,EAAD,KACI,kBAACQ,EAAA,EAAD,CAAiBnN,UAAWA,KAEhC,kBAAC6M,EAAA,EAAD,KACI,kBAAC3G,EAAA,EAAD,CAAQ4G,WAAS,EAAC9F,QAAS+C,GAAsBpK,MAAM,WAAvD,YAMR,kBAAC8M,EAAA,EAAD,CACI9D,KAAMO,GACN5E,QAASgG,IACT,kBAAC,GAAD,iBAGA,kBAACqC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACQ,EAAA,EAAD,CAAM9J,UAAWxD,EAAQnB,MAEjBqB,EACIA,EAAUgM,aAAatC,KAAI,SAAArE,GACvB,OACI,kBAACgI,EAAA,EAAD,CAAUC,WAAW,cACjB,kBAACC,EAAA,EAAD,KAtP5B,SAAA/C,GACZ,OAAQA,GACJ,IAAK,SACD,OAAO,kBAAC,IAAD,CAAsBc,MAAO,CAAEkC,SAAU,GAAI7N,MAAO,SAE/D,IAAK,OACD,OAAO,kBAAC,IAAD,CAAiB2L,MAAO,CAAEkC,SAAU,GAAI7N,MAAO,SAE1D,IAAK,SACD,OAAO,kBAAC,IAAD,CAAsB2L,MAAO,CAAEkC,SAAU,GAAI7N,MAAO,WAG/D,IAAK,SACD,OAAO,kBAAC,IAAD,CAAuB2L,MAAO,CAAEkC,SAAU,GAAI7N,MAAO,aA0OvB8N,CAAQpI,EAAKmF,aAElB,kBAACkD,EAAA,EAAD,CACIC,QAASpD,GAAUlF,GACnBuI,UAAWvI,EAAK+F,kBAM9B,MAKtB,kBAACyB,EAAA,EAAD,KACI,kBAAC3G,EAAA,EAAD,CAAQ4G,WAAS,EAAC9F,QAASsD,GAAqB3K,MAAM,WAAtD","file":"static/js/15.c539ef6e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport clsx from 'clsx';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { updateAdditionalInformationAttention } from '../../api/api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    iconWidth: {\r\n        width: 10\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    fab: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(1),\r\n        color: 'black'\r\n    },\r\n}))\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    }\r\n});\r\nconst AttentionAdditionalInformationForm = props => {\r\n\r\n    const classes = useStyles()\r\n    useEffect(() => {\r\n        if (props.attention) {\r\n            setAttention(props.attention);\r\n            setSubtotal(props.attention.subTotal);\r\n            setImprevistos(props.attention.imprevistos);\r\n            setAdministracion(props.attention.administracion);\r\n            setUtilidad(props.attention.utilidad);\r\n            setIvaSobreUtilidad(props.attention.ivaSobreUtilidad);\r\n            setTotal(props.attention.total);\r\n        }\r\n    }, []);\r\n    const [attention, setAttention] = useState(null)\r\n\r\n\r\n    const [subtotal, setSubtotal] = useState(\"\");\r\n    const [administracion, setAdministracion] = useState(\"\");\r\n    const [imprevistos, setImprevistos] = useState(\"\");\r\n    const [utilidad, setUtilidad] = useState(\"\");\r\n    const [ivaSobreUtilidad, setIvaSobreUtilidad] = useState(\"\");\r\n    const [total, setTotal] = useState(\"\");\r\n\r\n    const [errorSubtotal, setErrorSubtotal] = useState(false);\r\n    const [errorTextSubtotal, setErrorTextSubtotal] = useState('');\r\n\r\n    const [errorAdministracion, setErrorAdministracion] = useState(false);\r\n    const [errorTextAdministracion, setErrorTextAdministracion] = useState('');\r\n\r\n    const [errorImprevistos, setErrorImprevistos] = useState(false);\r\n    const [errorTextImprevistos, setErrorTextImprevistos] = useState('');\r\n\r\n    const [errorUtilidad, setErrorUtilidad] = useState(false);\r\n    const [errorTextUtilidad, setErrorTextUtilidad] = useState('');\r\n\r\n    const [errorIvaSobreUtilidad, setErrorIvaSobreUtilidad] = useState(false);\r\n    const [errorTextIvaSobreUtilidad, setErrorTextIvaSobreUtilidad] = useState('');\r\n\r\n    const [errorTotal, setErrorTotal] = useState(false);\r\n    const [errorTextTotal, setErrorTextTotal] = useState('');\r\n\r\n    const onSubmit = _ => {\r\n        let errores = validateForm();\r\n\r\n        if (errores === 0) {\r\n\r\n            let data = {\r\n                id: attention._id,\r\n                subtotal,\r\n                administracion,\r\n                imprevistos,\r\n                utilidad,\r\n                ivaSobreUtilidad,\r\n                total,\r\n                action: props.action\r\n            }\r\n\r\n            updateAdditionalInformationAttention(data).then(response => {\r\n                console.log('response', response);\r\n                if (response.status == 'success') {\r\n                    props.onClose(false);\r\n\r\n                    toast.info(response.message, {\r\n                        position: \"top-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n\r\n                    props.updateAttention(response.attention)\r\n\r\n                } else {\r\n                    toast.error(response.message, {\r\n                        position: \"top-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n    const onChangeSubTotal = e => {\r\n        setSubtotal(e.target.value);\r\n        validateSubtotal(e.target.value);\r\n    }\r\n    const onChangeAdministracion = e => {\r\n        setAdministracion(e.target.value);\r\n        validateAdministracion(e.target.value);\r\n    }\r\n    const onChangeImprevistos = e => {\r\n        setImprevistos(e.target.value);\r\n        validateImprevistos(e.target.value);\r\n    }\r\n    const onChangeUtilidad = e => {\r\n        setUtilidad(e.target.value);\r\n        validateUtilidad(e.target.value);\r\n    }\r\n    const onChangeIvaSobreUtilidad = e => {\r\n        setIvaSobreUtilidad(e.target.value);\r\n        validateIvaSobreUtilidad(e.target.value);\r\n    }\r\n    const onChangeTotal = e => {\r\n        setTotal(e.target.value);\r\n        validateTotal(e.target.value);\r\n    }\r\n    const validateSubtotal = (value) => {\r\n        let text = value !== undefined ? value : subtotal\r\n\r\n        if (text == null || text.toString().trim() === '') {\r\n            setErrorSubtotal(true)\r\n            setErrorTextSubtotal('Este campo es requerido')\r\n            return 1\r\n        }\r\n        else {\r\n            setErrorSubtotal(false)\r\n            setErrorTextSubtotal('')\r\n            return 0\r\n        }\r\n    }\r\n    const validateAdministracion = (value) => {\r\n        let text = value !== undefined ? value : administracion\r\n\r\n        if (text == null || text.toString().trim() === '') {\r\n            setErrorAdministracion(true)\r\n            setErrorTextAdministracion('Este campo es requerido')\r\n            return 1\r\n        }\r\n        else {\r\n            setErrorAdministracion(false)\r\n            setErrorTextAdministracion('')\r\n            return 0\r\n        }\r\n    }\r\n    const validateImprevistos = (value) => {\r\n        let text = value !== undefined ? value : imprevistos\r\n\r\n        if (text == null || text.toString().trim() === '') {\r\n            setErrorImprevistos(true)\r\n            setErrorTextImprevistos('Este campo es requerido')\r\n            return 1\r\n        }\r\n        else {\r\n            setErrorImprevistos(false)\r\n            setErrorTextImprevistos('')\r\n            return 0\r\n        }\r\n    }\r\n    const validateUtilidad = (value) => {\r\n        let text = value !== undefined ? value : utilidad\r\n\r\n        if (text == null || text.toString().trim() === '') {\r\n            setErrorUtilidad(true)\r\n            setErrorTextUtilidad('Este campo es requerido')\r\n            return 1\r\n        }\r\n        else {\r\n            setErrorUtilidad(false)\r\n            setErrorTextUtilidad('')\r\n            return 0\r\n        }\r\n    }\r\n    const validateIvaSobreUtilidad = (value) => {\r\n        let text = value !== undefined ? value : ivaSobreUtilidad\r\n\r\n        if (text == null || text.toString().trim() === '') {\r\n            setErrorIvaSobreUtilidad(true)\r\n            setErrorTextIvaSobreUtilidad('Este campo es requerido')\r\n            return 1\r\n        }\r\n        else {\r\n            setErrorIvaSobreUtilidad(false)\r\n            setErrorTextIvaSobreUtilidad('')\r\n            return 0\r\n        }\r\n    }\r\n    const validateTotal = (value) => {\r\n        let text = value !== undefined ? value : total\r\n\r\n        if (text == null || text.toString().trim() === '') {\r\n            setErrorTotal(true)\r\n            setErrorTextTotal('Este campo es requerido')\r\n            return 1\r\n        }\r\n        else {\r\n            setErrorTotal(false)\r\n            setErrorTextTotal('')\r\n            return 0\r\n        }\r\n    }\r\n    const validateForm = () => {\r\n        let errors = 0\r\n        errors += validateSubtotal()\r\n        errors += validateAdministracion()\r\n        errors += validateImprevistos()\r\n        errors += validateUtilidad()\r\n        errors += validateIvaSobreUtilidad()\r\n        errors += validateTotal()\r\n        return errors\r\n    }\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <ToastContainer />\r\n\r\n            <form encType={'multipart/form-data'}\r\n                onSubmit={e => {\r\n                    e.preventDefault()\r\n                    onSubmit()\r\n                }} >\r\n                <Grid container spacing={3}>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            error={errorSubtotal}\r\n                            helperText={errorTextSubtotal}\r\n                            className={clsx(classes.margin, classes.textField)}\r\n                            variant=\"outlined\"\r\n                            label=\"Subtotal\"\r\n                            margin=\"dense\"\r\n                            type='number'\r\n                            value={subtotal}\r\n                            onChange={onChangeSubTotal}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            error={errorAdministracion}\r\n                            helperText={errorTextAdministracion}\r\n                            className={clsx(classes.margin, classes.textField)}\r\n                            variant=\"outlined\"\r\n                            label=\"Administración\"\r\n                            margin=\"dense\"\r\n                            type='number'\r\n                            value={administracion}\r\n                            onChange={onChangeAdministracion}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            error={errorImprevistos}\r\n                            helperText={errorTextImprevistos}\r\n                            className={clsx(classes.margin, classes.textField)}\r\n                            variant=\"outlined\"\r\n                            label=\"Imprevistos\"\r\n                            margin=\"dense\"\r\n                            type='number'\r\n                            value={imprevistos}\r\n                            onChange={onChangeImprevistos}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            error={errorUtilidad}\r\n                            helperText={errorTextUtilidad}\r\n                            className={clsx(classes.margin, classes.textField)}\r\n                            variant=\"outlined\"\r\n                            label=\"Utilidad\"\r\n                            margin=\"dense\"\r\n                            type='number'\r\n                            value={utilidad}\r\n                            onChange={onChangeUtilidad}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            error={errorIvaSobreUtilidad}\r\n                            helperText={errorTextIvaSobreUtilidad}\r\n                            className={clsx(classes.margin, classes.textField)}\r\n                            variant=\"outlined\"\r\n                            label=\"Iva sobre utilidad\"\r\n                            margin=\"dense\"\r\n                            type='number'\r\n                            value={ivaSobreUtilidad}\r\n                            onChange={onChangeIvaSobreUtilidad}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            error={errorTotal}\r\n                            helperText={errorTextTotal}\r\n                            className={clsx(classes.margin, classes.textField)}\r\n                            variant=\"outlined\"\r\n                            label=\"Total\"\r\n                            margin=\"dense\"\r\n                            type='number'\r\n                            value={total}\r\n                            onChange={onChangeTotal}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={2} sm={12}>\r\n                        <Button type=\"submit\" variant=\"contained\" color='primary'>\r\n                            {props.attention ? \"Actualizar\" : \"Enviar\"}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Paper>)\r\n}\r\n\r\nexport default AttentionAdditionalInformationForm","import React, { useState, useEffect, Fragment } from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport AttentionDetail from './AttentionDetail'\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { deleteAttention, openAttention, closeAttention, listAttentions, onDownloadAttention } from '../../api/api';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { AiOutlineLock, AiOutlineUnlock } from 'react-icons/ai';\r\nimport { IoIosSend } from 'react-icons/io';\r\nimport { IoArrowUndoSharp } from 'react-icons/io5';\r\nimport { BsClockHistory } from 'react-icons/bs';\r\n\r\nimport AttentionAdditionalInformationForm from \"./AttentionAdditionalInformationForm\";\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './attention.css';\r\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from \"react-icons/ai\";\r\nimport { BsArrowCounterclockwise } from \"react-icons/bs\";\r\nimport { RiSendPlaneLine } from \"react-icons/ri\";\r\nimport { MdOutlineScheduleSend } from \"react-icons/md\";\r\nimport { VscEdit } from \"react-icons/vsc\";\r\nimport jwtDecode from 'jwt-decode';\r\nimport { AiOutlineCloudDownload } from \"react-icons/ai\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    iconWidth: {\r\n        width: 10\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    fab: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(1),\r\n        color: 'black'\r\n    },\r\n}))\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n})\r\n\r\nconst Attentions = _ => {\r\n\r\n    const user = jwtDecode(localStorage.getItem('token'))\r\n\r\n    useEffect(() => {\r\n\r\n        setRoles([\"5a046fe9627e3526802b3847\"])\r\n        let data = { start: 0, end: rowsPerPage, paginate: true }\r\n        listAttentions(data).then(response => {\r\n            setAttentions(response.attentions);\r\n            setTotalAttentions(response.count);\r\n        });\r\n    }, []);\r\n\r\n    const classes = useStyles()\r\n\r\n    const [roles, setRoles] = useState([])\r\n    const [attentions, setAttentions] = useState([])\r\n    const [attention, setAttention] = useState(null)\r\n    const [totalAttentions, setTotalAttentions] = useState(0)\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [openSendCustomer, setOpenSendCustomer] = useState(false);\r\n    const [openDetailAttention, setOpenDetailAttention] = useState(false);\r\n    const [action, setAction] = useState(\"\");\r\n\r\n\r\n    const [openHistory, setOpenHistory] = useState(false);\r\n\r\n    const handleChangePage = (_, newPage) => {\r\n        setPage(newPage);\r\n        let data = { start: (newPage * rowsPerPage), end: rowsPerPage, paginate: true }\r\n        listAttentions(data).then(response => {\r\n            setAttentions(response.attentions);\r\n            setTotalAttentions(response.count);\r\n        });\r\n    }\r\n    const handleChangeRowsPerPage = event => {\r\n\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n        let data = { start: 0, end: event.target.value, paginate: true }\r\n        listAttentions(data).then(response => {\r\n            setAttentions(response.attentions);\r\n            setTotalAttentions(response.count);\r\n        });\r\n    }\r\n    const onCloseDeleteAttention = () => {\r\n        setOpen(false);\r\n    }\r\n    const onDeleteAttention = id => {\r\n        setOpen(false);\r\n\r\n        deleteAttention(id).then(response => {\r\n            if (response.status === 'success') {\r\n                toast.success(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                const newAttentions = attentions.map((currentAttention) => {\r\n                    if (id !== currentAttention._id)\r\n                        return currentAttention\r\n\r\n                    currentAttention.status = \"deleted\";\r\n                    return currentAttention\r\n                })\r\n                setAttentions(newAttentions)\r\n            } else {\r\n                toast.error(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }).catch(e => {\r\n\r\n            toast.error('Ocurrió un error al eliminar la atención', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        })\r\n\r\n    }\r\n    const onDetailAttention = attention => () => {\r\n        setAttention(attention)\r\n        setOpenDetailAttention(true)\r\n    }\r\n    const onOpenAttention = attention => () => {\r\n        openAttention(attention._id).then(response => {\r\n            if (response.status === 'success') {\r\n\r\n                toast.success(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n\r\n                const newAttentions = attentions.map((currentAttention) => {\r\n                    if (attention._id !== currentAttention._id)\r\n                        return currentAttention\r\n\r\n                    currentAttention.status = \"created\";\r\n                    return currentAttention\r\n                })\r\n                setAttentions(newAttentions)\r\n            } else {\r\n                toast.error(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }).catch(e => {\r\n            console.log(e);\r\n            toast.error(\"Occurrió un error al abrir la atención\", {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        });\r\n    }\r\n    const onCloseAttention = attention => () => {\r\n        let data = { id: attention._id, status: \"send\" }\r\n        closeAttention(data).then(response => {\r\n            if (response.status === 'success') {\r\n\r\n                toast.info(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                const newAttentions = attentions.map((currentAttention) => {\r\n                    if (attention._id !== currentAttention._id)\r\n                        return currentAttention\r\n\r\n                    currentAttention.status = \"finished\";\r\n                    return currentAttention\r\n                })\r\n                setAttentions(newAttentions)\r\n            } else {\r\n                toast.error(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }).catch(e => {\r\n            console.log(e);\r\n            toast.error(\"Occurrió un error al cerrar la atención\", {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        });\r\n    }\r\n    const closeDetailAttention = () => {\r\n        setOpenDetailAttention(false)\r\n    }\r\n    const onCloseSendCustomer = () => {\r\n        setOpenSendCustomer(false);\r\n    }\r\n    const onSendCustomer = (attention, action) => () => {\r\n        setAction(action)\r\n        setAttention(attention)\r\n        setOpenSendCustomer(true)\r\n    }\r\n    const downloadAttention = attention => () => {\r\n        const newAttentions = attentions.map(currentAttention => {\r\n            if (currentAttention._id === attention._id) {\r\n                currentAttention.downloading = true;\r\n            }\r\n            return currentAttention;\r\n        });\r\n        setAttentions(newAttentions)\r\n\r\n        let data = { id: attention._id }\r\n        onDownloadAttention(data).then(response => {\r\n\r\n            const newAttentions = attentions.map(currentAttention => {\r\n                if (currentAttention._id === attention._id) {\r\n                    currentAttention.downloading = false;\r\n                }\r\n                return currentAttention;\r\n            });\r\n            setAttentions(newAttentions)\r\n\r\n            console.log(response)\r\n            if (response.status === 'success') {\r\n\r\n                toast.info(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                setAttentions(newAttentions)\r\n                // window.open(`https://atiservicios.com/ati/${id}.pdf`)\r\n                // window.open(`http://localhost:3984/pdf/${attention._id}.pdf`)\r\n            } else {\r\n                toast.error(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }).catch(e => {\r\n            toast.error(\"Occurrió un error al descargar la atención\", {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        });\r\n\r\n\r\n    }\r\n    const onRejectCustomer = attention => () => {\r\n        setAttention(attention)\r\n        setOpenSendCustomer(true)\r\n    }\r\n\r\n    const onOpenModalHistory = attention => () => {\r\n        setOpenHistory(true);\r\n        setAttention(attention);\r\n    }\r\n\r\n    const onCloseModalHistory = () => {\r\n        setOpenHistory(false);\r\n    }\r\n    const getStatus = item => {\r\n        switch (item.statusSend) {\r\n            case \"send\":\r\n                return <div className='wrapper__history'>\r\n                    <div className='statusHistory'>Enviado</div>\r\n                    <div className='dateHistory'>{moment(item.date).format(\"YYYY-MM-DD HH:mm:ss\")}</div>\r\n                </div>\r\n\r\n\r\n            case \"resend\":\r\n                return <div className='wrapper__history'>\r\n                    <div className='statusHistory'>Reenviado</div>\r\n                    <div className='dateHistory'>{moment(item.date).format(\"YYYY-MM-DD HH:mm:ss\")}</div>\r\n                </div>\r\n\r\n            case \"reject\":\r\n                return <div className='wrapper__history'>\r\n                    <div className='statusHistory'>Rechazado</div>\r\n                    <div className='dateHistory'>{moment(item.date).format(\"YYYY-MM-DD HH:mm:ss\")}</div>\r\n                </div>\r\n\r\n            case \"accept\":\r\n                return <div className='wrapper__history'>\r\n                    <div className='statusHistory'>Aceptado</div>\r\n                    <div className='dateHistory'>{moment(item.date).format(\"YYYY-MM-DD HH:mm:ss\")}</div>\r\n                </div>\r\n\r\n\r\n\r\n        }\r\n    }\r\n    const getIcon = statusSend => {\r\n        switch (statusSend) {\r\n            case \"reject\":\r\n                return <AiOutlineCloseCircle style={{ fontSize: 32, color: \"red\" }} />\r\n\r\n            case \"send\":\r\n                return <RiSendPlaneLine style={{ fontSize: 32, color: \"red\" }} />\r\n\r\n            case \"accept\":\r\n                return <AiOutlineCheckCircle style={{ fontSize: 32, color: \"green\" }} />\r\n\r\n\r\n            case \"resend\":\r\n                return <MdOutlineScheduleSend style={{ fontSize: 32, color: \"silver\" }} />\r\n\r\n        }\r\n\r\n    }\r\n    const getStatusSend = statusSend => {\r\n        switch (statusSend) {\r\n            case \"accept\":\r\n                return <Chip label='Aceptada' size='small' color=\"primary\" />\r\n\r\n            case \"reject\":\r\n                return <Chip label='Rechazada' size='small' />\r\n\r\n            case \"resend\":\r\n                return <Chip label='Reenviado' size='small' />\r\n\r\n            case \"send\":\r\n                return <Chip label='Enviado' size='small' />\r\n\r\n\r\n        }\r\n    }\r\n    const updateAttention = attention => {\r\n        console.log(\"updateAttention: \", updateAttention);\r\n        const newAttentions = attentions.map((currentAttention) => {\r\n            if (attention._id !== currentAttention._id)\r\n                return currentAttention\r\n\r\n            currentAttention = attention;\r\n            return currentAttention\r\n        })\r\n        setAttentions(newAttentions)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <Paper className={classes.paper}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>NOMBRE</TableCell>\r\n                            <TableCell>DESCRIPCIÓN</TableCell>\r\n                            <TableCell>ESTADO</TableCell>\r\n                            <TableCell>CLIENTE</TableCell>\r\n                            <TableCell>VER</TableCell>\r\n                            <TableCell>ABRIR/CERRAR</TableCell>\r\n                            <TableCell colSpan={3}>ACCIONES</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            attentions.map(item => {\r\n                                return (\r\n                                    <TableRow key={item._id}>\r\n                                        <TableCell>{item.title} </TableCell>\r\n                                        <TableCell>{item.description} </TableCell>\r\n                                        <TableCell>\r\n                                            {\r\n                                                item.status === 'finished' ?\r\n                                                    <Chip style={{ margin: 1 }} label='Cerrado' size='small' variant=\"outlined\" /> :\r\n                                                    <Chip style={{ margin: 1 }} label='Abierto' size='small' color=\"primary\" variant=\"outlined\" />\r\n                                            }\r\n                                            {\r\n                                                item.statusSend === 'send' ?\r\n                                                    <Chip style={{ margin: 1 }} label='Enviada' color='secondary' size='small' variant=\"outlined\" /> :\r\n                                                    \"\"\r\n                                            }\r\n                                            {\r\n                                                getStatusSend(item.statusSend)\r\n                                            }\r\n                                        </TableCell>\r\n                                        <TableCell>{item.customer.name}</TableCell>\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            <Tooltip title=\"Detalle\" placement=\"top\">\r\n                                                <SearchIcon className={classes.icon} onClick={onDetailAttention(item)} />\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            {\r\n                                                item.status === 'finished' ?\r\n                                                    <div className='wrapper-icon-attention'>\r\n                                                        <AiOutlineUnlock className='icon' onClick={onOpenAttention(item)} />\r\n                                                        <span className='open-close'>Abrir</span>\r\n                                                    </div> :\r\n                                                    <div className='wrapper-icon-attention'>\r\n                                                        <AiOutlineLock className='icon' onClick={onCloseAttention(item, \"send\")} />\r\n                                                        <div className='open-close'>Cerrar</div>\r\n                                                    </div>\r\n                                            }\r\n                                        </TableCell>\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            {\r\n                                                item.statusSend == \"pending\" ?\r\n                                                    <Tooltip title=\"Enviar cliente\" placement=\"top\">\r\n                                                        <div>\r\n                                                            <IoIosSend className={\"icon\"} onClick={onSendCustomer(item, \"create\")} />\r\n                                                        </div>\r\n                                                    </Tooltip> : \"\"\r\n                                            }\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            {\r\n                                                roles.includes(user.role) && item.statusSend == 'reject' ?\r\n                                                    <Tooltip title=\"Editar\" placement=\"top\">\r\n                                                        <div>\r\n                                                            <VscEdit className={\"icon\"} onClick={onSendCustomer(item, \"update\")} />\r\n                                                        </div>\r\n                                                    </Tooltip> : \"\"\r\n\r\n                                            }\r\n                                            <Tooltip title=\"Descargar\" placement=\"top\">\r\n                                                {\r\n                                                    item.downloading ?\r\n                                                        <div className='circularProgress'>\r\n                                                            <CircularProgress size={16} />\r\n                                                        </div> :\r\n                                                        <div>\r\n                                                            <AiOutlineCloudDownload className={\"icon\"} onClick={downloadAttention(item)} />\r\n                                                        </div>\r\n                                                }\r\n\r\n\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n\r\n\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n\r\n                                            {\r\n                                                item.descriptions.length > 0 ? <Tooltip title=\"Hisotoria\" placement=\"top\">\r\n                                                    <div>\r\n                                                        <BsClockHistory className={\"icon\"} onClick={onOpenModalHistory(item)} />\r\n                                                    </div>\r\n                                                </Tooltip> : \"\"\r\n                                            }\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>)\r\n                            })\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={totalAttentions}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n\r\n            <Dialog\r\n                open={openSendCustomer}\r\n                onClose={onCloseSendCustomer}>\r\n                <DialogTitle style={{ cursor: 'move' }} >\r\n                    Alerta\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <AttentionAdditionalInformationForm\r\n                            action={action}\r\n                            attention={attention}\r\n                            updateAttention={updateAttention}\r\n                            onClose={onCloseSendCustomer}\r\n                        />\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseSendCustomer} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={onCloseDeleteAttention}\r\n                aria-labelledby=\"draggable-dialog-title\">\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                    Alerta\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Esta seguro de eliminar esta atención?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseDeleteAttention} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Button onClick={onDeleteAttention} color=\"primary\">\r\n                        SI\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                fullWidth maxWidth=\"lg\"\r\n                open={openDetailAttention}\r\n                onClose={closeDetailAttention}\r\n                TransitionComponent={Transition}>\r\n                <DialogContent>\r\n                    <AttentionDetail attention={attention} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={closeDetailAttention} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={openHistory}\r\n                onClose={onCloseModalHistory}>\r\n                <DialogTitle >\r\n                    Historia\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <List className={classes.root}>\r\n                            {\r\n                                attention ?\r\n                                    attention.descriptions.map(item => {\r\n                                        return (\r\n                                            <ListItem alignItems=\"flex-start\">\r\n                                                <ListItemIcon>\r\n                                                    {getIcon(item.statusSend)}\r\n                                                </ListItemIcon>\r\n                                                <ListItemText\r\n                                                    primary={getStatus(item)}\r\n                                                    secondary={item.description}\r\n                                                />\r\n                                            </ListItem>\r\n\r\n                                        );\r\n                                    })\r\n                                    : \"\"\r\n                            }\r\n                        </List>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseModalHistory} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </Fragment>)\r\n}\r\n\r\nexport default Attentions"],"sourceRoot":""}