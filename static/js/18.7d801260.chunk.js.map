{"version":3,"sources":["views/Configuration/AuthorizationEmail.js","mutations/Configuration/configuration.js","queries/configuration.query.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","color","palette","text","secondary","button","margin","input","display","fab","marginTop","float","extendedIcon","marginRight","formControl","AuthorizationEmail","props","dataAuthorizateEmail","useQuery","Authorizate_Email","variables","id","match","params","fetchPolicy","onCompleted","setEmails","getAuthorizateEmail","valueArr","data","useMutation","Update_Authorization_Email","updateAuthorizationEmail","classes","useState","emails","onChageEmail","index","e","newEmails","map","email","currentIndex","target","value","onRemoveEmail","splice","onSubmit","preventDefault","then","response","status","Swal","fire","icon","title","showConfirmButton","timer","message","className","container","item","xs","key","fullWidth","rows","clsx","textField","variant","autoComplete","label","onChange","onClick","style","fontSize","textAlign","type","Update_Alert_Service","gql","Alert_Service"],"mappings":"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","file":"static/js/18.7d801260.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport { useMutation, useQuery } from \"@apollo/react-hooks\"\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport clsx from 'clsx';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Update_Authorization_Email } from '../../mutations/Configuration/configuration'\nimport 'react-toastify/dist/ReactToastify.css';\nimport Swal from 'sweetalert2'\nimport { Authorizate_Email } from '../../queries/configuration.query'\nimport { AiFillPlusCircle } from 'react-icons/ai'\nimport { FiTrash } from 'react-icons/fi'\nimport { IconButton } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    input: {\n        display: 'none',\n    },\n    fab: {\n        marginTop: -2,\n        float: \"right\"\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n    },\n\n}));\n\nconst AuthorizationEmail = props => {\n\n    const { data: dataAuthorizateEmail } = useQuery(Authorizate_Email, {\n        variables: { id: props.match.params.id },\n        fetchPolicy: 'no-cache',\n        onCompleted: () => {\n            setEmails(dataAuthorizateEmail.getAuthorizateEmail.valueArr)\n        }\n    })\n\n    const [updateAuthorizationEmail] = useMutation(Update_Authorization_Email)\n\n    const classes = useStyles()\n    const [emails, setEmails] = useState([])\n\n\n    const onChageEmail = index => e => {\n        let newEmails = emails.map((email, currentIndex) => {\n            if (currentIndex === index)\n                email = e.target.value\n\n            return email\n        })\n        setEmails(newEmails)\n    }\n    const onRemoveEmail = index => e => {\n        let aux = emails\n        aux.splice(index, 1)\n        setEmails([...emails])\n    }\n\n    const onAddEmail = () => {\n        setEmails(email => [...emails, \"\"])\n    }\n\n    const onUpdateAuthorizationEmail = e => {\n        updateAuthorizationEmail({\n            variables: { emails }\n        }).then(response => {\n            if (response.data.updateAuthorizationEmail.status) {\n                Swal.fire({\n                    icon: 'success',\n                    title: 'Mensaje',\n                    text: 'Operación realizada exitosamente',\n                    showConfirmButton: false,\n                    timer: 3000\n                })\n            } else {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Error',\n                    text: response.data.updateAuthorizationEmail.message,\n                    showConfirmButton: false,\n                    timer: 3000\n                })\n            }\n        })\n    }\n    return (\n        <Fragment>\n            <form onSubmit={e => {\n                e.preventDefault()\n                onUpdateAuthorizationEmail()\n            }}>\n                <Paper className={classes.paper}>\n                    <Grid container>\n                        <Grid item xs={12}>\n\n                            <Grid container spacing={1}>\n                                {\n                                    emails.map((email, index) => {\n                                        return (\n                                            <Fragment key={index}>\n                                                <Grid item xs={5}>\n                                                    <TextField fullWidth\n                                                        rows={2}\n                                                        id=\"outlined-simple-start-adornment\"\n                                                        className={clsx(classes.margin, classes.textField)}\n                                                        variant=\"outlined\"\n                                                        autoComplete='off'\n                                                        label=\"Descripción de la alerta para los servicios moviles\"\n                                                        value={email}\n                                                        onChange={onChageEmail(index)} />\n                                                </Grid>\n                                                <Grid item xs={1}>\n                                                    <IconButton onClick={onRemoveEmail(index)}>\n                                                        <FiTrash style={{ fontSize: 24, marginTop: 12 }} />\n                                                    </IconButton>\n                                                </Grid>\n                                            </Fragment>\n                                        )\n                                    })\n                                }\n\n                            </Grid>\n\n\n\n                        </Grid>\n                        <Grid container spacing={5} style={{ marginTop: 10 }}>\n                            <Grid item xs={2}>\n                                <IconButton onClick={onAddEmail}>\n                                    <AiFillPlusCircle style={{ fontSize: 32 }} />\n                                </IconButton>\n                            </Grid>\n                            <Grid item xs={10} style={{ textAlign: 'right' }}>\n                                <Button variant=\"contained\" type=\"submit\" color='primary'>Actualizar</Button>\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n                </Paper>\n            </form>\n        </Fragment >\n    )\n}\n\nexport default AuthorizationEmail;\n","import gql from 'graphql-tag'\n\n\nexport const Update_Alert_Service = gql`\n  mutation updateAlerService($text: String) \n  {\n    updateAlerService(text: $text)\n    {\n        status\n        message\n    }\n  }\n`\n\nexport const Update_Authorization_Email = gql`\n  mutation updateAuthorizationEmail($emails: [String]) \n  {\n    updateAuthorizationEmail(emails: $emails)\n    {\n        status\n        message\n    }\n  }\n`","import gql from 'graphql-tag'\n\nexport const Alert_Service = gql`{\n    getAlertService {\n      valueStr\n    }\n  }`\n\nexport const Authorizate_Email = gql`{\n  getAuthorizateEmail {\n    valueArr\n  }\n}`"],"sourceRoot":""}