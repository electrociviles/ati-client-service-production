{"version":3,"sources":["../node_modules/@material-ui/icons/Restore.js","views/Person/PersonDetail.js","views/Person/PersonForm.js","views/Person/Person.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","makeStyles","theme","root","flexGrow","height","minWidth","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","chip","margin","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","divider","paper","color","text","secondary","button","fab","marginTop","float","extendedIcon","marginRight","formControl","PersonDetail","props","console","log","classes","useState","Card","CardHeader","title","Divider","CardContent","className","content","Table","TableBody","TableRow","TableCell","person","names","selected","last_name","documentType","documentNumber","checkDigit","email","address","PersonForm","useEffect","getRoles","then","response","setRoles","roles","listCustomers","setCustomers","customers","setName","name","setDocumentNumber","document_number","setUsername","username","setRole","role","visibleCustomer","setVisibleCustomer","visibleCenterOfAttention","setVisibleCenterOfAttention","file","setFile","centerOfAttentions","setCenterOfAttentions","password","setPassword","customer","setCustomer","centerOfAttention","setCenterOfAttention","repeatPassword","setRepeatPassword","errorName","setErrorName","errorTextName","setErrorTextName","errorDocument","setErrorDocument","errorTextDocument","setErrorTextDocument","errorCustomer","setErrorCustomer","errorTextCustomer","setErrorTextCustomer","errorCenterOfAttention","setErrorCenterOfAttention","errorTextCenterOfAttention","setErrorTextCenterOfAttention","validateName","undefined","toString","trim","validateDocument","onSubmitPerson","_","errores","errors","validateForm","validateCustomer","validateCenterOfAttention","toast","error","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","formData","FormData","append","_id","updateUser","status","info","createUser","onCloseModal","message","Container","maxWidth","Paper","encType","onSubmit","e","preventDefault","Grid","container","item","xs","sm","Autocomplete","fullWidth","size","getOptionLabel","option","toUpperCase","filterOptions","x","options","autoComplete","getOptionSelected","onChange","tag","enableDisableFields","onInputChange","newInputValue","length","data","search","renderInput","params","TextField","label","variant","renderTags","tagValue","getTagProps","map","index","Chip","disabled","indexOf","renderOption","Typography","helperText","id","clsx","textField","target","listCenterOfAttention","centersOfAttention","open","filesLimit","dropzoneText","acceptedFiles","Button","iconWidth","width","icon","DialogTitle","withStyles","closeButton","right","top","children","onClose","other","disableTypography","IconButton","aria-label","onClick","Transition","React","forwardRef","ref","Slide","direction","Person","start","end","rowsPerPage","paginate","listUsers","setPersons","users","setTotalPersons","count","persons","totalPersons","page","setPage","setRowsPerPage","setOpen","openRestorePerson","setOpenRestorePerson","openDetailPerson","setOpenDetailPerson","openEditPerson","setOpenEditPerson","openCreatePerson","setOpenCreatePerson","setPersonSelected","onUpdateUsers","onOpenRestorePerson","onCloseDeletePerson","onDetailPerson","closeApu","onEditPerson","onCloseEditPerson","onCloseRestorePerson","onCloseCreatePerson","Fab","TableHead","key","Tooltip","placement","TablePagination","rowsPerPageOptions","component","onChangePage","event","newPage","onChangeRowsPerPage","Dialog","aria-labelledby","style","cursor","DialogContent","DialogContentText","DialogActions","autoFocus","deleteUser","success","newPersons","currentPerson","estado","catch","restoreUser","TransitionComponent","handleClose","modal"],"mappings":"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","file":"static/js/16.9d58659d.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z\"\n}), 'Restore');\n\nexports.default = _default;","import React, { useState } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport PersonIcon from '@material-ui/icons/PersonOutline';\r\n\r\nimport { Label } from 'components';\r\n\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250,\r\n    minWidth: 290\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n\r\n  },\r\n  button:\r\n  {\r\n    margin: theme.spacing(1),\r\n  },\r\n  fab:\r\n  {\r\n    marginTop: -2,\r\n    float: \"right\"\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst PersonDetail = props => {\r\n\r\n  console.log('props', props)\r\n\r\n  const classes = useStyles()\r\n\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n\r\n  const handleEditOpen = () => {\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleEditClose = () => {\r\n    setOpenEdit(false);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Detalle Usuario\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Nombres</TableCell>\r\n              <TableCell>{props.person.names}</TableCell>\r\n            </TableRow>\r\n            <TableRow selected>\r\n              <TableCell>Apellidos</TableCell>\r\n              <TableCell>{props.person.last_name}</TableCell>\r\n            </TableRow>\r\n            \r\n            <TableRow>\r\n              <TableCell>Tipo de documento</TableCell>\r\n              <TableCell>{props.person.documentType ? props.person.documentType.documentType : ''}</TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow selected>\r\n              <TableCell>Número de documento</TableCell>\r\n              <TableCell>{props.person.documentNumber} {props.person.checkDigit >= 0 ? props.person.checkDigit : ''}</TableCell>\r\n            </TableRow>\r\n\r\n            \r\n            <TableRow>\r\n              <TableCell>Correo electrónico</TableCell>\r\n              <TableCell>{props.person.email}</TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow selected>\r\n              <TableCell>Dirección</TableCell>\r\n              <TableCell>{props.person.address}</TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow >\r\n              <TableCell>Correo electrónico</TableCell>\r\n              <TableCell>{props.person.email}</TableCell>\r\n            </TableRow>\r\n\r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PersonDetail","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Container from '@material-ui/core/Container'\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Button } from '@material-ui/core'\r\nimport { DropzoneArea } from 'material-ui-dropzone'\r\n\r\nimport PropTypes from \"prop-types\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport { createUser, updateUser, getRoles, listCenterOfAttention, listCustomers } from '../../api/api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250,\r\n    minWidth: 290\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n\r\n  },\r\n  button:\r\n  {\r\n    margin: theme.spacing(1),\r\n  },\r\n  fab:\r\n  {\r\n    marginTop: -2,\r\n    float: \"right\"\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.shape({\r\n      current: PropTypes.any.isRequired\r\n    })\r\n  ])\r\n}\r\nconst PersonForm = props => {\r\n\r\n  useEffect(() => {\r\n    console.log(props)\r\n\r\n    getRoles().then(response => {\r\n      setRoles(response.roles);\r\n    })\r\n    listCustomers().then(response => {\r\n      setCustomers(response.customers);\r\n    })\r\n\r\n    if (props.person) {\r\n\r\n      setName(props.person.name);\r\n      setDocumentNumber(props.person.document_number);\r\n      setUsername(props.person.username);\r\n      setRole(props.person.role);\r\n    }\r\n  }, [])\r\n\r\n  const [visibleCustomer, setVisibleCustomer] = useState(false)\r\n  const [visibleCenterOfAttention, setVisibleCenterOfAttention] = useState(false)\r\n\r\n  const [file, setFile] = useState({})\r\n  const classes = useStyles()\r\n\r\n  const [centerOfAttentions, setCenterOfAttentions] = useState([]);\r\n  const [customers, setCustomers] = useState([]);\r\n\r\n\r\n  const [roles, setRoles] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [documentNumber, setDocumentNumber] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [customer, setCustomer] = useState('');\r\n  const [centerOfAttention, setCenterOfAttention] = useState('');\r\n  const [repeatPassword, setRepeatPassword] = useState('');\r\n  const [role, setRole] = useState(null);\r\n\r\n  const [errorName, setErrorName] = useState(false)\r\n  const [errorTextName, setErrorTextName] = useState('')\r\n\r\n  const [errorDocument, setErrorDocument] = useState(false)\r\n  const [errorTextDocument, setErrorTextDocument] = useState('')\r\n\r\n  const [errorCustomer, setErrorCustomer] = useState(false)\r\n  const [errorTextCustomer, setErrorTextCustomer] = useState('')\r\n\r\n  const [errorCenterOfAttention, setErrorCenterOfAttention] = useState(false)\r\n  const [errorTextCenterOfAttention, setErrorTextCenterOfAttention] = useState('')\r\n\r\n  const handlePicture = file => {\r\n    setFile(file[0])\r\n  }\r\n  const onChangeName = e => {\r\n    setName(e.target.value);\r\n    validateName(e.target.value);\r\n  }\r\n  const onChangeDocumentNumber = e => {\r\n    setDocumentNumber(e.target.value);\r\n    validateDocument(e.target.value);\r\n  }\r\n  const onChangeUserame = e => {\r\n    setUsername(e.target.value)\r\n  }\r\n  const onChangePassword = e => {\r\n    setPassword(e.target.value)\r\n  }\r\n  const onChangeRepeatPassword = e => {\r\n    setRepeatPassword(e.target.value)\r\n  }\r\n  const validateForm = () => {\r\n    let errors = 0\r\n    errors += validateName()\r\n    // errors += validatePrice()\r\n    // errors += validateQuantity()\r\n    return errors\r\n  }\r\n  const validateName = (value) => {\r\n    let text = value !== undefined ? value : name\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorName(true)\r\n      setErrorTextName('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorName(false)\r\n      setErrorTextName('')\r\n      return 0\r\n    }\r\n  }\r\n  const validateDocument = (value) => {\r\n    let text = value !== undefined ? value : documentNumber\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorDocument(true)\r\n      setErrorTextDocument('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorDocument(false)\r\n      setErrorTextDocument('')\r\n      return 0\r\n    }\r\n  }\r\n  const validateCustomer = (value) => {\r\n    let text = value !== undefined ? value : customer\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorCustomer(true)\r\n      setErrorTextCustomer('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorCustomer(false)\r\n      setErrorTextCustomer('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validateCenterOfAttention = (value) => {\r\n    let text = value !== undefined ? value : centerOfAttention\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorCenterOfAttention(true)\r\n      setErrorTextCenterOfAttention('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorCenterOfAttention(false)\r\n      setErrorTextCenterOfAttention('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const enableDisableFields = role => {\r\n    switch (role.tag) {\r\n      case \"construction_manager\":\r\n      case \"maintenance_manager\":\r\n        setVisibleCustomer(true);\r\n        setVisibleCenterOfAttention(false);\r\n        break;\r\n\r\n      case \"oset\":\r\n      case \"permanent\":\r\n        setVisibleCustomer(true);\r\n        setVisibleCenterOfAttention(true);\r\n        break;\r\n    }\r\n  }\r\n\r\n  const onSubmitPerson = _ => {\r\n\r\n    let errores = validateForm()\r\n    errores += validateDocument();\r\n    if (visibleCustomer) {\r\n      errores += validateCustomer();\r\n    }\r\n    if (visibleCenterOfAttention) {\r\n      errores += validateCenterOfAttention();\r\n    }\r\n\r\n    if (password && repeatPassword) {\r\n      if (password !== repeatPassword) {\r\n        errores++;\r\n        toast.error('Las contraseñas no son iguales', {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }\r\n    }\r\n\r\n\r\n\r\n    if (errores === 0) {\r\n      const formData = new FormData();\r\n      if (props.person) {\r\n        formData.append(\"id\", props.person._id);\r\n      }\r\n      formData.append(\"photo\", file);\r\n      formData.append(\"name\", name);\r\n      formData.append(\"username\", username);\r\n      formData.append(\"documentNumber\", documentNumber);\r\n      formData.append(\"role\", role._id);\r\n      formData.append(\"password\", password);\r\n      formData.append(\"customer\", customer);\r\n      formData.append(\"centerOfAttention\", centerOfAttention);\r\n\r\n      if (!props.person) {\r\n        createUser(formData).then(response => {\r\n          console.log('response', response);\r\n          if (response.status == 'success') {\r\n            toast.info('Funcionario registrado exitosamente', {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n            props.onCloseModal(true);\r\n            // props.onUpdateUsers();\r\n          } else {\r\n            toast.error(response.message, {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n          }\r\n\r\n        });\r\n\r\n      } else {\r\n\r\n        updateUser(formData).then(response => {\r\n          console.log('response', response);\r\n          if (response.status == 'success') {\r\n            toast.info('Funcionario registrado exitosamente', {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n          } else {\r\n            toast.error('Ocurrió un error al registrar el funcionario', {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n          }\r\n\r\n        });\r\n      }\r\n    } else {\r\n      toast.error('Faltan campos obligatorios por llenar', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <ToastContainer />\r\n      <Container maxWidth=\"md\">\r\n\r\n        <Paper className={classes.paper}>\r\n          <form encType={'multipart/form-data'}\r\n            onSubmit={e => {\r\n              e.preventDefault()\r\n              onSubmitPerson()\r\n            }} >\r\n            <Grid container spacing={3}>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n\r\n                <Autocomplete\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  getOptionLabel={\r\n                    (option) => {\r\n                      return `${option.name.toString().toUpperCase()} `\r\n                    }\r\n                  }\r\n                  filterOptions={(x) => x}\r\n                  options={roles}\r\n                  autoComplete\r\n                  getOptionSelected={(option, value) => option === value}\r\n                  onChange={(_, value) => {\r\n                    setRole(value);\r\n                    enableDisableFields(value);\r\n\r\n                  }}\r\n                  onInputChange={(_, newInputValue) => {\r\n                    if (newInputValue.toString().trim().length > 0) {\r\n                      let data = {\r\n                        search: newInputValue.toString().trim()\r\n                      }\r\n                      getRoles(data).then(response => {\r\n                        setRoles(response.roles);\r\n                      })\r\n                    }\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} label=\"Roles\" variant=\"outlined\" margin=\"dense\" />\r\n                  )}\r\n                  renderTags={(tagValue, getTagProps) =>\r\n                    tagValue.map((option, index) => (\r\n                      <Chip\r\n                        label={option.name}\r\n                        {...getTagProps({ index })}\r\n                        disabled={roles.indexOf(option) !== -1}\r\n                      />\r\n                    ))\r\n                  }\r\n                  renderOption={(option) => {\r\n\r\n                    return (\r\n                      <Grid container alignItems=\"center\">\r\n                        <Grid item xs>\r\n                          <Typography >{`${option.name.toString().toUpperCase()}`}</Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    );\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  error={errorName}\r\n                  helperText={errorTextName}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Nombre\"\r\n                  value={name}\r\n                  onChange={onChangeName} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  error={errorDocument}\r\n                  helperText={errorTextDocument}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  value={documentNumber}\r\n                  onChange={onChangeDocumentNumber}\r\n                  label=\"Documento\" />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Nombre de usuario\"\r\n                  value={username}\r\n                  onChange={onChangeUserame} />\r\n              </Grid>\r\n\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  type='password'\r\n                  label=\"Contraseña\"\r\n                  onChange={onChangePassword} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  type='password'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Repite la contraseña\"\r\n                  onChange={onChangeRepeatPassword} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                {\r\n                  visibleCustomer ?\r\n                    <Autocomplete\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      getOptionLabel={\r\n                        (option) => {\r\n                          return `${option.name.toString().toUpperCase()} `\r\n                        }\r\n                      }\r\n                      filterOptions={(x) => x}\r\n                      options={customers}\r\n                      autoComplete\r\n                      getOptionSelected={(option, value) => option === value}\r\n                      onChange={(_, value) => {\r\n                        setCustomer(value._id)\r\n                        listCenterOfAttention({ customer: value._id }).then(response => {\r\n                          setCenterOfAttentions(response.centersOfAttention);\r\n                        })\r\n                      }}\r\n                      onInputChange={(_, newInputValue) => {\r\n                        if (newInputValue.toString().trim().length > 0) {\r\n                          let data = {\r\n                            search: newInputValue.toString().trim()\r\n                          }\r\n                          listCustomers(data).then(response => {\r\n                            setCustomers(response.customers);\r\n                          })\r\n                        }\r\n                      }}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          error={errorCustomer}\r\n                          helperText={errorTextCustomer}\r\n                          {...params}\r\n                          label=\"Cliente\"\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\" />\r\n                      )}\r\n                      renderTags={(tagValue, getTagProps) =>\r\n                        tagValue.map((option, index) => (\r\n                          <Chip\r\n                            label={option.name}\r\n                            {...getTagProps({ index })}\r\n                            disabled={roles.indexOf(option) !== -1}\r\n                          />\r\n                        ))\r\n                      }\r\n                      renderOption={(option) => {\r\n\r\n                        return (\r\n                          <Grid container alignItems=\"center\">\r\n                            <Grid item xs>\r\n                              <Typography >{`${option.name.toString().toUpperCase()}`}</Typography>\r\n                            </Grid>\r\n                          </Grid>\r\n                        );\r\n                      }}\r\n                    /> : \"\"\r\n                }\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                {\r\n                  visibleCenterOfAttention ?\r\n                    <Autocomplete\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      getOptionLabel={\r\n                        (option) => {\r\n                          return `${option.title.toString().toUpperCase()} `\r\n                        }\r\n                      }\r\n                      filterOptions={(x) => x}\r\n                      options={centerOfAttentions}\r\n                      autoComplete\r\n                      getOptionSelected={(option, value) => option === value}\r\n                      onChange={(_, value) => {\r\n                        setCenterOfAttention(value._id);\r\n                      }}\r\n                      onInputChange={(_, newInputValue) => {\r\n                        if (newInputValue.toString().trim().length > 0) {\r\n                          let data = {\r\n                            search: newInputValue.toString().trim()\r\n                          }\r\n                          listCenterOfAttention(data).then(response => {\r\n                            setCenterOfAttentions(response.centersOfAttention);\r\n                          });\r\n                        }\r\n                      }}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          error={errorCenterOfAttention}\r\n                          helperText={errorTextCenterOfAttention}\r\n                          label=\"Centro de atención\"\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\" />\r\n                      )}\r\n                      renderTags={(tagValue, getTagProps) =>\r\n                        tagValue.map((option, index) => (\r\n                          <Chip\r\n                            label={option.title}\r\n                            {...getTagProps({ index })}\r\n                            disabled={roles.indexOf(option) !== -1}\r\n                          />\r\n                        ))\r\n                      }\r\n                      renderOption={(option) => {\r\n\r\n                        return (\r\n                          <Grid container alignItems=\"center\">\r\n                            <Grid item xs>\r\n                              <Typography >{`${option.title.toString().toUpperCase()}`}</Typography>\r\n                            </Grid>\r\n                          </Grid>\r\n                        );\r\n                      }}\r\n                    />\r\n                    : \"\"\r\n                }\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <DropzoneArea\r\n                  open={true}\r\n                  filesLimit={1}\r\n                  dropzoneText=\"Arrastre y suelte un archivo de imagen aquí o haga clic\"\r\n                  acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\r\n                  onChange={handlePicture} />\r\n\r\n              </Grid>\r\n\r\n\r\n              <Grid item xs={2} sm={3}>\r\n                <Button type=\"submit\" variant=\"contained\" color='primary'>\r\n                  {props.person ? \"Actualizar\" : \"Guardar\"}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React, { useState, useEffect, Fragment } from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport PersonDetail from './PersonDetail'\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport PersonForm from \"./../Person/PersonForm\";\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { deleteUser, restoreUser, listUsers } from '../../api/api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    iconWidth: {\r\n        width: 10\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    fab: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(1),\r\n        color: 'black'\r\n    },\r\n}))\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n})\r\n\r\n\r\n\r\nconst Person = _ => {\r\n\r\n    useEffect(() => {\r\n        let data = { start: 0, end: rowsPerPage, paginate: true }\r\n\r\n        listUsers(data).then(response => {\r\n            setPersons(response.users);\r\n            setTotalPersons(response.count);\r\n        });\r\n    }, []);\r\n\r\n\r\n\r\n    const classes = useStyles()\r\n\r\n    const [persons, setPersons] = useState([])\r\n    const [totalPersons, setTotalPersons] = useState(0)\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [openRestorePerson, setOpenRestorePerson] = useState(false);\r\n    const [openDetailPerson, setOpenDetailPerson] = useState(false);\r\n    const [openEditPerson, setOpenEditPerson] = useState(false);\r\n    const [openCreatePerson, setOpenCreatePerson] = useState(false);\r\n    const [person, setPersonSelected] = useState({})\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n        let data = { start: (newPage * rowsPerPage), end: rowsPerPage, paginate: true }\r\n        listUsers(data).then(response => {\r\n            setPersons(response.users);\r\n            setTotalPersons(response.count);\r\n        });\r\n    }\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n        let data = { start: 0, end: event.target.value, paginate: true }\r\n        listUsers(data).then(response => {\r\n            setPersons(response.users);\r\n            setTotalPersons(response.count);\r\n        });\r\n    }\r\n    const onUpdateUsers = () => {\r\n        listUsers().then(response => {\r\n            setPersons(response.users);\r\n            setTotalPersons(response.count);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const onOpenDeletePerson = id => () => {\r\n        setPersonSelected(id)\r\n        setOpen(true);\r\n    }\r\n\r\n    const onOpenRestorePerson = id => () => {\r\n        setPersonSelected(id)\r\n        setOpenRestorePerson(true);\r\n    }\r\n\r\n    const onCloseDeletePerson = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const onDeletePerson = () => {\r\n        setOpen(false);\r\n\r\n        deleteUser(person).then(response => {\r\n            if (response.status === 'success') {\r\n                toast.success(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                const newPersons = persons.map((currentPerson) => {\r\n                    if (person !== currentPerson._id)\r\n                        return currentPerson\r\n\r\n                    currentPerson.estado = \"inactivo\";\r\n                    return currentPerson\r\n                })\r\n                setPersons(newPersons)\r\n            } else {\r\n                toast.error(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }).catch(e => {\r\n\r\n            toast.error('Ocurrió un error al desactivar el funcionario', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        })\r\n\r\n    }\r\n\r\n    const onRestorePerson = () => {\r\n\r\n        setOpenRestorePerson(false)\r\n\r\n        restoreUser(person).then(response => {\r\n            if (response.status === 'success') {\r\n                toast.success(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                const newPersons = persons.map((currentPerson) => {\r\n                    if (person !== currentPerson._id)\r\n                        return currentPerson\r\n\r\n                    currentPerson.estado = \"activo\";\r\n                    return currentPerson\r\n                })\r\n                setPersons(newPersons)\r\n            } else {\r\n                toast.error(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }).catch(e => {\r\n            toast.error('Ocurrió un error al activar el funcionario', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        })\r\n    }\r\n\r\n    const onDetailPerson = person => () => {\r\n        setPersonSelected(person)\r\n        setOpenDetailPerson(true)\r\n    }\r\n\r\n    const closeApu = () => {\r\n        setOpenDetailPerson(false)\r\n    }\r\n\r\n    const onEditPerson = person => () => {\r\n        setPersonSelected(person)\r\n        setOpenEditPerson(true)\r\n    }\r\n\r\n    const onCloseEditPerson = () => {\r\n        setOpenEditPerson(false)\r\n    }\r\n\r\n    const onCloseRestorePerson = () => {\r\n        setOpenRestorePerson(false)\r\n    }\r\n\r\n    const onCreatePerson = () => {\r\n        setOpenCreatePerson(true)\r\n    }\r\n\r\n    const onCloseCreatePerson = () => {\r\n        setOpenCreatePerson(false)\r\n    }\r\n\r\n    const onCloseModal = () => {\r\n        setOpenCreatePerson(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <Paper className={classes.paper}>\r\n                <Fab onClick={onCreatePerson} variant=\"extended\" color=\"primary\" size=\"small\" className={classes.margin}>\r\n                    <AddIcon className={classes.extendedIcon} />\r\n                    Crear usuario\r\n                </Fab>\r\n\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>FUNCIONARIO</TableCell>\r\n                            <TableCell>DOCUMENTO</TableCell>\r\n                            <TableCell>NOMBRE DE USUARIO</TableCell>\r\n                            <TableCell>ROL</TableCell>\r\n                            <TableCell>FOTO</TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            persons.map(item => {\r\n\r\n                                return (\r\n                                    <TableRow key={item._id}>\r\n                                        <TableCell>{item.name} </TableCell>\r\n                                        <TableCell>{item.document_number}</TableCell>\r\n                                        <TableCell>{item.username}</TableCell>\r\n                                        <TableCell>{item.role ? item.role.name : \"\"}</TableCell>\r\n                                        <TableCell>{item.username}</TableCell>\r\n\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            <Tooltip title=\"Detalle\" placement=\"top\">\r\n                                                <SearchIcon className={classes.icon} onClick={onDetailPerson(item)} />\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            <Tooltip title=\"Editar\" placement=\"top\">\r\n                                                <EditIcon className={classes.icon} onClick={onEditPerson(item)} />\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            <Tooltip title={item.status} placement=\"top\">\r\n                                                {\r\n                                                    item.status === 'activo' ?\r\n                                                        <DeleteIcon className={classes.icon} onClick={onOpenDeletePerson(item._id)} />\r\n                                                        :\r\n                                                        <RestoreIcon className={classes.icon} onClick={onOpenRestorePerson(item._id)} />\r\n                                                }\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                    </TableRow>)\r\n                            }\r\n                            )}\r\n                    </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={totalPersons}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={onCloseDeletePerson}\r\n                aria-labelledby=\"draggable-dialog-title\">\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                    Alerta\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Esta seguro de eliminar este funcionario?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseDeletePerson} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Button onClick={onDeletePerson} color=\"primary\">\r\n                        SI\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={openRestorePerson}\r\n                onClose={onCloseRestorePerson}\r\n                aria-labelledby=\"draggable-dialog-title\">\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                    Alerta\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Esta seguro de Reactivar a esta persona?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseRestorePerson} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Button onClick={onRestorePerson} color=\"primary\">\r\n                        SI\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={openDetailPerson} onClose={closeApu} TransitionComponent={Transition}>\r\n                <DialogContent>\r\n                    <PersonDetail person={person} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={closeApu} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog maxWidth=\"md\" open={openEditPerson} onClose={onCloseEditPerson} TransitionComponent={Transition}>\r\n                <DialogContent>\r\n                    <PersonForm onCloseModal={onCloseModal} onUpdateUsers={onUpdateUsers} person={person} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseEditPerson} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n                open={openCreatePerson}>\r\n                <DialogTitle onClose={onCloseCreatePerson} >Crear usuario</DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <PersonForm handleClose={onCloseCreatePerson} onCloseModal={onCloseModal} onUpdateUsers={onUpdateUsers} modal={true} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCreatePerson} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Fragment>)\r\n}\r\n\r\nexport default Person"],"sourceRoot":""}