{"version":3,"sources":["views/Customer/CustomerDetail.js","views/Customer/CustomerForm.js","views/Customer/Customers.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","height","minWidth","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","chip","margin","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","divider","paper","color","text","secondary","button","fab","marginTop","float","extendedIcon","marginRight","formControl","CustomerDetail","props","console","log","classes","useState","Card","CardHeader","title","Divider","CardContent","className","content","Table","TableBody","TableRow","TableCell","customer","name","selected","nit","address","phone","email","CustomerForm","useEffect","setName","setNit","setAddress","setPhone","setEmail","disabled","username","setUsername","password","setPassword","setErrorUsername","setErrorTextUsername","setErrorPassword","setErrorTextPassword","errorName","setErrorName","errorTextName","setErrorTextName","errorNit","setErrorNit","errorTextNit","setErrorTextNit","errorEmail","setErrorEmail","errorTextEmail","setErrorTextEmail","validateName","value","undefined","toString","trim","validateNit","validateEmail","validateUsername","validatePassword","onSubmitCustomer","_","errors","validateForm","data","id","_id","updateCustomer","then","response","status","toast","info","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","onCloseModal","onUpdateCustomers","error","createCustomer","message","Container","maxWidth","Paper","encType","onSubmit","e","preventDefault","Grid","container","item","xs","sm","TextField","fullWidth","helperText","autoComplete","clsx","textField","variant","label","onChange","target","Button","iconWidth","width","icon","DialogTitle","withStyles","closeButton","right","top","children","onClose","other","disableTypography","Typography","IconButton","aria-label","onClick","Transition","React","forwardRef","ref","Slide","direction","Customers","start","end","rowsPerPage","paginate","listCustomers","setCustomers","customers","setTotalCustomers","count","totalCustomers","page","setPage","setRowsPerPage","open","setOpen","openRestoreCustomer","setOpenRestoreCustomer","openDetailCustomer","setOpenDetailCustomer","openEditCustomer","setOpenEditCustomer","openCreateCustomer","setOpenCreateCustomer","setCustomerSelected","onOpenRestoreCustomer","onCloseDeleteCustomer","onDetailCustomer","closeDetailCustomer","onEditCustomer","onCloseEditCustomer","onCloseRestoreCustomer","onCloseCreateCustomer","Fab","size","TableHead","map","key","Tooltip","placement","TablePagination","rowsPerPageOptions","component","onChangePage","event","newPage","onChangeRowsPerPage","Dialog","aria-labelledby","style","cursor","DialogContent","DialogContentText","DialogActions","autoFocus","deleteCustomer","success","newCustomers","currentCustomer","catch","restoreCustomer","estado","TransitionComponent","handleClose","modal"],"mappings":"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","file":"static/js/13.7d2ea5d7.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\n\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n    minWidth: 290\n  },\n  input: {\n    display: \"flex\",\n    padding: 0,\n    height: \"auto\"\n  },\n  valueContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flex: 1,\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: theme.spacing(1, 2)\n  },\n  singleValue: {\n    fontSize: 16\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 2,\n    bottom: 6,\n    fontSize: 16\n  },\n\n  divider: {\n    height: theme.spacing(2)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n\n  },\n  button:\n  {\n    margin: theme.spacing(1),\n  },\n  fab:\n  {\n    marginTop: -2,\n    float: \"right\"\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}))\n\nconst CustomerDetail = props => {\n\n  console.log('props', props)\n\n  const classes = useStyles()\n\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <Card>\n      <CardHeader title=\"Detalle Usuario\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Nombres</TableCell>\n              <TableCell>{props.customer.name}</TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>Nit</TableCell>\n              <TableCell>{props.customer.nit}</TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell>Dirección</TableCell>\n              <TableCell>{props.customer.address}</TableCell>\n            </TableRow>\n\n            <TableRow selected>\n              <TableCell>Telefono</TableCell>\n              <TableCell>{props.customer.phone}</TableCell>\n            </TableRow>\n\n\n            <TableRow>\n              <TableCell>Correo electrónico</TableCell>\n              <TableCell>{props.customer.email}</TableCell>\n            </TableRow>\n\n          </TableBody>\n        </Table>\n      </CardContent>\n\n    </Card>\n  )\n}\n\nexport default CustomerDetail","import React, { Fragment, useState, useEffect } from 'react'\nimport { emphasize, makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Container from '@material-ui/core/Container'\n\nimport clsx from 'clsx'\n\nimport { Button } from '@material-ui/core'\nimport { DropzoneArea } from 'material-ui-dropzone'\n\nimport PropTypes from \"prop-types\"\nimport TextField from \"@material-ui/core/TextField\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport { createCustomer, updateCustomer } from '../../api/api';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n    minWidth: 290\n  },\n  input: {\n    display: \"flex\",\n    padding: 0,\n    height: \"auto\"\n  },\n  valueContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flex: 1,\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: theme.spacing(1, 2)\n  },\n  singleValue: {\n    fontSize: 16\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 2,\n    bottom: 6,\n    fontSize: 16\n  },\n\n  divider: {\n    height: theme.spacing(2)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n\n  },\n  button:\n  {\n    margin: theme.spacing(1),\n  },\n  fab:\n  {\n    marginTop: -2,\n    float: \"right\"\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}))\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />\n}\n\ninputComponent.propTypes = {\n  inputRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({\n      current: PropTypes.any.isRequired\n    })\n  ])\n}\nconst CustomerForm = props => {\n\n\n  useEffect(() => {\n    console.log(props)\n\n    if (props.customer) {\n      setName(props.customer.name);\n      setNit(props.customer.nit);\n      setAddress(props.customer.address);\n      setPhone(props.customer.phone);\n      setEmail(props.customer.email);\n    }\n  }, [])\n\n  const [disabled, setDisabled] = useState(false)\n\n  const classes = useStyles()\n\n\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [nit, setNit] = useState('');\n  const [address, setAddress] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n\n  const [errorUsername, setErrorUsername] = useState(false)\n  const [errorTextUsername, setErrorTextUsername] = useState('')\n\n  const [errorPassword, setErrorPassword] = useState(false)\n  const [errorTextPassword, setErrorTextPassword] = useState('')\n\n  const [errorName, setErrorName] = useState(false)\n  const [errorTextName, setErrorTextName] = useState('')\n\n  const [errorNit, setErrorNit] = useState(false)\n  const [errorTextNit, setErrorTextNit] = useState('')\n\n  const [errorAddress, setErrorAddress] = useState(false)\n  const [errorTextAddress, setErrorTextAddress] = useState('')\n\n  const [errorPhone, setErrorPhone] = useState(false)\n  const [errorTextPhone, setErrorTextPhone] = useState('')\n\n  const [errorEmail, setErrorEmail] = useState(false)\n  const [errorTextEmail, setErrorTextEmail] = useState('')\n\n  const onChangeName = e => {\n    setName(e.target.value);\n    validateName(e.target.value);\n  }\n  const onChangeNit = e => {\n    setNit(e.target.value);\n    validateNit(e.target.value);\n  }\n  const onChangeAddress = e => {\n    setAddress(e.target.value)\n  }\n  const onChangePhone = e => {\n    setPhone(e.target.value)\n  }\n  const onChangeEmail = e => {\n    setEmail(e.target.value)\n  }\n  const onChangeUsername = e => {\n    setUsername(e.target.value);\n    validateUsername(e.target.value);\n  }\n  const onChangePassword = e => {\n    setPassword(e.target.value);\n    validatePassword(e.target.value);\n  }\n  const validateForm = () => {\n    let errors = 0\n    errors += validateName()\n    errors += validateEmail()\n    errors += validateNit()\n    return errors\n  }\n\n  const validateName = (value) => {\n    let text = value !== undefined ? value : name\n\n    if (text == null || text.toString().trim() === '') {\n      setErrorName(true)\n      setErrorTextName('Este campo es requerido')\n      return 1\n    }\n    else {\n      setErrorName(false)\n      setErrorTextName('')\n      return 0\n    }\n  }\n\n  const validateNit = (value) => {\n    let text = value !== undefined ? value : nit\n\n    if (text == null || text.toString().trim() === '') {\n      setErrorNit(true)\n      setErrorTextNit('Este campo es requerido')\n      return 1\n    }\n    else {\n      setErrorNit(false)\n      setErrorTextNit('')\n      return 0\n    }\n  }\n\n  const validateEmail = (value) => {\n    let text = value !== undefined ? value : email\n\n    if (text == null || text.toString().trim() === '') {\n      setErrorEmail(true)\n      setErrorTextEmail('Este campo es requerido')\n      return 1\n    }\n    else {\n      setErrorEmail(false)\n      setErrorTextEmail('')\n      return 0\n    }\n  }\n\n  const validateUsername = (value) => {\n    let text = value !== undefined ? value : username\n\n    if (text == null || text.toString().trim() === '') {\n      setErrorUsername(true)\n      setErrorTextUsername('Este campo es requerido')\n      return 1\n    }\n    else {\n      setErrorUsername(false)\n      setErrorTextUsername('')\n      return 0\n    }\n  }\n\n  const validatePassword = (value) => {\n    let text = value !== undefined ? value : password\n\n    if (text == null || text.toString().trim() === '') {\n      setErrorPassword(true)\n      setErrorTextPassword('Este campo es requerido')\n      return 1\n    }\n    else {\n      setErrorPassword(false)\n      setErrorTextPassword('')\n      return 0\n    }\n  }\n\n  const onSubmitCustomer = _ => {\n\n    let errores = validateForm()\n\n    if (errores === 0) {\n\n      let data = {\n        name,\n        nit,\n        address,\n        phone,\n        email,\n        username,\n        password,\n      }\n\n      if (!props.customer) {\n        createCustomer(data).then(response => {\n          console.log('response', response);\n          if (response.status == 'success') {\n            toast.info('Cliente registrado exitosamente', {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n            props.onCloseModal(true);\n            props.onUpdateCustomers();\n          } else {\n            toast.error(response.message, {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          }\n\n        });\n\n      } else {\n        data.id = props.customer._id;\n        updateCustomer(data).then(response => {\n          console.log('response', response);\n          if (response.status == 'success') {\n            toast.info('Cliente actualizado exitosamente', {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n            props.onCloseModal(true);\n            props.onUpdateCustomers();\n          } else {\n            toast.error('Ocurrió un error al registrar el cliente', {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          }\n\n        });\n      }\n    }\n  }\n\n\n  return (\n    <Fragment>\n      <ToastContainer />\n      <Container maxWidth=\"md\">\n\n        <Paper className={classes.paper}>\n          <form encType={'multipart/form-data'}\n            onSubmit={e => {\n              e.preventDefault()\n              onSubmitCustomer()\n            }} >\n            <Grid container spacing={3}>\n\n\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  error={errorName}\n                  helperText={errorTextName}\n                  margin=\"dense\"\n                  autoComplete='off'\n                  id=\"outlined-simple-start-adornment\"\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Nombre\"\n                  value={name}\n                  onChange={onChangeName} />\n              </Grid>\n\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  error={errorNit}\n                  helperText={errorTextNit}\n                  margin=\"dense\"\n                  autoComplete='off'\n                  id=\"outlined-simple-start-adornment\"\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  value={nit}\n                  onChange={onChangeNit}\n                  label=\"Nit\" />\n              </Grid>\n\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  autoComplete='off'\n                  id=\"outlined-simple-start-adornment\"\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Direccion\"\n                  value={address}\n                  onChange={onChangeAddress} />\n              </Grid>\n\n\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  autoComplete='off'\n                  id=\"outlined-simple-start-adornment\"\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Telefono\"\n                  value={phone}\n                  onChange={onChangePhone} />\n              </Grid>\n\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  error={errorEmail}\n                  helperText={errorTextEmail}\n                  margin=\"dense\"\n                  autoComplete='off'\n                  id=\"outlined-simple-start-adornment\"\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  value={email}\n                  label=\"Correo\"\n                  onChange={onChangeEmail} />\n              </Grid>\n\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  autoComplete='off'\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Nombre de usuario\"\n                  value={username}\n                  onChange={onChangeUsername} />\n              </Grid>\n\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  autoComplete='off'\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Contraseña\"\n                  value={password}\n                  onChange={onChangePassword} />\n              </Grid>\n\n\n\n\n\n              <Grid item xs={2} sm={12}>\n                <Button disabled={disabled} type=\"submit\" variant=\"contained\" color='primary'>\n                  {props.customer ? \"Actualizar\" : \"Guardar\"}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n\n      </Container>\n    </Fragment>\n  )\n}\n\nexport default CustomerForm","import React, { useState, useEffect, Fragment } from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport CustomerDetail from './CustomerDetail'\nimport { Button } from '@material-ui/core';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Slide from '@material-ui/core/Slide';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport CustomerForm from \"../Customer/CustomerForm\";\n\nimport Tooltip from '@material-ui/core/Tooltip'\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { deleteCustomer, restoreCustomer, listCustomers } from '../../api/api';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    iconWidth: {\n        width: 10\n    },\n    paper: {\n        padding: theme.spacing(2),\n        marginTop: 10,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    input: {\n        display: 'none',\n    },\n    fab: {\n        margin: theme.spacing(1),\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n        color: 'black'\n    },\n}))\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n})\n\n\n\nconst Customers = _ => {\n\n    useEffect(() => {\n        let data = { start: 0, end: rowsPerPage, paginate: true }\n        listCustomers(data).then(response => {\n            setCustomers(response.customers);\n            setTotalCustomers(response.count);\n        });\n    }, []);\n\n    const classes = useStyles()\n\n    const [customers, setCustomers] = useState([])\n    const [totalCustomers, setTotalCustomers] = useState(0)\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(2);\n\n\n    const [open, setOpen] = useState(false);\n    const [openRestoreCustomer, setOpenRestoreCustomer] = useState(false);\n    const [openDetailCustomer, setOpenDetailCustomer] = useState(false);\n    const [openEditCustomer, setOpenEditCustomer] = useState(false);\n    const [openCreateCustomer, setOpenCreateCustomer] = useState(false);\n    const [customer, setCustomerSelected] = useState({})\n\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n        let data = { start: newPage, end: rowsPerPage, paginate: true }\n        listCustomers(data).then(response => {\n            setCustomers(response.customers);\n            setTotalCustomers(response.count);\n        });\n    }\n    const handleChangeRowsPerPage = event => {\n\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n        let data = { start: 0, end: event.target.value, paginate: true }\n        listCustomers(data).then(response => {\n            setCustomers(response.customers);\n            setTotalCustomers(response.count);\n        });\n\n    }\n\n    const onUpdateCustomers = () => {\n        listCustomers().then(response => {\n            console.log(response);\n            setCustomers(response.customers);\n            setTotalCustomers(response.count);\n        });\n    }\n\n    const onOpenDeleteCustomer = id => () => {\n        setCustomerSelected(id)\n        setOpen(true);\n    }\n\n    const onOpenRestoreCustomer = id => () => {\n        setCustomerSelected(id)\n        setOpenRestoreCustomer(true);\n    }\n\n    const onCloseDeleteCustomer = () => {\n        setOpen(false);\n    }\n\n    const onDeleteCustomer = () => {\n        setOpen(false);\n\n        deleteCustomer(customer).then(response => {\n            if (response.status === 'success') {\n                toast.success(response.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n                const newCustomers = customers.map((currentCustomer) => {\n                    if (customer !== currentCustomer._id)\n                        return currentCustomer\n\n                    currentCustomer.status = \"inactivo\";\n                    return currentCustomer\n                })\n                setCustomers(newCustomers)\n            } else {\n                toast.error(response.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n        }).catch(e => {\n\n            toast.error('Ocurrió un error al desactivar el cliente', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        })\n\n    }\n\n    const onRestoreCustomer = () => {\n\n        setOpenRestoreCustomer(false)\n\n        restoreCustomer(customer).then(response => {\n            if (response.status === 'success') {\n                toast.success(response.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n                const newCustomers = customers.map((currentCustomer) => {\n                    if (customer !== currentCustomer._id)\n                        return currentCustomer\n\n                    currentCustomer.estado = \"activo\";\n                    return currentCustomer\n                })\n                setCustomers(newCustomers)\n            } else {\n                toast.error(response.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n        }).catch(e => {\n            toast.error('Ocurrió un error al activar el cliente', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        })\n    }\n\n    const onDetailCustomer = customer => () => {\n        setCustomerSelected(customer)\n        setOpenDetailCustomer(true)\n    }\n\n    const closeDetailCustomer = () => {\n        setOpenDetailCustomer(false)\n    }\n\n    const onEditCustomer = customer => () => {\n        setCustomerSelected(customer)\n        setOpenEditCustomer(true)\n    };\n    const onCloseEditCustomer = () => {\n        setOpenEditCustomer(false)\n    };\n    const onCloseRestoreCustomer = () => {\n        setOpenRestoreCustomer(false)\n    };\n\n    const onCreateCustomer = () => {\n        setOpenCreateCustomer(true)\n    }\n    const onCloseCreateCustomer = () => {\n        setOpenCreateCustomer(false)\n    }\n    const onCloseModal = () => {\n        setOpenCreateCustomer(false);\n        setOpenEditCustomer(false);\n    }\n\n\n    return (\n        <Fragment>\n            <ToastContainer />\n            <Paper className={classes.paper}>\n                <Fab onClick={onCreateCustomer} variant=\"extended\" color=\"primary\" size=\"small\" className={classes.margin}>\n                    <AddIcon className={classes.extendedIcon} />\n                    Nuevo cliente\n                </Fab>\n\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>NOMBRE</TableCell>\n                            <TableCell>NIT</TableCell>\n                            <TableCell>DIRECCION</TableCell>\n                            <TableCell>TELEFONO</TableCell>\n                            <TableCell>CORREO</TableCell>\n                            <TableCell></TableCell>\n                            <TableCell></TableCell>\n                            <TableCell></TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            customers.map(item => {\n\n                                return (\n                                    <TableRow key={item._id}>\n                                        <TableCell>{item.name} </TableCell>\n                                        <TableCell>{item.nit}</TableCell>\n                                        <TableCell>{item.address}</TableCell>\n                                        <TableCell>{item.phone}</TableCell>\n                                        <TableCell>{item.email}</TableCell>\n\n\n                                        <TableCell className={classes.iconWidth}>\n                                            <Tooltip title=\"Detalle\" placement=\"top\">\n                                                <SearchIcon className={classes.icon} onClick={onDetailCustomer(item)} />\n                                            </Tooltip>\n                                        </TableCell>\n\n                                        <TableCell className={classes.iconWidth}>\n                                            <Tooltip title=\"Editar\" placement=\"top\">\n                                                <EditIcon className={classes.icon} onClick={onEditCustomer(item)} />\n                                            </Tooltip>\n                                        </TableCell>\n                                        <TableCell className={classes.iconWidth}>\n                                            <Tooltip title={'Eliminar'} placement=\"top\">\n                                                {\n                                                    item.status === 'activo' ?\n                                                        <DeleteIcon className={classes.icon} onClick={onOpenDeleteCustomer(item._id)} />\n                                                        :\n                                                        <RestoreIcon className={classes.icon} onClick={onOpenRestoreCustomer(item._id)} />\n                                                }\n                                            </Tooltip>\n                                        </TableCell>\n                                    </TableRow>)\n                            }\n                            )}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={totalCustomers}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n\n\n            <Dialog\n                open={open}\n                onClose={onCloseDeleteCustomer}\n                aria-labelledby=\"draggable-dialog-title\">\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n                    Alerta\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Esta seguro de desabilitar este cliente?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={onCloseDeleteCustomer} color=\"primary\">\n                        NO\n                    </Button>\n                    <Button onClick={onDeleteCustomer} color=\"primary\">\n                        SI\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={openRestoreCustomer}\n                onClose={onCloseRestoreCustomer}\n                aria-labelledby=\"draggable-dialog-title\">\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n                    Alerta\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Esta seguro de habilitar este cliente?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={onCloseRestoreCustomer} color=\"primary\">\n                        NO\n                    </Button>\n                    <Button onClick={onRestoreCustomer} color=\"primary\">\n                        SI\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog open={openDetailCustomer} onClose={closeDetailCustomer} TransitionComponent={Transition}>\n                <DialogContent>\n                    <CustomerDetail customer={customer} />\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={closeDetailCustomer} color=\"primary\">\n                        Cerrar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog maxWidth=\"md\" open={openEditCustomer} onClose={onCloseEditCustomer} TransitionComponent={Transition}>\n                <DialogContent>\n                    <CustomerForm onCloseModal={onCloseModal} onUpdateCustomers={onUpdateCustomers} customer={customer} />\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={onCloseEditCustomer} color=\"primary\">\n                        Cerrar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                fullWidth={true}\n                maxWidth=\"md\"\n                open={openCreateCustomer}>\n                <DialogTitle onClose={onCloseCreateCustomer} >Crear cliente</DialogTitle>\n\n                <DialogContent>\n                    <CustomerForm handleClose={onCloseCreateCustomer} onCloseModal={onCloseModal} onUpdateCustomers={onUpdateCustomers} modal={true} />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onCloseCreateCustomer} color=\"primary\">\n                        Cerrar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Fragment>)\n}\n\nexport default Customers"],"sourceRoot":""}