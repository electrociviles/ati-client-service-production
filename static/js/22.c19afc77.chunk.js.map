{"version":3,"sources":["views/CenterOfAttention/CenterOfAttentionForm.js","views/CenterOfAttention/CenterOfAttention.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","height","minWidth","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","chip","margin","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","divider","paper","color","text","secondary","button","fab","marginTop","float","extendedIcon","marginRight","formControl","CenterOfAttentionForm","props","useEffect","listCustomers","then","response","setCustomers","customers","centerOfAttention","setCustomer","customer","setName","title","setDescription","description","classes","useState","name","username","password","maintenanceCost","setMaintenanceCost","errorName","setErrorName","errorTextName","setErrorTextName","errorDescription","setErrorDescription","errorTextDescription","setErrorTextDescription","errorMaintenanceCost","setErrorMaintenanceCost","setErrorTextMaintenanceCost","valueSemiAnnual","setValueSemiAnnual","valueProvisioning","setValueProvisioning","timeSemiAnnual","setTimeSemiAnnual","timeProvisioning","setTimeProvisioning","errorValueSemiAnnual","setErrorValueSemiAnnual","errorTextValueSemiAnnual","setErrorTextValueSemiAnnual","errorValueProvisioning","setErrorValueProvisioning","errorTextValueProvisioning","setErrorTextValueProvisioning","validateDescription","value","undefined","toString","trim","validateName","validateMaintenanceCost","validateValueSemiAnnual","val","validateValueProvisioning","onSubmit","errors","validateForm","data","_id","parseFloat","id","updateCenterOfAttention","status","Swal","fire","icon","showConfirmButton","timer","onClose","passCenterOfAttentionEdit","createCenterOfAttention","onCloseModal","passCreateCenterOfAttention","toast","error","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","Container","maxWidth","Paper","className","encType","e","preventDefault","Grid","container","item","xs","sm","Autocomplete","fullWidth","size","getOptionLabel","option","toUpperCase","filterOptions","x","options","autoComplete","getOptionSelected","onChange","_","onInputChange","newInputValue","length","search","renderInput","params","TextField","label","variant","renderTags","tagValue","getTagProps","map","index","Chip","disabled","indexOf","renderOption","Typography","helperText","clsx","textField","target","select","MenuItem","key","Button","iconWidth","width","Transition","React","forwardRef","ref","Slide","direction","CenterOfAttention","centersOfAttention","setCentersOfAttention","totalCentersOfAttention","setTotalCentersOfAttention","rowsPerPage","setRowsPerPage","page","setPage","open","setOpen","openRestoreRole","setOpenRestoreCenterOfAttention","openEditRole","setOpenEditRole","openCreateCenterOfAttention","setOpenCreateCenterOfAttention","setCenterOfAttention","openUsers","setOpenUsers","start","end","listCenterOfAttention","count","onOpenDeleteCenterOfAttention","onOpenRestoreCenterOfAttention","role","onCloseDisableCenterOfAttention","onCloseEditCenterOfAttention","onCloseRestoreRole","onCloseCreateCenterOfAttention","onCloseModalUsers","onOpenModalUsers","onClick","Table","TableHead","TableRow","TableCell","align","colSpan","TableBody","displayType","thousandSeparator","prefix","administrative","Tooltip","placement","TablePagination","rowsPerPageOptions","component","onChangePage","newPage","onChangeRowsPerPage","event","Dialog","aria-labelledby","DialogTitle","style","cursor","DialogContent","DialogContentText","DialogActions","autoFocus","deleteCenterOfAttention","newCentersOfAttention","currentCenterOfAttention","restoreCenterOfAttention","currentRoles","TransitionComponent","centerOfAttentions","List","users","user","ListItem","ListItemIcon","ListItemText","primary"],"mappings":"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","file":"static/js/22.c19afc77.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport clsx from 'clsx';\r\nimport { Button } from '@material-ui/core';\r\nimport PropTypes from \"prop-types\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { updateCenterOfAttention, listCustomers, createCenterOfAttention } from '../../api/api';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Swal from 'sweetalert2';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250,\r\n    minWidth: 290\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n\r\n  },\r\n  button:\r\n  {\r\n    margin: theme.spacing(1),\r\n  },\r\n  fab:\r\n  {\r\n    marginTop: -2,\r\n    float: \"right\"\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst CenterOfAttentionForm = props => {\r\n\r\n  useEffect(() => {\r\n\r\n    // var d = new Date();\r\n    // d.setMonth(d.getMonth() + 6);\r\n    // setExpirationDateMaintenance(d)\r\n\r\n    listCustomers().then(response => {\r\n      setCustomers(response.customers);\r\n      if (props.centerOfAttention) {\r\n        setCustomer(props.centerOfAttention.customer);\r\n      }\r\n    });\r\n    if (props.centerOfAttention) {\r\n      setName(props.centerOfAttention.title);\r\n      setDescription(props.centerOfAttention.description);\r\n      setCustomer(props.centerOfAttention.customer);\r\n    }\r\n  }, [])\r\n\r\n  const classes = useStyles()\r\n\r\n  const [customers, setCustomers] = useState([]);\r\n  const [customer, setCustomer] = useState();\r\n  const [description, setDescription] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [maintenanceCost, setMaintenanceCost] = useState('');\r\n\r\n  const [errorName, setErrorName] = useState(false)\r\n  const [errorTextName, setErrorTextName] = useState('')\r\n\r\n  const [errorDescription, setErrorDescription] = useState(false)\r\n  const [errorTextDescription, setErrorTextDescription] = useState('')\r\n\r\n  const [errorUsername, setErrorUsername] = useState(false)\r\n  const [errorTextUsername, setErrorTextUsername] = useState('')\r\n\r\n  const [errorPassword, setErrorPassword] = useState(false)\r\n  const [errorTextPassword, setErrorTextPassword] = useState('')\r\n\r\n  const [errorEmail, setErrorEmail] = useState(false)\r\n  const [errorTextEmail, setErrorTextEmail] = useState('')\r\n\r\n  const [errorMaintenanceCost, setErrorMaintenanceCost] = useState(false)\r\n  const [errorTextMaintenanceCost, setErrorTextMaintenanceCost] = useState('')\r\n\r\n  // '2014-08-18T21:11:54'\r\n  // const [expirationDateMaintenance, setExpirationDateMaintenance] = useState(new Date());\r\n\r\n  const [valueSemiAnnual, setValueSemiAnnual] = useState(\"\");\r\n  const [valueProvisioning, setValueProvisioning] = useState(\"\");\r\n\r\n  const [timeSemiAnnual, setTimeSemiAnnual] = useState(\"\");\r\n  const [timeProvisioning, setTimeProvisioning] = useState(\"\");\r\n\r\n\r\n  const [errorValueSemiAnnual, setErrorValueSemiAnnual] = useState(false)\r\n  const [errorTextValueSemiAnnual, setErrorTextValueSemiAnnual] = useState('')\r\n\r\n  const [errorValueProvisioning, setErrorValueProvisioning] = useState(false)\r\n  const [errorTextValueProvisioning, setErrorTextValueProvisioning] = useState('')\r\n\r\n\r\n  const onChangeDescription = e => {\r\n    setDescription(e.target.value);\r\n    validateDescription(e.target.value);\r\n  }\r\n\r\n  const onChangeName = e => {\r\n    setName(e.target.value);\r\n    validateName(e.target.value);\r\n  }\r\n\r\n  const onChangeUsername = e => {\r\n    setUsername(e.target.value);\r\n    validateUsername(e.target.value);\r\n  }\r\n\r\n  const onChangePassword = e => {\r\n    setPassword(e.target.value);\r\n    validatePassword(e.target.value);\r\n  }\r\n\r\n  const onChangeEmail = e => {\r\n    setEmail(e.target.value);\r\n    validateEmail(e.target.value);\r\n  }\r\n\r\n  const onChangeMaintenanceCost = e => {\r\n    setMaintenanceCost(e.target.value);\r\n    validateMaintenanceCost(e.target.value);\r\n  }\r\n\r\n  const validateForm = () => {\r\n    let errors = 0\r\n    errors += validateDescription()\r\n    errors += validateName()\r\n\r\n    return errors\r\n  }\r\n\r\n  const validateDescription = (value) => {\r\n    let text = value !== undefined ? value : description\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorDescription(true)\r\n      setErrorTextDescription('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorDescription(false)\r\n      setErrorTextDescription('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validateName = (value) => {\r\n    let text = value !== undefined ? value : name\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorName(true)\r\n      setErrorTextName('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorName(false)\r\n      setErrorTextName('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validateUsername = (value) => {\r\n    let text = value !== undefined ? value : username\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorUsername(true)\r\n      setErrorTextUsername('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorUsername(false)\r\n      setErrorTextUsername('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validatePassword = (value) => {\r\n    let text = value !== undefined ? value : password\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorPassword(true)\r\n      setErrorTextPassword('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorPassword(false)\r\n      setErrorTextPassword('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validateEmail = (value) => {\r\n    let text = value !== undefined ? value : email\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorEmail(true)\r\n      setErrorTextEmail('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorEmail(false)\r\n      setErrorTextEmail('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validateMaintenanceCost = (value) => {\r\n    let text = value !== undefined ? value : maintenanceCost\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorMaintenanceCost(true)\r\n      setErrorTextMaintenanceCost('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorMaintenanceCost(false)\r\n      setErrorTextMaintenanceCost('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n\r\n  // const handleDateChange = (date) => {\r\n  //   setExpirationDateMaintenance(date);\r\n  // };\r\n\r\n  const onChangeValueSemiAnnual = e => {\r\n    setValueSemiAnnual(e.target.value);\r\n    validateValueSemiAnnual(e.target.value);\r\n  }\r\n  const onChangeTimeSemiAnnual = e => {\r\n    setTimeSemiAnnual(e.target.value);\r\n  }\r\n  const onChangeValueProvisioning = e => {\r\n    setValueProvisioning(e.target.value);\r\n    validateValueProvisioning(e.target.value);\r\n  }\r\n  const onChangeTimeProvisioning = e => {\r\n    setTimeProvisioning(e.target.value);\r\n  }\r\n\r\n  const validateValueSemiAnnual = (val) => {\r\n    let text = val !== undefined ? val : valueSemiAnnual\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorValueSemiAnnual(true)\r\n      setErrorTextValueSemiAnnual('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorValueSemiAnnual(false)\r\n      setErrorTextValueSemiAnnual('')\r\n      return 0\r\n    }\r\n  }\r\n  const validateValueProvisioning = (val) => {\r\n    let text = val !== undefined ? val : valueProvisioning\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorValueProvisioning(true)\r\n      setErrorTextValueProvisioning('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorValueProvisioning(false)\r\n      setErrorTextValueProvisioning('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const onSubmit = () => {\r\n\r\n    let errores = validateForm()\r\n\r\n    if (errores === 0) {\r\n\r\n      let data = {\r\n        name,\r\n        description,\r\n        username,\r\n        password,\r\n        valueSemiAnnual,\r\n        valueProvisioning,\r\n        timeSemiAnnual,\r\n        timeProvisioning,\r\n        'customer': customer._id,\r\n        maintenanceCost: parseFloat(maintenanceCost)\r\n      }\r\n\r\n      if (!props.centerOfAttention) {\r\n        createCenterOfAttention(data).then(response => {\r\n\r\n          if (response.status == 'success') {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: `El centro de atención ${name}  fue creado exitosamente`,\r\n              showConfirmButton: false,\r\n              timer: 1500\r\n            });\r\n            props.onCloseModal();\r\n            props.passCreateCenterOfAttention(response.centerOfAttention);\r\n          } else {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: `Ocurrió un error al crear el centro de atención ${name}`,\r\n              showConfirmButton: false,\r\n              timer: 1500\r\n            })\r\n          }\r\n\r\n        });\r\n\r\n      } else {\r\n\r\n        data.id = props.centerOfAttention._id;\r\n        updateCenterOfAttention(data).then(response => {\r\n          if (response.status == 'success') {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: `El centro de atención ${name}  fue actualizado exitosamente`,\r\n              showConfirmButton: false,\r\n              timer: 1500\r\n            });\r\n            props.onClose();\r\n            props.passCenterOfAttentionEdit(response.centerOfAttention);\r\n          } else {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: `Ocurrió un error al actualizar el centro de atención ${name}`,\r\n              showConfirmButton: false,\r\n              timer: 1500\r\n            })\r\n          }\r\n\r\n        });\r\n      }\r\n    } else {\r\n      toast.error('Faltan datos por llenar', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <ToastContainer />\r\n      <Container maxWidth=\"md\">\r\n\r\n        <Paper className={classes.paper}>\r\n          <form encType={'multipart/form-data'}\r\n            onSubmit={e => {\r\n              e.preventDefault()\r\n              onSubmit()\r\n            }} >\r\n            <Grid container spacing={3}>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <Autocomplete\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  getOptionLabel={\r\n                    (option) => {\r\n                      return `${option.name.toString().toUpperCase()} `\r\n                    }\r\n                  }\r\n                  filterOptions={(x) => x}\r\n                  options={customers}\r\n                  // value={customer}\r\n                  // defaultValue={customers.length > 0 ? customers[1] : null}\r\n\r\n                  autoComplete\r\n                  getOptionSelected={(option, value) => option === value}\r\n                  onChange={(_, value) => {\r\n                    setCustomer(value);\r\n                  }}\r\n                  onInputChange={(_, newInputValue) => {\r\n                    if (newInputValue.toString().trim().length > 0) {\r\n                      let data = {\r\n                        search: newInputValue.toString().trim()\r\n                      }\r\n                      listCustomers(data).then(response => {\r\n                        setCustomers(response.customers);\r\n                      })\r\n                    }\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} label=\"Cliente\" variant=\"outlined\" margin=\"dense\" />\r\n                  )}\r\n                  renderTags={(tagValue, getTagProps) =>\r\n                    tagValue.map((option, index) => (\r\n                      <Chip\r\n                        label={option.name}\r\n                        {...getTagProps({ index })}\r\n                        disabled={customers.indexOf(option) !== -1}\r\n                      />\r\n                    ))\r\n                  }\r\n                  renderOption={(option) => {\r\n\r\n                    return (\r\n                      <Grid container alignItems=\"center\">\r\n                        <Grid item xs>\r\n                          <Typography >{`${option.name.toString().toUpperCase()}`}</Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    );\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  error={errorName}\r\n                  helperText={errorTextName}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Nombre del centro de atención\"\r\n                  value={name}\r\n                  onChange={onChangeName} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  error={errorDescription}\r\n                  helperText={errorTextDescription}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Descripción del centro de atención\"\r\n                  value={description}\r\n                  onChange={onChangeDescription} />\r\n              </Grid>\r\n\r\n              {/* <Grid item xs={12} sm={6}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    style={{ width: '100%' }}\r\n                    margin=\"normal\"\r\n                    label=\"Fecha mantenimiento semestral\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    value={expirationDateMaintenance}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid> */}\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography>Costo de mantenimiento</Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  error={errorMaintenanceCost}\r\n                  helperText={errorMaintenanceCost}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Costo del mantenimiento\"\r\n                  value={maintenanceCost}\r\n                  onChange={onChangeMaintenanceCost} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <fieldset>\r\n                  <legend><Typography>Vencimiento semestral</Typography></legend>\r\n\r\n                  <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        fullWidth\r\n                        select\r\n                        className={clsx(classes.margin, classes.textField)}\r\n                        variant=\"outlined\"\r\n                        label=\"Medida\"\r\n                        margin=\"dense\"\r\n                        value={timeSemiAnnual}\r\n                        onChange={onChangeTimeSemiAnnual}\r\n                      >\r\n                        <MenuItem key={\"year\"} value={\"year\"}>Año</MenuItem>\r\n                        <MenuItem key={\"month\"} value={\"month\"}>Mes</MenuItem>\r\n                        <MenuItem key={\"week\"} value={\"week\"}>Semana</MenuItem>\r\n                        <MenuItem key={\"day\"} value={\"day\"}>Dia</MenuItem>\r\n                        <MenuItem key={\"hour\"} value={\"hour\"}>Hora</MenuItem>\r\n                        <MenuItem key={\"minute\"} value={\"minute\"}>Minuto</MenuItem>\r\n                      </TextField>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        fullWidth\r\n                        error={errorValueSemiAnnual}\r\n                        helperText={errorTextValueSemiAnnual}\r\n                        margin=\"dense\"\r\n                        autoComplete='off'\r\n                        id=\"outlined-simple-start-adornment\"\r\n                        className={clsx(classes.margin, classes.textField)}\r\n                        variant=\"outlined\"\r\n                        label=\"Tiempo\"\r\n                        value={valueSemiAnnual}\r\n                        onChange={onChangeValueSemiAnnual} />\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                </fieldset>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <fieldset>\r\n                  <legend><Typography>Vencimiento aprovisionamiento</Typography></legend>\r\n\r\n                  <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        fullWidth\r\n                        select\r\n                        className={clsx(classes.margin, classes.textField)}\r\n                        variant=\"outlined\"\r\n                        label=\"Medida\"\r\n                        margin=\"dense\"\r\n                        value={timeProvisioning}\r\n                        onChange={onChangeTimeProvisioning}\r\n                      >\r\n                        <MenuItem key={\"year\"} value={\"year\"}>Año</MenuItem>\r\n                        <MenuItem key={\"month\"} value={\"month\"}>Mes</MenuItem>\r\n                        <MenuItem key={\"week\"} value={\"week\"}>Semana</MenuItem>\r\n                        <MenuItem key={\"day\"} value={\"day\"}>Dia</MenuItem>\r\n                        <MenuItem key={\"hour\"} value={\"hour\"}>Hora</MenuItem>\r\n                        <MenuItem key={\"minute\"} value={\"minute\"}>Minuto</MenuItem>\r\n                      </TextField>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <TextField\r\n                        fullWidth\r\n                        error={errorValueProvisioning}\r\n                        helperText={errorTextValueProvisioning}\r\n                        margin=\"dense\"\r\n                        autoComplete='off'\r\n                        id=\"outlined-simple-start-adornment\"\r\n                        className={clsx(classes.margin, classes.textField)}\r\n                        variant=\"outlined\"\r\n                        label=\"Tiempo\"\r\n                        value={valueProvisioning}\r\n                        onChange={onChangeValueProvisioning} />\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                </fieldset>\r\n              </Grid>\r\n\r\n              <Grid item xs={2} sm={3}>\r\n                <Button type=\"submit\" variant=\"contained\" color='primary'>\r\n                  {props.centerOfAttention ? \"Actualizar\" : \"Guardar\"}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CenterOfAttentionForm","import React, { useState, Fragment, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport CenterOfAttentionForm from \"./CenterOfAttentionForm\";\r\nimport { FiUsers, FiUser } from \"react-icons/fi\";\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { listCenterOfAttention, deleteCenterOfAttention, restoreCenterOfAttention } from '../../api/api';\r\n\r\nimport NumberFormat from 'react-number-format';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    iconWidth: {\r\n        width: 10\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    fab: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(1),\r\n        color: 'black'\r\n    },\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n})\r\n\r\nconst CenterOfAttention = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [centersOfAttention, setCentersOfAttention] = useState([])\r\n    const [totalCentersOfAttention, setTotalCentersOfAttention] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [page, setPage] = useState(0);\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [openRestoreRole, setOpenRestoreCenterOfAttention] = useState(false);\r\n    const [openEditRole, setOpenEditRole] = useState(false);\r\n    const [openCreateCenterOfAttention, setOpenCreateCenterOfAttention] = useState(false);\r\n    const [centerOfAttention, setCenterOfAttention] = useState(null)\r\n\r\n    const [openUsers, setOpenUsers] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        let data = { start: 0, end: rowsPerPage }\r\n        listCenterOfAttention(data).then(response => {\r\n            setCentersOfAttention(response.centersOfAttention);\r\n            setTotalCentersOfAttention(response.count);\r\n        });\r\n    }, []);\r\n\r\n    const onOpenDeleteCenterOfAttention = centerOfAttention => () => {\r\n        setCenterOfAttention(centerOfAttention)\r\n        setOpen(true);\r\n    }\r\n    const onOpenRestoreCenterOfAttention = role => () => {\r\n        setCenterOfAttention(role)\r\n        setOpenRestoreCenterOfAttention(true);\r\n    }\r\n    const onCloseDisableCenterOfAttention = () => {\r\n        setOpen(false);\r\n    }\r\n    const onDisableCenterOfAttention = () => {\r\n        setOpen(false);\r\n\r\n        deleteCenterOfAttention(centerOfAttention._id).then(response => {\r\n            if (response.status === 'success') {\r\n                const newCentersOfAttention = centersOfAttention.map((currentCenterOfAttention) => {\r\n                    if (centerOfAttention._id !== currentCenterOfAttention._id)\r\n                        return currentCenterOfAttention\r\n\r\n                    currentCenterOfAttention.status = 'inactive'\r\n                    return currentCenterOfAttention\r\n                });\r\n                setCentersOfAttention(newCentersOfAttention)\r\n            }\r\n        });\r\n    }\r\n    const onRestoreCenterOfAttention = () => {\r\n\r\n        setOpenRestoreCenterOfAttention(false)\r\n\r\n        restoreCenterOfAttention(centerOfAttention._id).then(response => {\r\n            if (response.status === 'success') {\r\n                const newCentersOfAttention = centersOfAttention.map((currentRoles, index) => {\r\n\r\n                    if (centerOfAttention._id !== currentRoles._id)\r\n                        return currentRoles\r\n\r\n                    currentRoles.status = 'active'\r\n                    return currentRoles\r\n                })\r\n                setCentersOfAttention(newCentersOfAttention)\r\n            }\r\n        });\r\n    }\r\n    const onEditCenterOfAttention = role => () => {\r\n        setCenterOfAttention(role)\r\n        setOpenEditRole(true)\r\n    };\r\n    const onCloseEditCenterOfAttention = () => {\r\n        setOpenEditRole(false)\r\n    };\r\n    const onCloseRestoreRole = () => {\r\n        setOpenRestoreCenterOfAttention(false)\r\n    };\r\n    const onCreateCenterOfAttention = () => {\r\n        setOpenCreateCenterOfAttention(true)\r\n    }\r\n    const onCloseCreateCenterOfAttention = () => {\r\n        setOpenCreateCenterOfAttention(false)\r\n    }\r\n    const passCreateCenterOfAttention = centerOfAttention => {\r\n        setCentersOfAttention(centerOfAttentions => [...centerOfAttentions, centerOfAttention]);\r\n        setOpenCreateCenterOfAttention(false);\r\n    }\r\n    const passCenterOfAttentionEdit = centerOfAttention => {\r\n        setOpenEditRole(false);\r\n        const newCentersOfAttention = centersOfAttention.map((currentCenterOfAttention) => {\r\n\r\n            if (centerOfAttention._id !== currentCenterOfAttention._id)\r\n                return currentCenterOfAttention\r\n\r\n            currentCenterOfAttention = centerOfAttention;\r\n            return currentCenterOfAttention\r\n        })\r\n        setCentersOfAttention(newCentersOfAttention)\r\n    }\r\n    const handleChangePage = (e, newPage) => {\r\n        setPage(newPage);\r\n        let data = { start: (newPage * rowsPerPage), end: rowsPerPage }\r\n        listCenterOfAttention(data).then(response => {\r\n            setCentersOfAttention(response.centersOfAttention);\r\n            setTotalCentersOfAttention(response.count);\r\n\r\n        });\r\n    }\r\n    const handleChangeRowsPerPage = event => {\r\n\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n        let data = { start: 0, end: event.target.value }\r\n        listCenterOfAttention(data).then(response => {\r\n            setCentersOfAttention(response.centersOfAttention);\r\n            setTotalCentersOfAttention(response.count);\r\n        });\r\n\r\n    }\r\n    const onCloseModal = () => {\r\n        setOpenCreateCenterOfAttention(false)\r\n    }\r\n    const onCloseModalUsers = () => {\r\n        setOpenUsers(false);\r\n    }\r\n    const onOpenModalUsers = centerOfAttention => () => {\r\n        setCenterOfAttention(centerOfAttention);\r\n        setOpenUsers(true);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Paper className={classes.paper}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={onCreateCenterOfAttention}>Crear centro de atención</Button>\r\n\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Nombre</TableCell>\r\n                            <TableCell>Descripción</TableCell>\r\n                            <TableCell>Cliente</TableCell>\r\n                            <TableCell align='right'>Costo mantenimiento</TableCell>\r\n                            <TableCell colSpan={4}>Acciones</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            centersOfAttention.map(centerOfAttention => {\r\n                                return (\r\n                                    <TableRow key={centerOfAttention._id}>\r\n                                        <TableCell>{centerOfAttention.title} </TableCell>\r\n                                        <TableCell>{centerOfAttention.description} </TableCell>\r\n                                        <TableCell>{centerOfAttention.customer.name} </TableCell>\r\n                                        <TableCell align='right'>\r\n                                            <NumberFormat value={centerOfAttention.maintenanceCost} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                        </TableCell>\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            {\r\n                                                !centerOfAttention.administrative ?\r\n\r\n                                                    <Tooltip title=\"Editar\" placement=\"top\">\r\n                                                        <div>\r\n                                                            <EditIcon className={classes.icon} onClick={onEditCenterOfAttention(centerOfAttention)} />\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                    : \"\"\r\n                                            }\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            {\r\n                                                <Tooltip title=\"Eliminar\" placement=\"top\">\r\n                                                    <div>\r\n                                                        {\r\n                                                            centerOfAttention.status === 'active' ?\r\n                                                                <DeleteIcon className={classes.icon} onClick={onOpenDeleteCenterOfAttention(centerOfAttention)} />\r\n                                                                :\r\n                                                                <RestoreIcon className={classes.icon} onClick={onOpenRestoreCenterOfAttention(centerOfAttention)} />\r\n                                                        }\r\n                                                    </div>\r\n                                                </Tooltip>\r\n                                            }\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            <Tooltip title=\"Usuarios\" placement=\"top\">\r\n                                                <div>\r\n                                                    <FiUsers className={\"icon\"} onClick={onOpenModalUsers(centerOfAttention)} />\r\n                                                </div>\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>)\r\n                            }\r\n                            )}\r\n                    </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={totalCentersOfAttention}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={onCloseDisableCenterOfAttention}\r\n                aria-labelledby=\"draggable-dialog-title\">\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                    Alerta\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Esta seguro de desabilitar este centro de atención\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseDisableCenterOfAttention} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Button onClick={onDisableCenterOfAttention} color=\"primary\">\r\n                        SI\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={openRestoreRole}\r\n                onClose={onCloseRestoreRole}>\r\n                <DialogTitle style={{ cursor: 'move' }} >\r\n                    Alerta\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Esta seguro de reactivar a este centro de atención?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseRestoreRole} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Button onClick={onRestoreCenterOfAttention} color=\"primary\">\r\n                        SI\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog maxWidth=\"md\" open={openEditRole} onCloseEditCenterOfAttention={onCloseEditCenterOfAttention} TransitionComponent={Transition}>\r\n                <DialogContent>\r\n                    <CenterOfAttentionForm onClose={onCloseEditCenterOfAttention} centerOfAttention={centerOfAttention} passCenterOfAttentionEdit={passCenterOfAttentionEdit} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseEditCenterOfAttention} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={openCreateCenterOfAttention} onClose={onCloseCreateCenterOfAttention} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle>Crear centro de atención</DialogTitle>\r\n                <DialogContent>\r\n                    <CenterOfAttentionForm onCloseModal={onCloseModal} passCreateCenterOfAttention={passCreateCenterOfAttention} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCreateCenterOfAttention} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={openUsers}\r\n                onClose={onCloseModalUsers}>\r\n                <DialogTitle >\r\n                    Usuarios\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <List className={classes.root}>\r\n                            {\r\n                                centerOfAttention ?\r\n                                    centerOfAttention.users.map(user => {\r\n                                        return (\r\n                                            <ListItem alignItems=\"flex-start\">\r\n                                                <ListItemIcon>\r\n                                                    <FiUser style={{ fontSize: 32, color: \"grey\" }} />\r\n                                                </ListItemIcon>\r\n                                                <ListItemText\r\n                                                    primary={user.name}\r\n                                                    secondary={user.role.name}\r\n                                                />\r\n                                            </ListItem>\r\n\r\n                                        );\r\n                                    })\r\n                                    : \"\"\r\n                            }\r\n                        </List>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseModalUsers} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CenterOfAttention"],"sourceRoot":""}