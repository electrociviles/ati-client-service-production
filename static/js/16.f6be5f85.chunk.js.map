{"version":3,"sources":["views/Attentions/AttentionAdditionalInformationForm.js","views/Attentions/AttentionForm.js","views/Attentions/Attentions.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","iconWidth","width","paper","padding","spacing","marginTop","button","margin","input","display","fab","extendedIcon","marginRight","icon","color","AttentionAdditionalInformationForm","props","classes","useEffect","attention","setAttention","setSubtotal","subTotal","setImprevistos","imprevistos","setAdministracion","administracion","setUtilidad","utilidad","setIvaSobreUtilidad","ivaSobreUtilidad","setTotal","total","useState","subtotal","file","setFile","errorSubtotal","setErrorSubtotal","errorTextSubtotal","setErrorTextSubtotal","errorAdministracion","setErrorAdministracion","errorTextAdministracion","setErrorTextAdministracion","errorImprevistos","setErrorImprevistos","errorTextImprevistos","setErrorTextImprevistos","errorUtilidad","setErrorUtilidad","errorTextUtilidad","setErrorTextUtilidad","errorIvaSobreUtilidad","setErrorIvaSobreUtilidad","errorTextIvaSobreUtilidad","setErrorTextIvaSobreUtilidad","errorTotal","setErrorTotal","errorTextTotal","setErrorTextTotal","validateSubtotal","value","text","undefined","toString","trim","validateAdministracion","validateImprevistos","validateUtilidad","validateIvaSobreUtilidad","validateTotal","validateForm","errors","Paper","className","encType","onSubmit","e","preventDefault","_","formData","FormData","append","_id","action","updateAdditionalInformationAttention","then","response","console","log","status","onClose","toast","info","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","updateAttention","error","Grid","container","item","xs","sm","TextField","fullWidth","helperText","clsx","textField","variant","label","type","onChange","target","previewText","files","Button","height","minWidth","valueContainer","flexWrap","flex","alignItems","overflow","chip","chipFocused","backgroundColor","emphasize","palette","grey","noOptionsMessage","singleValue","fontSize","placeholder","left","bottom","divider","secondary","float","formControl","AttentionForm","setName","title","setDescription","description","disabled","name","errorName","setErrorName","errorTextName","setErrorTextName","errorDescription","setErrorDescription","errorTextDescription","setErrorTextDescription","validateName","validateDescription","onUpdateAttention","onCloseAttentionForm","Container","maxWidth","multiline","autoComplete","id","DialogTitle","withStyles","closeButton","right","top","children","other","disableTypography","Typography","IconButton","aria-label","onClick","Transition","React","forwardRef","ref","Slide","direction","Attentions","user","jwtDecode","localStorage","getItem","setRoles","data","start","end","rowsPerPage","paginate","listAttentions","setAttentions","attentions","setTotalAttentions","count","roles","totalAttentions","page","setPage","setRowsPerPage","open","setOpen","openSendCustomer","setOpenSendCustomer","openDetailAttention","setOpenDetailAttention","setAction","openEditAttention","setOpenEditAttention","openHistory","setOpenHistory","onCloseDeleteAttention","onDetailAttention","onOpenAttention","openAttention","success","newAttentions","map","currentAttention","catch","onCloseAttention","closeAttention","closeDetailAttention","onCloseSendCustomer","onSendCustomer","downloadAttention","downloading","onDownloadAttention","window","config","urlPdf","onOpenModalHistory","onCloseModalHistory","getStatus","statusSend","moment","date","format","onEditAttention","Table","TableHead","TableRow","TableCell","colSpan","TableBody","key","Chip","style","size","getStatusSend","customer","Tooltip","placement","includes","role","CircularProgress","descriptions","length","TablePagination","rowsPerPageOptions","component","onChangePage","newPage","onChangeRowsPerPage","event","Dialog","cursor","DialogContent","DialogContentText","DialogActions","autoFocus","aria-labelledby","deleteAttention","TransitionComponent","AttentionDetail","List","ListItem","ListItemIcon","getIcon","ListItemText","primary"],"mappings":"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","file":"static/js/16.f6be5f85.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport clsx from 'clsx';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { updateAdditionalInformationAttention } from '../../api/api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { Button } from '@material-ui/core';\r\nimport { DropzoneArea } from 'material-ui-dropzone'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    iconWidth: {\r\n        width: 10\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    fab: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(1),\r\n        color: 'black'\r\n    },\r\n}))\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    }\r\n});\r\nconst AttentionAdditionalInformationForm = props => {\r\n\r\n    const classes = useStyles()\r\n    useEffect(() => {\r\n        if (props.attention) {\r\n            setAttention(props.attention);\r\n            setSubtotal(props.attention.subTotal);\r\n            setImprevistos(props.attention.imprevistos);\r\n            setAdministracion(props.attention.administracion);\r\n            setUtilidad(props.attention.utilidad);\r\n            setIvaSobreUtilidad(props.attention.ivaSobreUtilidad);\r\n            setTotal(props.attention.total);\r\n        }\r\n    }, []);\r\n    const [attention, setAttention] = useState(null)\r\n\r\n\r\n    const [subtotal, setSubtotal] = useState(\"\");\r\n    const [administracion, setAdministracion] = useState(\"\");\r\n    const [imprevistos, setImprevistos] = useState(\"\");\r\n    const [utilidad, setUtilidad] = useState(\"\");\r\n    const [ivaSobreUtilidad, setIvaSobreUtilidad] = useState(\"\");\r\n    const [total, setTotal] = useState(\"\");\r\n    const [file, setFile] = useState({});\r\n\r\n    const [errorSubtotal, setErrorSubtotal] = useState(false);\r\n    const [errorTextSubtotal, setErrorTextSubtotal] = useState('');\r\n\r\n    const [errorAdministracion, setErrorAdministracion] = useState(false);\r\n    const [errorTextAdministracion, setErrorTextAdministracion] = useState('');\r\n\r\n    const [errorImprevistos, setErrorImprevistos] = useState(false);\r\n    const [errorTextImprevistos, setErrorTextImprevistos] = useState('');\r\n\r\n    const [errorUtilidad, setErrorUtilidad] = useState(false);\r\n    const [errorTextUtilidad, setErrorTextUtilidad] = useState('');\r\n\r\n    const [errorIvaSobreUtilidad, setErrorIvaSobreUtilidad] = useState(false);\r\n    const [errorTextIvaSobreUtilidad, setErrorTextIvaSobreUtilidad] = useState('');\r\n\r\n    const [errorTotal, setErrorTotal] = useState(false);\r\n    const [errorTextTotal, setErrorTextTotal] = useState('');\r\n\r\n    const onSubmit = _ => {\r\n        let errores = validateForm();\r\n\r\n        if (errores === 0) {\r\n\r\n            const formData = new FormData();\r\n            formData.append(\"id\", attention._id);\r\n            formData.append(\"file\", file);\r\n            formData.append(\"subtotal\", subtotal);\r\n            formData.append(\"administracion\", administracion);\r\n            formData.append(\"imprevistos\", imprevistos);\r\n            formData.append(\"utilidad\", utilidad);\r\n            formData.append(\"ivaSobreUtilidad\", ivaSobreUtilidad);\r\n            formData.append(\"total\", total);\r\n            formData.append(\"action\", props.action);\r\n\r\n            updateAdditionalInformationAttention(formData).then(response => {\r\n                console.log('response', response);\r\n                if (response.status == 'success') {\r\n                    props.onClose(false);\r\n\r\n                    toast.info(response.message, {\r\n                        position: \"top-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n\r\n                    props.updateAttention(response.attention)\r\n\r\n                } else {\r\n                    toast.error(response.message, {\r\n                        position: \"top-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n    const onChangeSubTotal = e => {\r\n        setSubtotal(e.target.value);\r\n        validateSubtotal(e.target.value);\r\n    }\r\n    const onChangeAdministracion = e => {\r\n        setAdministracion(e.target.value);\r\n        validateAdministracion(e.target.value);\r\n    }\r\n    const onChangeImprevistos = e => {\r\n        setImprevistos(e.target.value);\r\n        validateImprevistos(e.target.value);\r\n    }\r\n    const onChangeUtilidad = e => {\r\n        setUtilidad(e.target.value);\r\n        validateUtilidad(e.target.value);\r\n    }\r\n    const onChangeIvaSobreUtilidad = e => {\r\n        setIvaSobreUtilidad(e.target.value);\r\n        validateIvaSobreUtilidad(e.target.value);\r\n    }\r\n    const onChangeTotal = e => {\r\n        setTotal(e.target.value);\r\n        validateTotal(e.target.value);\r\n    }\r\n    const validateSubtotal = (value) => {\r\n        let text = value !== undefined ? value : subtotal\r\n\r\n        if (text == null || text.toString().trim() === '') {\r\n            setErrorSubtotal(true)\r\n            setErrorTextSubtotal('Este campo es requerido')\r\n            return 1\r\n        }\r\n        else {\r\n            setErrorSubtotal(false)\r\n            setErrorTextSubtotal('')\r\n            return 0\r\n        }\r\n    }\r\n    const validateAdministracion = (value) => {\r\n        let text = value !== undefined ? value : administracion\r\n\r\n        if (text == null || text.toString().trim() === '') {\r\n            setErrorAdministracion(true)\r\n            setErrorTextAdministracion('Este campo es requerido')\r\n            return 1\r\n        }\r\n        else {\r\n            setErrorAdministracion(false)\r\n            setErrorTextAdministracion('')\r\n            return 0\r\n        }\r\n    }\r\n    const validateImprevistos = (value) => {\r\n        let text = value !== undefined ? value : imprevistos\r\n\r\n        if (text == null || text.toString().trim() === '') {\r\n            setErrorImprevistos(true)\r\n            setErrorTextImprevistos('Este campo es requerido')\r\n            return 1\r\n        }\r\n        else {\r\n            setErrorImprevistos(false)\r\n            setErrorTextImprevistos('')\r\n            return 0\r\n        }\r\n    }\r\n    const validateUtilidad = (value) => {\r\n        let text = value !== undefined ? value : utilidad\r\n\r\n        if (text == null || text.toString().trim() === '') {\r\n            setErrorUtilidad(true)\r\n            setErrorTextUtilidad('Este campo es requerido')\r\n            return 1\r\n        }\r\n        else {\r\n            setErrorUtilidad(false)\r\n            setErrorTextUtilidad('')\r\n            return 0\r\n        }\r\n    }\r\n    const validateIvaSobreUtilidad = (value) => {\r\n        let text = value !== undefined ? value : ivaSobreUtilidad\r\n\r\n        if (text == null || text.toString().trim() === '') {\r\n            setErrorIvaSobreUtilidad(true)\r\n            setErrorTextIvaSobreUtilidad('Este campo es requerido')\r\n            return 1\r\n        }\r\n        else {\r\n            setErrorIvaSobreUtilidad(false)\r\n            setErrorTextIvaSobreUtilidad('')\r\n            return 0\r\n        }\r\n    }\r\n    const validateTotal = (value) => {\r\n        let text = value !== undefined ? value : total\r\n\r\n        if (text == null || text.toString().trim() === '') {\r\n            setErrorTotal(true)\r\n            setErrorTextTotal('Este campo es requerido')\r\n            return 1\r\n        }\r\n        else {\r\n            setErrorTotal(false)\r\n            setErrorTextTotal('')\r\n            return 0\r\n        }\r\n    }\r\n    const validateForm = () => {\r\n        let errors = 0\r\n        errors += validateSubtotal()\r\n        errors += validateAdministracion()\r\n        errors += validateImprevistos()\r\n        errors += validateUtilidad()\r\n        errors += validateIvaSobreUtilidad()\r\n        errors += validateTotal()\r\n        return errors\r\n    }\r\n    const onFile = files => {\r\n        setFile(files[0])\r\n    }\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <ToastContainer />\r\n\r\n            <form encType={'multipart/form-data'}\r\n                onSubmit={e => {\r\n                    e.preventDefault()\r\n                    onSubmit()\r\n                }} >\r\n                <Grid container spacing={3}>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            error={errorSubtotal}\r\n                            helperText={errorTextSubtotal}\r\n                            className={clsx(classes.margin, classes.textField)}\r\n                            variant=\"outlined\"\r\n                            label=\"Subtotal\"\r\n                            margin=\"dense\"\r\n                            type='number'\r\n                            value={subtotal}\r\n                            onChange={onChangeSubTotal}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            error={errorAdministracion}\r\n                            helperText={errorTextAdministracion}\r\n                            className={clsx(classes.margin, classes.textField)}\r\n                            variant=\"outlined\"\r\n                            label=\"Administración\"\r\n                            margin=\"dense\"\r\n                            type='number'\r\n                            value={administracion}\r\n                            onChange={onChangeAdministracion}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            error={errorImprevistos}\r\n                            helperText={errorTextImprevistos}\r\n                            className={clsx(classes.margin, classes.textField)}\r\n                            variant=\"outlined\"\r\n                            label=\"Imprevistos\"\r\n                            margin=\"dense\"\r\n                            type='number'\r\n                            value={imprevistos}\r\n                            onChange={onChangeImprevistos}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            error={errorUtilidad}\r\n                            helperText={errorTextUtilidad}\r\n                            className={clsx(classes.margin, classes.textField)}\r\n                            variant=\"outlined\"\r\n                            label=\"Utilidad\"\r\n                            margin=\"dense\"\r\n                            type='number'\r\n                            value={utilidad}\r\n                            onChange={onChangeUtilidad}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            error={errorIvaSobreUtilidad}\r\n                            helperText={errorTextIvaSobreUtilidad}\r\n                            className={clsx(classes.margin, classes.textField)}\r\n                            variant=\"outlined\"\r\n                            label=\"Iva sobre utilidad\"\r\n                            margin=\"dense\"\r\n                            type='number'\r\n                            value={ivaSobreUtilidad}\r\n                            onChange={onChangeIvaSobreUtilidad}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            error={errorTotal}\r\n                            helperText={errorTextTotal}\r\n                            className={clsx(classes.margin, classes.textField)}\r\n                            variant=\"outlined\"\r\n                            label=\"Total\"\r\n                            margin=\"dense\"\r\n                            type='number'\r\n                            value={total}\r\n                            onChange={onChangeTotal}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={12}>\r\n                        <DropzoneArea\r\n                            previewText=\"Selected files\"\r\n                            onChange={onFile}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={2} sm={12}>\r\n                        <Button type=\"submit\" variant=\"contained\" color='primary'>\r\n                            {props.attention ? \"Actualizar\" : \"Enviar\"}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Paper>)\r\n}\r\n\r\nexport default AttentionAdditionalInformationForm","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Container from '@material-ui/core/Container'\r\nimport clsx from 'clsx'\r\nimport { Button } from '@material-ui/core'\r\n\r\nimport PropTypes from \"prop-types\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport { updateAttention } from '../../api/api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250,\r\n    minWidth: 290\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n\r\n  },\r\n  button:\r\n  {\r\n    margin: theme.spacing(1),\r\n  },\r\n  fab:\r\n  {\r\n    marginTop: -2,\r\n    float: \"right\"\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.shape({\r\n      current: PropTypes.any.isRequired\r\n    })\r\n  ])\r\n}\r\nconst AttentionForm = props => {\r\n\r\n  useEffect(() => {\r\n    console.log(props)\r\n\r\n\r\n    if (props.attention) {\r\n\r\n      setName(props.attention.title);\r\n      setDescription(props.attention.description);\r\n\r\n    }\r\n  }, [])\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const [file, setFile] = useState({})\r\n  const classes = useStyles()\r\n\r\n\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const [errorName, setErrorName] = useState(false)\r\n  const [errorTextName, setErrorTextName] = useState('')\r\n\r\n  const [errorDescription, setErrorDescription] = useState(false)\r\n  const [errorTextDescription, setErrorTextDescription] = useState('')\r\n\r\n\r\n  const onChangeName = e => {\r\n    setName(e.target.value);\r\n    validateName(e.target.value);\r\n  }\r\n  const onChangeDescription = e => {\r\n    setDescription(e.target.value);\r\n    validateDescription(e.target.value);\r\n  }\r\n  const validateForm = () => {\r\n    let errors = 0\r\n    errors += validateName()\r\n    errors += validateDescription()\r\n    // errors += validatePrice()\r\n    // errors += validateQuantity()\r\n    return errors\r\n  }\r\n  const validateName = (value) => {\r\n    let text = value !== undefined ? value : name\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorName(true)\r\n      setErrorTextName('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorName(false)\r\n      setErrorTextName('')\r\n      return 0\r\n    }\r\n  }\r\n  const validateDescription = (value) => {\r\n    let text = value !== undefined ? value : description\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorDescription(true)\r\n      setErrorTextDescription('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorDescription(false)\r\n      setErrorTextDescription('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const onSubmit = _ => {\r\n\r\n    let errores = validateForm()\r\n\r\n\r\n    if (errores === 0) {\r\n      const formData = new FormData();\r\n      if (props.attention) {\r\n        formData.append(\"id\", props.attention._id);\r\n      }\r\n      formData.append(\"name\", name);\r\n      formData.append(\"description\", description);\r\n\r\n      if (!props.attention) {\r\n\r\n      } else {\r\n\r\n        updateAttention(formData).then(response => {\r\n          console.log('response', response);\r\n          if (response.status == 'success') {\r\n            toast.info(response.message, {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n\r\n            props.onUpdateAttention(name, description);\r\n            props.onCloseAttentionForm()\r\n\r\n          } else {\r\n            toast.error('Ocurrió un error al actualizar la atención', {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n          }\r\n\r\n        });\r\n      }\r\n    } else {\r\n      toast.error('Error', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <ToastContainer />\r\n      <Container maxWidth=\"md\">\r\n\r\n        <Paper className={classes.paper}>\r\n          <form encType={'multipart/form-data'}\r\n            onSubmit={e => {\r\n              e.preventDefault()\r\n              onSubmit()\r\n            }} >\r\n            <Grid container spacing={3}>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  multiline\r\n                  error={errorName}\r\n                  helperText={errorTextName}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Nombre\"\r\n                  value={name}\r\n                  onChange={onChangeName} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  multiline\r\n                  error={errorDescription}\r\n                  helperText={errorTextDescription}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Descripción\"\r\n                  value={description}\r\n                  onChange={onChangeDescription} />\r\n              </Grid>\r\n\r\n\r\n              <Grid item xs={2} sm={3}>\r\n                <Button disabled={disabled} type=\"submit\" variant=\"contained\" color='primary'>\r\n                  {props.attention ? \"Actualizar\" : \"Guardar\"}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AttentionForm","import React, { useState, useEffect, Fragment } from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport AttentionDetail from './AttentionDetail'\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { deleteAttention, openAttention, closeAttention, listAttentions, onDownloadAttention } from '../../api/api';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { AiOutlineLock, AiOutlineUnlock } from 'react-icons/ai';\r\nimport { IoIosSend } from 'react-icons/io';\r\nimport { BsClockHistory } from 'react-icons/bs';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport AttentionAdditionalInformationForm from \"./AttentionAdditionalInformationForm\";\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './attention.css';\r\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from \"react-icons/ai\";\r\nimport { BsArrowCounterclockwise } from \"react-icons/bs\";\r\nimport { RiSendPlaneLine } from \"react-icons/ri\";\r\nimport { MdOutlineScheduleSend } from \"react-icons/md\";\r\nimport { VscEdit } from \"react-icons/vsc\";\r\nimport jwtDecode from 'jwt-decode';\r\nimport { AiOutlineCloudDownload } from \"react-icons/ai\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport config from \"./../../config\";\r\nimport { VscFilePdf } from \"react-icons/vsc\";\r\n\r\nimport moment from 'moment';\r\nimport AttentionForm from './AttentionForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    iconWidth: {\r\n        width: 10\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    fab: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(1),\r\n        color: 'black'\r\n    },\r\n}))\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n})\r\n\r\nconst Attentions = _ => {\r\n\r\n    const user = jwtDecode(localStorage.getItem('token'))\r\n\r\n    useEffect(() => {\r\n\r\n        setRoles([\"5a046fe9627e3526802b3847\"])\r\n        let data = { start: 0, end: rowsPerPage, paginate: true }\r\n        listAttentions(data).then(response => {\r\n            setAttentions(response.attentions);\r\n            setTotalAttentions(response.count);\r\n        });\r\n    }, []);\r\n\r\n    const classes = useStyles()\r\n\r\n    const [roles, setRoles] = useState([])\r\n    const [attentions, setAttentions] = useState([])\r\n    const [attention, setAttention] = useState(null)\r\n    const [totalAttentions, setTotalAttentions] = useState(0)\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [openSendCustomer, setOpenSendCustomer] = useState(false);\r\n    const [openDetailAttention, setOpenDetailAttention] = useState(false);\r\n    const [action, setAction] = useState(\"\");\r\n    const [openEditAttention, setOpenEditAttention] = useState(false);\r\n\r\n\r\n    const [openHistory, setOpenHistory] = useState(false);\r\n\r\n    const handleChangePage = (_, newPage) => {\r\n        setPage(newPage);\r\n        let data = { start: (newPage * rowsPerPage), end: rowsPerPage, paginate: true }\r\n        listAttentions(data).then(response => {\r\n            setAttentions(response.attentions);\r\n            setTotalAttentions(response.count);\r\n        });\r\n    }\r\n    const handleChangeRowsPerPage = event => {\r\n\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n        let data = { start: 0, end: event.target.value, paginate: true }\r\n        listAttentions(data).then(response => {\r\n            setAttentions(response.attentions);\r\n            setTotalAttentions(response.count);\r\n        });\r\n    }\r\n    const onCloseDeleteAttention = () => {\r\n        setOpen(false);\r\n    }\r\n    const onDeleteAttention = id => {\r\n        setOpen(false);\r\n\r\n        deleteAttention(id).then(response => {\r\n            if (response.status === 'success') {\r\n                toast.success(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                const newAttentions = attentions.map((currentAttention) => {\r\n                    if (id !== currentAttention._id)\r\n                        return currentAttention\r\n\r\n                    currentAttention.status = \"deleted\";\r\n                    return currentAttention\r\n                })\r\n                setAttentions(newAttentions)\r\n            } else {\r\n                toast.error(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }).catch(e => {\r\n\r\n            toast.error('Ocurrió un error al eliminar la atención', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        })\r\n\r\n    }\r\n    const onDetailAttention = attention => () => {\r\n        setAttention(attention)\r\n        setOpenDetailAttention(true)\r\n    }\r\n    const onOpenAttention = attention => () => {\r\n        openAttention(attention._id).then(response => {\r\n            if (response.status === 'success') {\r\n\r\n                toast.success(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n\r\n                const newAttentions = attentions.map((currentAttention) => {\r\n                    if (attention._id !== currentAttention._id)\r\n                        return currentAttention\r\n\r\n                    currentAttention.status = \"created\";\r\n                    return currentAttention\r\n                })\r\n                setAttentions(newAttentions)\r\n            } else {\r\n                toast.error(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }).catch(e => {\r\n            console.log(e);\r\n            toast.error(\"Occurrió un error al abrir la atención\", {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        });\r\n    }\r\n    const onCloseAttention = attention => () => {\r\n        let data = { id: attention._id, status: \"send\" }\r\n        closeAttention(data).then(response => {\r\n            if (response.status === 'success') {\r\n\r\n                toast.info(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                const newAttentions = attentions.map((currentAttention) => {\r\n                    if (attention._id !== currentAttention._id)\r\n                        return currentAttention\r\n\r\n                    currentAttention.status = \"finished\";\r\n                    return currentAttention\r\n                })\r\n                setAttentions(newAttentions)\r\n            } else {\r\n                toast.error(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }).catch(e => {\r\n            console.log(e);\r\n            toast.error(\"Occurrió un error al cerrar la atención\", {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        });\r\n    }\r\n    const closeDetailAttention = () => {\r\n        setOpenDetailAttention(false)\r\n    }\r\n    const onCloseSendCustomer = () => {\r\n        setOpenSendCustomer(false);\r\n    }\r\n    const onSendCustomer = (attention, action) => () => {\r\n        setAction(action)\r\n        setAttention(attention)\r\n        setOpenSendCustomer(true)\r\n    }\r\n    const downloadAttention = attention => () => {\r\n        const newAttentions = attentions.map(currentAttention => {\r\n            if (currentAttention._id === attention._id) {\r\n                currentAttention.downloading = true;\r\n            }\r\n            return currentAttention;\r\n        });\r\n        setAttentions(newAttentions)\r\n\r\n        let data = { id: attention._id }\r\n        onDownloadAttention(data).then(response => {\r\n\r\n            const newAttentions = attentions.map(currentAttention => {\r\n                if (currentAttention._id === attention._id) {\r\n                    currentAttention.downloading = false;\r\n                }\r\n                return currentAttention;\r\n            });\r\n            setAttentions(newAttentions)\r\n\r\n            console.log(response)\r\n            if (response.status === 'success') {\r\n\r\n                toast.info(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                setAttentions(newAttentions)\r\n                window.open(`${config.urlPdf}${attention._id}.pdf`)\r\n            } else {\r\n                toast.error(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }).catch(e => {\r\n            toast.error(\"Occurrió un error al descargar la atención\", {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        });\r\n    }\r\n    const onRejectCustomer = attention => () => {\r\n        setAttention(attention)\r\n        setOpenSendCustomer(true)\r\n    }\r\n    const onOpenModalHistory = attention => () => {\r\n        setOpenHistory(true);\r\n        setAttention(attention);\r\n    }\r\n    const onCloseModalHistory = () => {\r\n        setOpenHistory(false);\r\n    }\r\n    const getStatus = item => {\r\n        switch (item.statusSend) {\r\n            case \"send\":\r\n                return <div className='wrapper__history'>\r\n                    <div className='statusHistory'>Enviado</div>\r\n                    <div className='dateHistory'>{moment(item.date).format(\"YYYY-MM-DD HH:mm:ss\")}</div>\r\n                </div>\r\n\r\n\r\n            case \"resend\":\r\n                return <div className='wrapper__history'>\r\n                    <div className='statusHistory'>Reenviado</div>\r\n                    <div className='dateHistory'>{moment(item.date).format(\"YYYY-MM-DD HH:mm:ss\")}</div>\r\n                </div>\r\n\r\n            case \"reject\":\r\n                return <div className='wrapper__history'>\r\n                    <div className='statusHistory'>Rechazado</div>\r\n                    <div className='dateHistory'>{moment(item.date).format(\"YYYY-MM-DD HH:mm:ss\")}</div>\r\n                </div>\r\n\r\n            case \"accept\":\r\n                return <div className='wrapper__history'>\r\n                    <div className='statusHistory'>Aceptado</div>\r\n                    <div className='dateHistory'>{moment(item.date).format(\"YYYY-MM-DD HH:mm:ss\")}</div>\r\n                </div>\r\n        }\r\n    }\r\n    const getIcon = statusSend => {\r\n        switch (statusSend) {\r\n            case \"reject\":\r\n                return <AiOutlineCloseCircle style={{ fontSize: 32, color: \"red\" }} />\r\n\r\n            case \"send\":\r\n                return <RiSendPlaneLine style={{ fontSize: 32, color: \"red\" }} />\r\n\r\n            case \"accept\":\r\n                return <AiOutlineCheckCircle style={{ fontSize: 32, color: \"green\" }} />\r\n\r\n\r\n            case \"resend\":\r\n                return <MdOutlineScheduleSend style={{ fontSize: 32, color: \"silver\" }} />\r\n\r\n        }\r\n\r\n    }\r\n    const getStatusSend = statusSend => {\r\n        switch (statusSend) {\r\n            case \"accept\":\r\n                return <Chip label='Aceptada' size='small' color=\"primary\" />\r\n\r\n            case \"reject\":\r\n                return <Chip label='Rechazada' size='small' />\r\n\r\n            case \"resend\":\r\n                return <Chip label='Reenviado' size='small' />\r\n\r\n            case \"send\":\r\n                return <Chip label='Enviado' size='small' />\r\n\r\n\r\n        }\r\n    }\r\n    const updateAttention = attention => {\r\n        console.log(\"updateAttention: \", updateAttention);\r\n        const newAttentions = attentions.map((currentAttention) => {\r\n            if (attention._id !== currentAttention._id)\r\n                return currentAttention\r\n\r\n            currentAttention = attention;\r\n            return currentAttention\r\n        })\r\n        setAttentions(newAttentions)\r\n    }\r\n\r\n    const onEditAttention = attention => () => {\r\n        setAttention(attention)\r\n        setOpenEditAttention(true)\r\n    }\r\n    const onCloseAttentionForm = () => {\r\n        setOpenEditAttention(false)\r\n    }\r\n    const onUpdateAttention = (name, description) => {\r\n\r\n        const newAttentions = attentions.map((currentAttention) => {\r\n            if (attention._id !== currentAttention._id)\r\n                return currentAttention\r\n\r\n            currentAttention.title = name\r\n            currentAttention.description = description\r\n            return currentAttention\r\n        })\r\n        setAttentions(newAttentions)\r\n    }\r\n    const onViewPdf = file => () => {\r\n        window.open(`${config.urlPdf}${file}`)\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <Paper className={classes.paper}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>NOMBRE</TableCell>\r\n                            <TableCell>DESCRIPCIÓN</TableCell>\r\n                            <TableCell>ESTADO</TableCell>\r\n                            <TableCell>CLIENTE</TableCell>\r\n                            <TableCell>VER</TableCell>\r\n                            <TableCell>ABRIR/CERRAR</TableCell>\r\n                            <TableCell colSpan={5}>ACCIONES</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            attentions.map(item => {\r\n                                return (\r\n                                    <TableRow key={item._id}>\r\n                                        <TableCell>{item.title} </TableCell>\r\n                                        <TableCell>{item.description} </TableCell>\r\n                                        <TableCell>\r\n                                            {\r\n                                                item.status === 'finished' ?\r\n                                                    <Chip style={{ margin: 1 }} label='Cerrado' size='small' variant=\"outlined\" /> :\r\n                                                    <Chip style={{ margin: 1 }} label='Abierto' size='small' color=\"primary\" variant=\"outlined\" />\r\n                                            }\r\n                                            {/* {\r\n                                                item.statusSend === 'send' ?\r\n                                                    <Chip style={{ margin: 1 }} label='Enviada' color='secondary' size='small' variant=\"outlined\" /> :\r\n                                                    \"\"\r\n                                            } */}\r\n                                            {\r\n                                                getStatusSend(item.statusSend)\r\n                                            }\r\n                                        </TableCell>\r\n                                        <TableCell>{item.customer.name}</TableCell>\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            <Tooltip title=\"Detalle\" placement=\"top\">\r\n                                                <SearchIcon className={classes.icon} onClick={onDetailAttention(item)} />\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            {\r\n                                                item.status === 'finished' ?\r\n                                                    <div className='wrapper-icon-attention'>\r\n                                                        <AiOutlineUnlock className='icon' onClick={onOpenAttention(item)} />\r\n                                                        <span className='open-close'>Abrir</span>\r\n                                                    </div> :\r\n                                                    <div className='wrapper-icon-attention'>\r\n                                                        <AiOutlineLock className='icon' onClick={onCloseAttention(item, \"send\")} />\r\n                                                        <div className='open-close'>Cerrar</div>\r\n                                                    </div>\r\n                                            }\r\n                                        </TableCell>\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            {\r\n                                                item.statusSend == \"pending\" ?\r\n                                                    <Tooltip title=\"Enviar cliente\" placement=\"top\">\r\n                                                        <div>\r\n                                                            <IoIosSend className={\"icon\"} onClick={onSendCustomer(item, \"create\")} />\r\n                                                        </div>\r\n                                                    </Tooltip> : \"\"\r\n                                            }\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            {\r\n                                                roles.includes(user.role) && item.statusSend == 'reject' ?\r\n                                                    <Tooltip title=\"Editar\" placement=\"top\">\r\n                                                        <div>\r\n                                                            <VscEdit className={\"icon\"} onClick={onSendCustomer(item, \"update\")} />\r\n                                                        </div>\r\n                                                    </Tooltip> : \"\"\r\n\r\n                                            }\r\n                                            <Tooltip title=\"Descargar\" placement=\"top\">\r\n                                                {\r\n                                                    item.downloading ?\r\n                                                        <div className='circularProgress'>\r\n                                                            <CircularProgress size={16} />\r\n                                                        </div> :\r\n                                                        <div>\r\n                                                            <AiOutlineCloudDownload className={\"icon\"} onClick={downloadAttention(item)} />\r\n                                                        </div>\r\n                                                }\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            {\r\n                                                item.descriptions.length > 0 ? <Tooltip title=\"Hisotoria\" placement=\"top\">\r\n                                                    <div>\r\n                                                        <BsClockHistory className={\"icon\"} onClick={onOpenModalHistory(item)} />\r\n                                                    </div>\r\n                                                </Tooltip> : \"\"\r\n                                            }\r\n                                        </TableCell>\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            <Tooltip title=\"Editar\" placement=\"top\">\r\n                                                <EditIcon className={classes.icon} onClick={onEditAttention(item)} />\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n\r\n                                        {\r\n                                            item.file ?\r\n                                                <TableCell className={classes.iconWidth}>\r\n                                                    <Tooltip title=\"Pdf\" placement=\"top\">\r\n                                                        <VscFilePdf className={\"icon\"} onClick={onViewPdf(item.file)} />\r\n                                                    </Tooltip>\r\n                                                </TableCell> : \"\"\r\n                                        }\r\n\r\n                                    </TableRow>)\r\n                            })\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={totalAttentions}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n\r\n            <Dialog\r\n                open={openSendCustomer}\r\n                onClose={onCloseSendCustomer}>\r\n                <DialogTitle style={{ cursor: 'move' }} >\r\n                    Alerta\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <AttentionAdditionalInformationForm\r\n                            action={action}\r\n                            attention={attention}\r\n                            updateAttention={updateAttention}\r\n                            onClose={onCloseSendCustomer}\r\n                        />\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseSendCustomer} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={onCloseDeleteAttention}\r\n                aria-labelledby=\"draggable-dialog-title\">\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                    Alerta\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Esta seguro de eliminar esta atención?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseDeleteAttention} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Button onClick={onDeleteAttention} color=\"primary\">\r\n                        SI\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                fullWidth maxWidth=\"lg\"\r\n                open={openDetailAttention}\r\n                onClose={closeDetailAttention}\r\n                TransitionComponent={Transition}>\r\n                <DialogContent>\r\n                    <AttentionDetail attention={attention} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={closeDetailAttention} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={openHistory}\r\n                onClose={onCloseModalHistory}>\r\n                <DialogTitle >\r\n                    Historia\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <List className={classes.root}>\r\n                            {\r\n                                attention ?\r\n                                    attention.descriptions.map(item => {\r\n                                        return (\r\n                                            <ListItem alignItems=\"flex-start\">\r\n                                                <ListItemIcon>\r\n                                                    {getIcon(item.statusSend)}\r\n                                                </ListItemIcon>\r\n                                                <ListItemText\r\n                                                    primary={getStatus(item)}\r\n                                                    secondary={item.description}\r\n                                                />\r\n                                            </ListItem>\r\n\r\n                                        );\r\n                                    })\r\n                                    : \"\"\r\n                            }\r\n                        </List>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseModalHistory} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog maxWidth=\"md\" open={openEditAttention} onClose={onCloseAttentionForm} TransitionComponent={Transition}>\r\n                <DialogContent>\r\n                    <AttentionForm onCloseAttentionForm={onCloseAttentionForm} onUpdateAttention={onUpdateAttention} attention={attention} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseAttentionForm} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </Fragment>)\r\n}\r\n\r\nexport default Attentions"],"sourceRoot":""}