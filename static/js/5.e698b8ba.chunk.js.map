{"version":3,"sources":["../../src/utils/propValidator.ts","../../src/utils/constant.ts","../../src/utils/cssTransition.tsx","../../src/utils/collapseToast.ts","../../src/core/eventManager.ts","../../src/hooks/useKeeper.ts","../../src/hooks/toastContainerReducer.ts","../../src/hooks/useToastContainer.ts","../../src/hooks/useToast.ts","../../src/components/CloseButton.tsx","../../src/components/ProgressBar.tsx","../../src/components/Toast.tsx","../../src/components/Transitions.tsx","../../src/components/ToastPositioner.tsx","../../src/components/ToastContainer.tsx","../../src/core/toast.tsx","../node_modules/classnames/index.js","../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js"],"names":["isNum","v","isNaN","isBool","isStr","isFn","parseClassName","hasToastId","toastId","canUseDom","window","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","DARK","cssTransition","enter","exit","duration","appendPosition","collapse","collapseDuration","Array","enterDuration","exitDuration","children","position","preventExitTransition","done","props","enterClassName","exitClassName","onExited","node","height","style","requestAnimationFrame","setTimeout","collapseToast","timeout","onEnter","onEntered","onExit","unmountOnExit","eventManager","list","emitQueue","on","this","set","event","off","cb","get","cancelEmit","timers","clearTimeout","emit","args","timer","callback","useKeeper","arg","refresh","ref","useRef","useEffect","reducer","state","action","id","useToastContainer","forceUpdate","useReducer","x","toast","dispatch","containerRef","toastCount","queue","collection","instance","toastKey","displayedToast","containerId","isToastActive","getToast","limit","enableMultiContainer","queueLen","freeSlot","dequeueToast","toDequeue","i","type","toastContent","toastProps","staleId","appendToast","delay","options","updateId","isNotValid","closeToast","removeToast","isNotAnUpdate","toastAutoClose","containerAutoClose","key","closeButton","rtl","transition","className","bodyClassName","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","removeFromCollection","cloneElement","getToastToRender","toastToRender","toastList","Object","p","getX","e","useToast","useState","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","y","deltaX","removalDistance","canCloseOnClick","canDrag","boundingRect","syncProps","top","bottom","left","right","pauseToast","playToast","getY","Math","document","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onDragTransitionEnd","CloseButton","ariaLabel","viewBox","fillRule","d","ProgressBar","hide","userStyle","controlledProgress","isIn","animationDuration","animationPlayState","opacity","classNames","cx","animationEvent","React","Toast","Transition","cssClasses","in","appear","nodeRef","renderCloseButton","Bounce","ToastPositioner","rest","child","ToastContainer","swag","pointerEvents","newestOnTop","containers","lazy","isAnyContainerMounted","container","latestInstance","getContainer","generateToastId","Date","getToastId","dispatchToast","containerDomNode","render","mergeOptions","params","oldOptions","oldContent","nextOptions","config","containerConfig","containerInstance","item","hasOwn","hasOwnProperty","classes","arguments","length","argType","push","isArray","inner","apply","call","join","module","exports","default","Tablelvl2Context","TableContext","Table","_props$component","component","Component","_props$padding","padding","_props$size","size","_props$stickyHeader","stickyHeader","other","_objectWithoutProperties","table","Provider","value","_extends","clsx","root","withStyles","theme","display","width","borderCollapse","borderSpacing","typography","body2","spacing","color","palette","text","secondary","textAlign","captionSide","name","tablelvl2","variant","TableHead","TableRow","_props$hover","hover","_props$selected","selected","head","footer","verticalAlign","outline","backgroundColor","fade","main","selectedOpacity","TableCell","_props$align","align","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","isHeadCell","ariaSort","concat","capitalize","borderBottom","lighten","divider","darken","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","body","fontSize","sizeSmall","paddingRight","paddingLeft","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","zIndex","background","TableBody"],"mappings":";mhBAIgBA,EAAMC,GACpB,MAAoB,kBAANA,IAAmBC,MAAjC,G,SAGcC,EAAOF,GACrB,yBAAcA,E,SAGAG,EAAMH,GACpB,wBAAcA,E,SAGAI,EAAKJ,GACnB,0BAAcA,E,SAGAK,EAAeL,GAC7B,MAAoB,kBAANA,EAAiBA,EAA/B,K,SAOcM,EAAWC,GACzB,OAAOA,OAAP,EAaK,IAAMC,IACO,qBAAXC,SACPA,OADA,WAEAA,gBAHK,e,SAMSC,EAAiBC,GAC/B,OACEC,6BAA2BT,EAA3BS,IAA6CR,EAA7CQ,IAA8Db,EADhE,GCrCK,IAAMc,EAAsD,CACjEC,SADiE,WAEjEC,UAFiE,YAGjEC,WAHiE,aAIjEC,YAJiE,cAKjEC,aALiE,eAMjEC,cAAe,iBAGJC,EAA4C,CACvDC,KADuD,OAEvDC,QAFuD,UAGvDC,QAHuD,UAIvDC,MAJuD,QAKvDC,QALuD,UAMvDC,KAAM,Q,SCkBQC,K,IAQd,IAPAC,UACAC,S,IACAC,oBAAWA,EAAA,M,IACXC,0BAAiBA,GAAA,E,IACjBC,oBAAWA,GAAA,E,IACXC,4BAAmBA,EAAnBA,MAUA,OANIC,kBAAJ,IAA+BJ,UAC5BK,EAA+BL,EADoB,GACpCM,EAAgBN,EADoB,IAGpDK,EAAgBC,EAAhBD,EAGK,SAAyB,G,IAC9BE,aACAC,aACAC,0BACAC,SACGC,8DAEGC,EAAiBX,EAAoBH,EAAN,OAArC,EACMe,EAAgBZ,EAAoBF,EAAN,OAApC,EAmBMe,EAAW,SAAXA,IACJ,IAAMC,EAAOJ,UAAb,QAEA,IACEI,wCACAb,ECxFR,SACEa,EACAL,EACAV,uBAEA,IAAMgB,EAASD,EAAf,aACME,EAAQF,EAAd,MAEAG,uBAAsB,WACpBD,sBACAA,SAAeD,EAAfC,KACAA,2BAEAC,uBAAsB,WACpBD,aACAA,cACAA,aACAE,YAAW,kBAAMT,MAAjBS,SDuEaC,CAAcL,EAAML,EAAvB,GAAiDA,MAc7D,OACE,6CACMC,GACJU,QACEZ,EACIP,EAAQ,KAGR,CACEJ,MADF,EAEEC,KAAMG,EACFI,EADU,EAEVA,EAAe,IAG3BgB,QAnDY,WACd,IAAMP,EAAOJ,UAAb,QACA,IACEI,mBACAA,qCACAA,0BAAkCV,EAAlCU,OA+CAQ,UA3Cc,WAChB,IAAMR,EAAOJ,UAAb,QACA,IACEI,sBACAA,qBAwCAS,OAAQf,EAAwBK,EA3BrB,WACb,IAAMC,EAAOJ,UAAb,QACA,IACEI,mBACAA,qCACAA,0BAAkCT,EAAlCS,KACAA,uCAsBAU,eAAa,IAlBjB,IE3CG,IAAMC,EAA6B,CACxCC,KAAM,IADkC,IAExCC,UAAW,IAF6B,IAIxCC,GAJwC,cAOtC,OAFAC,KAAA,aAAwBA,KAAKH,KAAKI,IAAIC,EAAtC,IACAF,KAAA,oBACA,MAGFG,IAVwC,cAWtC,KAAc,CACZ,IAAMC,EAAKJ,KAAKH,KAAKQ,IAAIH,GAAd,QAA6B,SAAAE,GAAE,OAAIA,IAAJ,KAE1C,OADAJ,KAAA,cACA,KAGF,OADAA,KAAA,eACA,MAGFM,WApBwC,YAqBtC,IAAMC,EAASP,KAAKF,UAAUO,IAA9B,GAMA,OALA,IACEE,WAAe,mBAAsBC,aAAtB,MACfR,KAAA,qBAGF,MAWFS,KAtCwC,Y,kCAsClBC,uDACpBV,KAAA,aACEA,KAAKH,KAAKQ,IAAIH,GAAd,SAA8B,YAC5B,IAAMS,EAAQtB,YAAW,WAEvBuB,oBAFF,GAKA,oBAA6B,kBAA7B,IACA,gCCvGR,SAAgBC,EAAaC,EAAQC,mBAAU,GAC7C,IAAMC,EAAMC,iBAAZ,GAMA,OAJAC,qBAAU,WACR,IAAaF,gBAGRA,EAAP,Q,SCNcG,EAAQC,EAAcC,GACpC,OAAQA,EAAR,MACE,UACE,MAAO,aAAWA,EAAX,kBAAkC,SAAAC,GAAE,OAAIA,IAAOD,EAAX,WAC7C,aACE,OAAO3E,EAAW2E,EAAX,SACHD,EAAA,QAAa,SAAAE,GAAE,OAAIA,IAAOD,EAAX,WADnB,I,SCqCUE,EAAkB1C,G,IACvB2C,EAAeC,sBAAW,SAAAC,GAAC,OAAIA,EAAJ,IAAF,GAAzBF,G,EACiBC,qBAAWN,EAAS,IAAvCQ,OAAOC,OACRC,EAAeZ,iBAArB,MACIa,EAAajB,EAAjB,GACIkB,EAAQlB,EAAZ,IACMmB,EAAanB,EAAnB,IACMoB,EAAWpB,EAA6B,CAC5CqB,SAD4C,EAE5CC,eAF4C,EAG5CtD,MAH4C,EAI5CuD,YAJ4C,KAK5CC,cAL4C,EAM5CC,SAAU,SAAAhB,GAAE,OAAIU,MAAJ,QAyBd,cACE,WAAOL,aAGT,c,IAA6BS,gB,EACaH,EAASpD,MAAzC0D,UAAOC,yBAEbD,KACEH,GACCH,mBAHL,KAKEH,GAAcC,EAAdD,OACAC,MAIJ,cACE,IAAMU,EAAWV,EAAjB,OAOA,IANAD,EAAapF,KACToF,EADSpF,EAEToF,EAAaG,EAFjBH,gBAIA,IAAoBA,KAEhBW,EAAJ,EAAkB,CAChB,IAAMC,EAAWhG,OAA0BuF,QAA3C,MAEA,GAAIQ,OAAJ,IAAsBC,EACpBT,mBACAU,QACK,CACL,IAAMC,EAAYF,MAAlB,EACAT,mBAEA,IAAK,IAAIY,EAAT,EAAgBA,EAAhB,EAA+BA,IAAKF,KAGxCf,EAAS,CAAEkB,KAAF,SAAkBnG,YAG7B,a,MACgDoF,UAAtCgB,iBAAcC,eAAYC,YAGlC5D,YAAW,WACT6D,EAAYH,EAAcC,EAA1BE,KADF7D,KAwBF,gB,IAEI8D,UAAOF,YAAYG,2BAErB,GAAKtG,EAAD,KAlBN,Y,IACEsF,gBACAzF,YACA0G,aAEA,UAAQxB,EAAD,SACJI,8BACCG,IAAgBH,QAFb,aAGJA,oBAHI,MAG+BoB,GAUPC,CAA/B,I,IAEQ3G,EAAsByG,EAAtBzG,QAAS0G,EAAaD,EAAbC,SACTxE,EAAyBoD,EAAzBpD,MACF0E,EAAa,kBAAMC,EAAN,IACbC,IAAiBpB,EAFUJ,EAAlBI,eAEf,GAEA,GAAmBP,IAEnB,IPzIF4B,EACAC,EOwIQX,EAAyB,CAC7BrG,QAD6B,EAE7B0G,SAF6B,EAG7BO,IAAKR,OAAenB,EAHS,WAI7Ba,KAAMM,EAJuB,KAK7BG,WAL6B,EAM7BM,YAAaT,EANgB,YAO7BU,IAAKjF,EAPwB,IAQ7BH,SAAU0E,YAAqBvE,EARF,SAS7BkF,WAAYX,cAAuBvE,EATN,WAU7BmF,UAAWvH,EAAe2G,aAAqBvE,EAVlB,gBAW7BoF,cAAexH,EACb2G,iBAAyBvE,EAZE,eAc7BM,MAAOiE,SAAiBvE,EAdK,WAe7BqF,UAAWd,aAAqBvE,EAfH,UAgB7BsF,QAASf,WAAmBvE,EAhBC,QAiB7BuF,aAAc9H,EAAO8G,EAAP9G,cACV8G,EADU9G,aAEVuC,EAnByB,aAoB7BwF,iBAAkB/H,EAAO8G,EAAP9G,kBACd8G,EADc9G,iBAEduC,EAtByB,iBAuB7ByF,UAAWhI,EAAO8G,EAAP9G,WACP8G,EADO9G,UAEPuC,EAzByB,UA0B7B0F,iBAAkBpI,EAAMiH,EAANjH,kBACdiH,EADcjH,iBAEb0C,EA5BwB,iBA6B7B2F,aAAclI,EAAO8G,EAAP9G,cACV8G,EADU9G,aAEVuC,EA/ByB,aAgC7B4F,kBAAmBhI,EACjB2G,qBAA6BvE,EAjCF,mBAmC7B6F,cAAetB,iBAAyBvE,EAnCX,cAoC7B8F,WP7KJjB,EO6KiCN,EAAD,UP5KhCO,EO4KoD9E,EApCnB,WPtI1B6E,OACJvH,MAAyBuH,EADrBA,IAAP,GO2KIkB,gBAAiBtI,EAAO8G,EAAP9G,iBACb8G,EADa9G,gBAEbuC,EAvCyB,gBAwC7BgG,SAAUzB,EAxCmB,SAyC7B0B,KAAMvI,EAAM6G,EAAN7G,MAAsB6G,EAAtB7G,KAAqCsC,EAzCd,KA0C7BkG,YA1C6B,YAyGjC,mBACS/C,EAAP,GACAR,IAhEIwD,MAIAxI,EAAK4G,EAAT,UAA0BJ,SAAoBI,EAApBJ,QACtBxG,EAAK4G,EAAT,WAA2BJ,UAAqBI,EAArBJ,SAE3B,IAAIa,EAAchF,EAAlB,aAEIuE,mBAAiCtG,EAAcsG,EAAnD,aACES,EAAcT,EAAdS,aACK,IAAIT,gBACTS,GAAc/G,EAAc+B,EAAd/B,cAAmC+B,EAAnC/B,aAGhBkG,gBAEA,IAAID,EAAJ,EAEI/F,8BAA4BT,EAAMQ,EAAtC,MACEgG,EAAekC,uBAAalI,EAAS,CACnCwG,eAEO/G,EAAJ,KACLuG,EAAehG,EAAQ,CAAEwG,gBAKzB1E,SACAA,QADAA,GAEAiD,EAAajD,EAFbA,OADF,EAMEkD,OAAW,CAAEgB,aAAF,EAAgBC,WAAhB,EAA4BC,YAC9B9G,MAAiBgH,EAArB,EACL9D,YAAW,WACT6D,EAAYH,EAAcC,EAA1BE,KADF7D,GAIA6D,EAAYH,EAAcC,EAA1BE,IAIJ,kB,IAKUvG,EAAYqG,EAAZrG,QAERqF,KAAsB,CACpBjF,QADoB,EAEpB8B,MAAOmE,GAETpB,EAAS,CACPkB,KADO,MAEPnG,QAFO,EAGPsG,YA8BJ,OA1OA/B,qBAAU,WASR,OARAe,cAAuBpD,EAAvBoD,YACArC,8BAGmB,SAAAjD,GAAO,OAAIkF,WAAwB2B,EAA5B,MAH1B5D,kBAOO,kBAAMA,EAAA,OAAN,MATTsB,IAYAA,qBAAU,WACRe,kBACAA,iBAA0BN,EAA1BM,OACArC,SAAgC+B,EAAhC/B,OAA8Cf,EAA9Ce,eACC,CAJHsB,IAMAA,qBAAU,WACRe,aAuNK,CACLiD,iBAtBF,YAQE,IALA,IAAMC,EAAN,GACMC,EAAYvG,cACdwG,eADcxG,UAEdwG,YAFJ,GAISxC,EAAT,EAAgBA,EAAIuC,EAApB,OAAsCvC,IAAK,CACzC,IAAMlB,EAAQK,EAAWoD,EAAzB,IACQ1G,EAAaiD,EAFoB,eAGzCwD,OAA4BA,KAA5BA,IAEAA,aAGF,OAAQE,OAAA,aAAwD,SAAAC,GAAC,OAC/DlF,EAAGkF,EAAGH,EADyD,QAOjEnD,WAFK,EAGLH,aAHK,EAILQ,iBCxRJ,SAASkD,EAAKC,GACZ,OAAOA,iBAAmBA,wBAAnBA,EACHA,mBADGA,QAEHA,EAFJ,QAWF,SAAgBC,EAAS5G,G,MACW6G,oBAAS,GAApCC,OAAWC,O,EACwCF,oBAAS,GAA5D/G,OAAuBkH,OACxBC,EAAW7E,iBAAjB,MACM8E,EAAOlF,EAAqB,CAChCmF,MADgC,EAEhCtE,EAFgC,EAGhCuE,EAHgC,EAIhCC,OAJgC,EAKhCC,gBALgC,EAMhCC,iBANgC,EAOhCC,SAPgC,EAQhCC,aAAc,OAEVC,EAAY1F,EAAUhC,GAA5B,GACQ8F,EAA+D9F,EAA/D8F,UAAWP,EAAoDvF,EAApDuF,aAAcb,EAAsC1E,EAAtC0E,WAAYY,EAA0BtF,EAA1BsF,QAASK,EAAiB3F,EAAjB2F,aA4BtD,cAGE,IAAM7C,EAAQmE,EAAd,QACAC,qBACAA,aACAA,eAAoBpE,EAApBoE,wBACApE,sBACAoE,QAAaA,IAASR,EAAKC,EAA3BO,aACAA,kBAAuBpE,eAAqB9C,mBAA5CkH,KAGF,aACE,GAAIA,EAAJ,aAAuB,OACgBA,EADhB,aACbS,EADa,MACRC,EADQ,SACAC,EADA,OACMC,EADN,QAInB9H,gBACAkH,KADAlH,GAEAkH,KAFAlH,GAGAkH,KAHAlH,GAIAkH,KALF,EAOEa,IAEAC,KAKN,aACEjB,MAGF,aACEA,MA6BF,cACE,IAAMjE,EAAQmE,EAAd,QAEIC,EAAJ,UACE,GAAea,IAEfb,IAASR,EAATQ,GACAA,SAAcA,IAASA,EAAvBA,MACAA,IAzHN,SAAcP,GACZ,OAAOA,iBAAmBA,wBAAnBA,EACHA,mBADGA,QAEHA,EAFJ,QAwHasB,CALO,GAQZf,UAAeA,EAAnB,IAA2BA,sBAE3BpE,gCAAsCoE,EAAtCpE,aACAA,oBAAyB,EACvBoF,SAAShB,SAAcA,EADzBpE,mBAKJ,aACE,IAAMA,EAAQmE,EAAd,QACA,GAAIC,EAAJ,QAAkB,CAGhB,GAFAA,aAEIgB,SAAShB,EAATgB,QAAwBhB,EAA5B,gBAGE,OAFAF,WACAhH,eAIF8C,kDACAA,kCACAA,qBA1HJT,qBAAU,WAIR,OAHI1E,EAAKqC,EAAT,SACEA,SAAa7B,yBAAe6B,EAAf7B,WAAkC6B,WAA/CA,OAEK,WACDrC,EAAK+J,EAAT,UACEA,UACEvJ,yBAAeuJ,EAAfvJ,WAAsCuJ,WADxCA,UANNrF,IAYAA,qBAAU,WAER,OADArC,cA8DAmI,yCACAA,uCAEAA,yCACAA,yCAjEO,WACLnI,cAoEFmI,4CACAA,0CAEAA,4CACAA,+CAtEC,CAACnI,EALJqC,YAOAA,qBAAU,WAER,OADArC,qBA6CAhC,mCACAA,mCA7CO,WACLgC,qBAgDFhC,sCACAA,yCA/CC,CAACgC,EALJqC,mBA2GA,IAAM+F,EAA4C,CAChDC,YADgD,EAEhDC,aAFgD,EAGhDC,UAHgD,EAIhDC,WAAYC,GAgBd,OAbI3C,GAAJ,IACEsC,iBACAA,kBAIF,IACEA,UAAwB,YACtB9C,GAAWA,EAAXA,GACA4B,mBAAwBxC,MAIrB,CACLsD,UADK,EAELD,WAFK,EAGLjB,UAHK,EAILhH,sBAJK,EAKLmH,SALK,EAMLmB,iB,SCpMYM,K,IACdhE,eACAT,S,IACA0E,qBAAYA,EAAA,UAEZ,OACE,kCACExD,UAAc,kDAA+ElB,EAC7FA,KAAK,SACLqB,QAAS,SAAAqB,GACPA,oBACAjC,M,aAEUiE,GAEZ,+B,cAAiB,OAAOC,QAAQ,aAC9B,gCACEC,SAAS,UACTC,EAAE,+H,SCmCIC,K,QACdzE,UACAwC,cACApC,eACAT,SACA+E,SACA7D,cACO8D,IAAP3I,MACA4I,uBACAlD,aACAf,QACAkE,SAEM7I,EAAK,QAET8I,kBAAsB9E,EAFb,KAGT+E,mBAAoBvC,EAAY,UAHvB,SAITwC,QAASN,EAAO,EAAI,IAGtB,IAAwB1I,6BAExB,IAAMiJ,EAAaC,IACd,yBACHN,EACO,qCACA,mCACJ,2BALgB,UAOb,+BAPa,KAArB,GAeMO,IAAc,MACjBP,GAAsBlD,GAAtBkD,oBADiB,kBAIhBA,GAAsBlD,EAAtBkD,OAEI,WACEC,GAAQzE,KAPlB,GAWA,OAAOgF,6CAAKvE,UAAWoE,EAAYjJ,MAAOA,GAA1C,IAGFyI,eAA2B,CACzB9E,KAAMtF,EADmB,QAEzBqK,MAAM,GC5GD,IAAMW,EAA8B,SAAA3J,G,QAMrC4G,EAAS5G,GAJX8G,cACAhH,0BACAmH,aACAmB,kBAGApD,EAqBEhF,EArBFgF,YACApF,EAoBEI,EApBFJ,SACAkG,EAmBE9F,EAnBF8F,UACAR,EAkBEtF,EAlBFsF,QACArB,EAiBEjE,EAjBFiE,KACA8B,EAgBE/F,EAhBF+F,gBACArB,EAeE1E,EAfF0E,WACYkF,EAcV5J,EAdFkF,WACArF,EAaEG,EAbFH,SACAsF,EAYEnF,EAZFmF,UACA7E,EAWEN,EAXFM,MACA8E,EAUEpF,EAVFoF,cACAC,EASErF,EATFqF,UACAO,EAQE5F,EARF4F,kBACAC,EAOE7F,EAPF6F,cACArB,EAMExE,EANFwE,SACAyB,EAKEjG,EALFiG,KACAD,EAIEhG,EAJFgG,SACAf,EAGEjF,EAHFiF,IACAnH,EAEEkC,EAFFlC,QACAoI,EACElG,EADFkG,YAEI2D,EAAaL,IACd,kBACA,oBAFgB,UAIb,wBAJa,KAArB,GAQMN,IAAN,EAWA,OACE,2BACEY,GAAI9J,EAAK,GACT+J,QAAM,EACNhK,KAAMmG,EACNrG,SAAUA,EACVC,sBAAuBA,EACvBkK,QAAS/C,GAET,6CACExE,GAAI3E,EACJwH,QAASA,EACTH,UAAW0E,GACPzB,GACJ9H,MAAOA,EACP6B,IAAK8E,IAEL,+CACOjH,EAAK,IAAO,CAAEiG,KAAMA,GAAR,CACjBd,UAAWqE,IAAM,uBAAJ,GACblJ,MAAO+E,IAXX,GAlBJ,YACE,MAAkB,OAAO,KAEzB,IAAMrF,EAAQ,CAAE0E,WAAF,EAAcT,QAC5B,OAAItG,EAAJ,GAA8BqH,EAAP,GACnB0E,yBAAJ,GACSA,yBAAP,QADF,EA4BKO,CAfH,IAgBInE,GAAD,IACC,2CACOtB,IAAA,EACD,CAAEO,IAAK,MAAMP,GACb,IACJS,IAAKA,EACLX,MAAOwB,EACPgB,UAAWA,EACXqC,KAAMnJ,EAAK,GACX0E,WAAYA,EACZsE,KAAMjD,EACN9B,KAAMA,EACN3D,MAAOuF,EACPV,UAAWS,EACXsD,mBAAoBA,EACpBlD,SAAUA,QC/FhBkE,EAAShL,EAAc,CAC3BC,MAAU,yBACVC,KAAS,wBACTE,gBAAgB,ICAL6K,EAAkD,SAAC,G,IAC9DvK,aACAuF,cACA7E,UACG8J,wCAMH,cAFOA,EAAI,GAGT,+BAAKjF,UAAWA,EAAY7E,MAAOA,GAChC,kBAA6B,SAAA+J,GAAK,OACjCX,yBADiC,QCL5BY,EAAgD,SAAAtK,G,MACD0C,EAAkB,GAApE2D,qBAAkBrD,iBAAcQ,kBAGhC2B,EAAuCnF,EAAvCmF,UAAW7E,EAA4BN,EAA5BM,MAAO2E,EAAqBjF,EAArBiF,IAAK1B,EAAgBvD,EAAhBuD,YAE/B,OACE,+BACEpB,IAAKa,EACLmC,UAAW,WACX1C,GAAIc,GAEH8C,GAAiB,c,MACVkE,EAAO,CACXpF,UAAWqE,IACN,4BACA,8BAFQ,UAGL,kCAHK,KAIX5L,EALS,IAOX0C,MACE,IAAAiG,EAAA,eACgBiE,cAAe,SAD/B,SAKJ,OACE,2CAAqBD,GAAMxF,IAAG,aAAelF,IAC1C0G,EAAA,KAAc,Y,IAAGrI,YAAgBiG,IAAPnE,MACzB,OACE,2CACMmE,GACJ2F,GAAItG,EAAcW,EAAD,SACjBY,IAAG,SAAWZ,EAAWY,IACzBC,aACEb,oBAEIA,EAAWa,cARrB,YA2DdsF,eAA8B,CAC5BzK,SAAUzB,EADkB,UAE5B8G,WAF4B,EAG5BD,KAH4B,EAI5Ba,UAJ4B,IAK5BC,iBAL4B,EAM5Bf,YAN4B,EAO5BO,cAP4B,EAQ5BC,kBAR4B,EAS5BG,cAT4B,EAU5B8E,aAV4B,EAW5BhF,WAX4B,EAY5BC,iBAZ4B,GAa5BO,KAAM,SC1FR,IACA,EACA,EACA,EAHIyE,EAAa,IAAjB,IAIIxH,EAAJ,GACIyH,GAAJ,EAKA,SAASC,IACP,OAAOF,OAAP,EAcF,SAASjH,EAAS3F,EAAlB,G,IACQ+M,EATR,SAAsBtH,GACpB,OAAKqH,IACEF,MAAgBnH,GAAcuH,GADA,KAQnBC,CADaxH,eAE/B,SAEOsH,WAAP,GAFuB,KAQzB,SAASG,IACP,OAAQ9C,2BAA6B+C,oBAA9B,cAAP,IAMF,SAASC,EAAW3G,GAClB,OAAIA,IAAY7G,EAAM6G,EAAN7G,UAA0BJ,EAAMiH,EAAhD,UACSA,EAAP,QAGKyG,IAOT,SAASG,EAAc,EAAvB,GAgBE,OAZIP,IACF7J,eAEAmC,OAAW,CAAEhF,QAAF,EAAWqG,YAClBoG,GAAJ,IACEA,KACAS,EAAmBjD,uBAAnBiD,OACAjD,6BACAkD,iBAAO3B,2CAAD,IAAN2B,KAIG9G,EAAP,QAMF,SAAS+G,EAAarH,EAAtB,GACE,eAEEA,KAAOM,GAAWA,EAAZ,MAFR,EAGEzG,QAASoN,EAAW3G,KAIxB,IAAMzB,EAAQ,SAAC5E,EAAD,UACZiN,EAAcjN,EAASoN,EAAa3M,EAAD,QADvB,KAGdmE,UAAgB,qBACdqI,EAAcjN,EAASoN,EAAa3M,EAAD,QADrB,KAGhBmE,OAAa,qBACXqI,EAAcjN,EAASoN,EAAa3M,EAAD,KADxB,KAGbmE,QAAc,qBACZqI,EAAcjN,EAASoN,EAAa3M,EAAD,MADvB,KAGdmE,UAAgB,qBACdqI,EAAcjN,EAASoN,EAAa3M,EAAD,QADrB,KAGhBmE,OAAa,qBACXqI,EAAcjN,EAASoN,EAAa3M,EAAD,KADxB,KAMbmE,OAAaA,EAAbA,QAKAA,UAAgB,mBACd8H,KAA2B7J,EAAA,OADb,IAMhB+B,oBAA0B,4BAACyI,MAAD,IACxBX,KAA2B7J,EAAA,OADH,IAM1B+B,WAAiB,YACf,IAAIU,GAAJ,EAQA,OANAkH,WAAmB,SAAAG,GACbA,iBAA2BA,gBAA/B,KACErH,SAIJ,GAGFV,SAAe,mBAAcyB,UAAyB,IAGpD/D,YAAW,WACT,IAAMsC,EAAQW,EAAS3F,EAAvB,GACA,KAAW,KACM0N,EAAoC1I,EAD1C,MAC2B2I,EAAe3I,EAD1C,QAGH4I,EAAc,EAAH,QAGf5N,QAASyG,WAHM,EAIfC,SAAUwG,MAGRU,YAAJ,IAAqCA,aAErC,IAAMxN,EACJ,qBAAOwN,EAAP,OACIA,EADJ,OADF,SAIOA,EAAP,OAEAP,EAAcjN,EAAdiN,MApBJ3K,IA4BFsC,OAAa,YACXA,WAAiB,CACfkD,SAAU,KAQdlD,WAAiB,YAIf,OAHInF,EAAJ,IACEoD,UAEK,WACLpD,MAAkBoD,EAAA,MAAlBpD,KAOJmF,YAAkB,iBAAC6I,UAA8B,IAC/ChB,KACAiB,KAGF9I,aACAA,SAMA/B,QACsB,YAClB+J,EAAiBe,eAAjBf,EACAJ,WAEAxH,WAAc,SAAA4I,GACZ/K,SAA8B+K,EAA9B/K,QAA4C+K,EAA5C/K,YAGFmC,QATJnC,MAWyB,YACrB2J,EAAU,OAAQmB,eAAlBnB,GAEA,IAAIA,QACF3J,uBAMEhD,GAAJ,GACEoK,iC,qBCpPN,OAOC,WACA,aAEA,IAAI4D,EAAS,GAAGC,eAEhB,SAASzC,IAGR,IAFA,IAAI0C,EAAU,GAELjI,EAAI,EAAGA,EAAIkI,UAAUC,OAAQnI,IAAK,CAC1C,IAAI/B,EAAMiK,UAAUlI,GACpB,GAAK/B,EAAL,CAEA,IAAImK,SAAiBnK,EAErB,GAAgB,WAAZmK,GAAoC,WAAZA,EAC3BH,EAAQI,KAAKpK,QACP,GAAIxC,MAAM6M,QAAQrK,IAAQA,EAAIkK,OAAQ,CAC5C,IAAII,EAAQhD,EAAWiD,MAAM,KAAMvK,GAC/BsK,GACHN,EAAQI,KAAKE,QAER,GAAgB,WAAZH,EACV,IAAK,IAAIrH,KAAO9C,EACX8J,EAAOU,KAAKxK,EAAK8C,IAAQ9C,EAAI8C,IAChCkH,EAAQI,KAAKtH,IAMjB,OAAOkH,EAAQS,KAAK,KAGgBC,EAAOC,SAC3CrD,EAAWsD,QAAUtD,EACrBoD,EAAOC,QAAUrD,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aAtCP,I,iCCPD,WAKIuD,EAAmBpD,kBAMRoD,O,iCCXf,WAKIC,EAAerD,kBAMJqD,O,uDCXf,wDA8BIC,EAAQtD,cAAiB,SAAe1J,EAAOmC,GACjD,IAAI8J,EAAUjM,EAAMiM,QAChB9G,EAAYnF,EAAMmF,UAClB8H,EAAmBjN,EAAMkN,UACzBC,OAAiC,IAArBF,EALK,QAK4CA,EAC7DG,EAAiBpN,EAAMqN,QACvBA,OAA6B,IAAnBD,EAA4B,UAAYA,EAClDE,EAActN,EAAMuN,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3CE,EAAsBxN,EAAMyN,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDE,EAAQC,YAAyB3N,EAAO,CAAC,UAAW,YAAa,YAAa,UAAW,OAAQ,iBAEjG4N,EAAQlE,WAAc,WACxB,MAAO,CACL2D,QAASA,EACTE,KAAMA,EACNE,aAAcA,KAEf,CAACJ,EAASE,EAAME,IACnB,OAAoB/D,gBAAoBqD,IAAac,SAAU,CAC7DC,MAAOF,GACOlE,gBAAoByD,EAAWY,YAAS,CACtD9H,KAxBmB,UAwBbkH,EAAiC,KAAO,QAC9ChL,IAAKA,EACLgD,UAAW6I,YAAK/B,EAAQgC,KAAM9I,EAAWsI,GAAgBxB,EAAQwB,eAChEC,QA0CUQ,iBA3FK,SAAgBC,GAClC,MAAO,CAELF,KAAM,CACJG,QAAS,QACTC,MAAO,OACPC,eAAgB,WAChBC,cAAe,EACf,YAAaR,YAASA,YAAS,GAAII,EAAMK,WAAWC,OAAQ,GAAI,CAC9DpB,QAASc,EAAMO,QAAQ,GACvBC,MAAOR,EAAMS,QAAQC,KAAKC,UAC1BC,UAAW,OACXC,YAAa,YAKjBvB,aAAc,CACZa,eAAgB,eAyEY,CAChCW,KAAM,YADOf,CAEZlB,I,iCCpGH,wDAaIkC,EAAY,CACdC,QAAS,QAGPC,EAAY1F,cAAiB,SAAmB1J,EAAOmC,GACzD,IAAI8J,EAAUjM,EAAMiM,QAChB9G,EAAYnF,EAAMmF,UAClB8H,EAAmBjN,EAAMkN,UACzBC,OAAiC,IAArBF,EALK,QAK4CA,EAC7DS,EAAQC,YAAyB3N,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoB0J,gBAAoBoD,IAAiBe,SAAU,CACjEC,MAAOoB,GACOxF,gBAAoByD,EAAWY,YAAS,CACtD5I,UAAW6I,YAAK/B,EAAQgC,KAAM9I,GAC9BhD,IAAKA,EACL8D,KAbmB,UAabkH,EAAiC,KAAO,YAC7CO,QAyBUQ,gBAhDK,CAElBD,KAAM,CACJG,QAAS,uBA6CqB,CAChCa,KAAM,gBADOf,CAEZkB,I,iCCzDH,gEA4CIC,EAAW3F,cAAiB,SAAkB1J,EAAOmC,GACvD,IAAI8J,EAAUjM,EAAMiM,QAChB9G,EAAYnF,EAAMmF,UAClB8H,EAAmBjN,EAAMkN,UACzBC,OAAiC,IAArBF,EAVK,KAU4CA,EAC7DqC,EAAetP,EAAMuP,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAkBxP,EAAMyP,SACxBA,OAA+B,IAApBD,GAAqCA,EAChD9B,EAAQC,YAAyB3N,EAAO,CAAC,UAAW,YAAa,YAAa,QAAS,aAEvFkP,EAAYxF,aAAiBoD,KACjC,OAAoBpD,gBAAoByD,EAAWY,YAAS,CAC1D5L,IAAKA,EACLgD,UAAW6I,YAAK/B,EAAQgC,KAAM9I,EAAW+J,GAAa,CACpD,KAAQjD,EAAQyD,KAChB,OAAUzD,EAAQ0D,QAClBT,EAAUC,SAAUI,GAAStD,EAAQsD,MAAOE,GAAYxD,EAAQwD,UAClExJ,KAxBmB,OAwBbkH,EAAiC,KAAO,OAC7CO,OAmCUQ,iBA1FK,SAAgBC,GAClC,MAAO,CAELF,KAAM,CACJU,MAAO,UACPP,QAAS,YACTwB,cAAe,SAEfC,QAAS,EACT,gBAAiB,CACfC,gBAAiB3B,EAAMS,QAAQpM,OAAO+M,OAExC,+BAAgC,CAC9BO,gBAAiBC,YAAK5B,EAAMS,QAAQE,UAAUkB,KAAM7B,EAAMS,QAAQpM,OAAOyN,mBAK7ER,SAAU,GAGVF,MAAO,GAGPG,KAAM,GAGNC,OAAQ,MA+DsB,CAChCV,KAAM,eADOf,CAEZmB,I,iCCpGH,iFAqHIa,EAAYxG,cAAiB,SAAmB1J,EAAOmC,GACzD,IAeI8D,EACAkH,EAhBAgD,EAAenQ,EAAMoQ,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9ClE,EAAUjM,EAAMiM,QAChB9G,EAAYnF,EAAMmF,UAClB+H,EAAYlN,EAAMkN,UAClBmD,EAAcrQ,EAAMqN,QACpBiD,EAAYtQ,EAAMuQ,MAClBC,EAAWxQ,EAAMuN,KACjBkD,EAAgBzQ,EAAMyQ,cACtBC,EAAc1Q,EAAMmP,QACpBzB,EAAQC,YAAyB3N,EAAO,CAAC,QAAS,UAAW,YAAa,YAAa,UAAW,QAAS,OAAQ,gBAAiB,YAEpI4N,EAAQlE,aAAiBqD,KACzBmC,EAAYxF,aAAiBoD,KAC7B6D,EAAazB,GAAmC,SAAtBA,EAAUC,QAIpCjC,GACFC,EAAYD,EACZjH,EAAO0K,EAAa,eAAiB,QAErCxD,EAAYwD,EAAa,KAAO,KAGlC,IAAIJ,EAAQD,GAEPC,GAASI,IACZJ,EAAQ,OAGV,IAAIlD,EAAUgD,IAAgBzC,GAASA,EAAMP,QAAUO,EAAMP,QAAU,WACnEE,EAAOiD,IAAa5C,GAASA,EAAML,KAAOK,EAAML,KAAO,UACvD4B,EAAUuB,GAAexB,GAAaA,EAAUC,QAChDyB,EAAW,KAMf,OAJIH,IACFG,EAA6B,QAAlBH,EAA0B,YAAc,cAGjC/G,gBAAoByD,EAAWY,YAAS,CAC1D5L,IAAKA,EACLgD,UAAW6I,YAAK/B,EAAQgC,KAAMhC,EAAQkD,GAAUhK,EAAqB,YAAViL,GAAuBnE,EAAQ,QAAQ4E,OAAOC,YAAWV,KAAsB,YAAZ/C,GAAyBpB,EAAQ,UAAU4E,OAAOC,YAAWzD,KAAqB,WAATE,GAAqBtB,EAAQ,OAAO4E,OAAOC,YAAWvD,KAAqB,SAAZ4B,GAAsBvB,GAASA,EAAMH,cAAgBxB,EAAQwB,cACnU,YAAamD,EACb3K,KAAMA,EACNsK,MAAOA,GACN7C,OAkEUQ,iBA5NK,SAAgBC,GAClC,MAAO,CAELF,KAAMF,YAASA,YAAS,GAAII,EAAMK,WAAWC,OAAQ,GAAI,CACvDL,QAAS,aACTwB,cAAe,UAGfmB,aAAc,kBAAkBF,OAA8B,UAAvB1C,EAAMS,QAAQ3K,KAAmB+M,YAAQjB,YAAK5B,EAAMS,QAAQqC,QAAS,GAAI,KAAQC,YAAOnB,YAAK5B,EAAMS,QAAQqC,QAAS,GAAI,MAC/JlC,UAAW,OACX1B,QAAS,KAIXqC,KAAM,CACJf,MAAOR,EAAMS,QAAQC,KAAKsC,QAC1BC,WAAYjD,EAAMK,WAAW6C,QAAQ,IACrCC,WAAYnD,EAAMK,WAAW+C,kBAI/BC,KAAM,CACJ7C,MAAOR,EAAMS,QAAQC,KAAKsC,SAI5BxB,OAAQ,CACNhB,MAAOR,EAAMS,QAAQC,KAAKC,UAC1BsC,WAAYjD,EAAMK,WAAW6C,QAAQ,IACrCI,SAAUtD,EAAMK,WAAW6C,QAAQ,KAIrCK,UAAW,CACTrE,QAAS,oBACT,eAAgB,CACdsE,aAAc,IAEhB,oBAAqB,CACnBtD,MAAO,GAEPhB,QAAS,kBACT,eAAgB,CACduE,YAAa,GACbD,aAAc,IAEhB,QAAS,CACPtE,QAAS,KAMfwE,gBAAiB,CACfxD,MAAO,GAEPhB,QAAS,YACT,eAAgB,CACduE,YAAa,EACbD,aAAc,IAKlBG,YAAa,CACXzE,QAAS,EACT,eAAgB,CACdA,QAAS,IAKb0E,UAAW,CACThD,UAAW,QAIbiD,YAAa,CACXjD,UAAW,UAIbkD,WAAY,CACVlD,UAAW,QACXmD,cAAe,eAIjBC,aAAc,CACZpD,UAAW,WAIbtB,aAAc,CACZ5N,SAAU,SACV8H,IAAK,EACLE,KAAM,EACNuK,OAAQ,EACRtC,gBAAiB3B,EAAMS,QAAQyD,WAAWxF,YA0Hd,CAChCoC,KAAM,gBADOf,CAEZgC,I,iCCxOH,wDAaIhB,EAAY,CACdC,QAAS,QAGPmD,EAAY5I,cAAiB,SAAmB1J,EAAOmC,GACzD,IAAI8J,EAAUjM,EAAMiM,QAChB9G,EAAYnF,EAAMmF,UAClB8H,EAAmBjN,EAAMkN,UACzBC,OAAiC,IAArBF,EALK,QAK4CA,EAC7DS,EAAQC,YAAyB3N,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoB0J,gBAAoBoD,IAAiBe,SAAU,CACjEC,MAAOoB,GACOxF,gBAAoByD,EAAWY,YAAS,CACtD5I,UAAW6I,YAAK/B,EAAQgC,KAAM9I,GAC9BhD,IAAKA,EACL8D,KAbmB,UAabkH,EAAiC,KAAO,YAC7CO,QAyBUQ,gBAhDK,CAElBD,KAAM,CACJG,QAAS,oBA6CqB,CAChCa,KAAM,gBADOf,CAEZoE","file":"static/js/5.e698b8ba.chunk.js","sourcesContent":["import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return typeof v === 'string' ? v : null;\n}\n\nexport function objectValues<T>(obj: Record<string, T>) {\n  return Object.keys(obj).map(key => obj[key]);\n}\n\nexport function hasToastId(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport const canUseDom = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT' | 'DARK';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default',\n  DARK: 'dark'\n};\n\nexport const enum DEFAULT {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify'\n}\n","import * as React from 'react';\nimport { Transition } from 'react-transition-group';\nimport { ToastTransitionProps } from '../types';\n\nimport { collapseToast } from './collapseToast';\nimport { DEFAULT } from './constant';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Define the duration of the transition in ms\n   * You can also pass an array `[enterDuration, exitDuration]`\n   * `Default: 750`\n   */\n  duration?: number | [number, number];\n\n  /**\n   * Append current toast position to the classname.\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nexport function cssTransition({\n  enter,\n  exit,\n  duration = 750,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = DEFAULT.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  let enterDuration: number, exitDuration: number;\n\n  if (Array.isArray(duration) && duration.length === 2) {\n    [enterDuration, exitDuration] = duration;\n  } else {\n    enterDuration = exitDuration = duration as number;\n  }\n\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    ...props\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n\n    const onEnter = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.add(enterClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = `${enterDuration}ms`;\n      }\n    };\n\n    const onEntered = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.remove(enterClassName);\n        node.style.cssText = '';\n      }\n    };\n\n    const onExited = () => {\n      const node = props.nodeRef.current;\n\n      if (node) {\n        node.removeEventListener('animationend', onExited);\n        collapse ? collapseToast(node, done, collapseDuration) : done();\n      }\n    };\n\n    const onExit = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.add(exitClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = `${exitDuration}ms`;\n        node.addEventListener('animationend', onExited);\n      }\n    };\n\n    return (\n      <Transition\n        {...props}\n        timeout={\n          preventExitTransition\n            ? collapse\n              ? collapseDuration\n              : DEFAULT.DEBOUNCE_DURATION\n            : {\n                enter: enterDuration,\n                exit: collapse\n                  ? exitDuration + collapseDuration\n                  : exitDuration + DEFAULT.DEBOUNCE_DURATION\n              }\n        }\n        onEnter={onEnter}\n        onEntered={onEntered}\n        onExit={preventExitTransition ? onExited : onExit}\n        unmountOnExit\n      >\n        {children}\n      </Transition>\n    );\n  };\n}\n","import { DEFAULT } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = DEFAULT.COLLAPSE_DURATION\n) {\n  const height = node.scrollHeight;\n  const style = node.style;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = height + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(() => done(), duration as number);\n    });\n  });\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\nexport type OnChangeCallback = (\n  toast: number,\n  containerId?: number | string\n) => void;\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof window.setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, toast: number, containerId?: number | string): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach((timer: TimeoutId) => clearTimeout(timer));\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import { useRef, useEffect } from 'react';\n\n/**\n * `useKeeper` is a helper around `useRef`.\n *\n * You don't need to access the `.current`property to get the value\n * If refresh is set to true. The ref will be updated every render\n */\nexport function useKeeper<T>(arg: T, refresh = false) {\n  const ref = useRef<T>(arg);\n\n  useEffect(() => {\n    if (refresh) ref.current = arg;\n  });\n\n  return ref.current;\n}\n","import { Id } from '../types';\n\nimport { hasToastId } from '../utils';\n\nexport type State = Array<Id>;\nexport type Action =\n  | { type: 'ADD'; toastId: Id; staleId?: Id }\n  | { type: 'REMOVE'; toastId?: Id };\n\nexport function reducer(state: State, action: Action) {\n  switch (action.type) {\n    case 'ADD':\n      return [...state, action.toastId].filter(id => id !== action.staleId);\n    case 'REMOVE':\n      return hasToastId(action.toastId)\n        ? state.filter(id => id !== action.toastId)\n        : [];\n  }\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  hasToastId,\n  getAutoCloseDelay\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\nimport { useKeeper } from './useKeeper';\nimport { reducer } from './toastContainerReducer';\n\ntype CollectionItem = Record<Id, Toast>;\ntype ToastToRender = Partial<Record<ToastPosition, Toast[]>>;\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toast, dispatch] = useReducer(reducer, []);\n  const containerRef = useRef(null);\n  let toastCount = useKeeper(0);\n  let queue = useKeeper<QueuedToast[]>([]);\n  const collection = useKeeper<CollectionItem>({});\n  const instance = useKeeper<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: id => collection[id] || null\n  });\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(Event.Change, toast.length, props.containerId);\n  }, [toast]);\n\n  useEffect(() => {\n    instance.props = props;\n  });\n\n  function isToastActive(id: Id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit, enableMultiContainer } = instance.props;\n    if (\n      limit &&\n      (!containerId ||\n        (instance.containerId === containerId && enableMultiContainer))\n    ) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    const queueLen = queue.length;\n    toastCount = hasToastId(toastId)\n      ? toastCount - 1\n      : toastCount - instance.displayedToast;\n\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      const freeSlot = hasToastId(toastId) ? 1 : instance.props.limit!;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (let i = 0; i < toDequeue; i++) dequeueToast();\n      }\n    }\n    dispatch({ type: 'REMOVE', toastId });\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } = queue.shift() as QueuedToast;\n\n    // ensure that exit transition has been completed, hence the timeout\n    setTimeout(() => {\n      appendToast(toastContent, toastProps, staleId);\n    }, 500);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid({\n    containerId,\n    toastId,\n    updateId\n  }: NotValidatedToastProps) {\n    return !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        containerId !== instance.props.containerId) ||\n      (instance.isToastActive(toastId) && updateId == null)\n      ? true\n      : false;\n  }\n\n  // this function and all the function called inside needs to rely on ref(`useKeeper`)\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId } = options;\n    const { props, isToastActive } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = !isToastActive(toastId);\n\n    if (isNotAnUpdate) toastCount++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent: isNum(options.draggablePercent)\n        ? options.draggablePercent\n        : (props.draggablePercent as number),\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role,\n      deleteToast() {\n        removeFromCollection(toastId);\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    let closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastProps.closeButton = closeButton;\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      toastCount > props.limit &&\n      isNotAnUpdate\n    ) {\n      queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay) && (delay as number) > 0) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    collection[toastId] = {\n      content,\n      props: toastProps\n    };\n    dispatch({\n      type: 'ADD',\n      toastId,\n      staleId\n    });\n  }\n\n  function removeFromCollection(toastId: Id) {\n    delete collection[toastId];\n    forceUpdate();\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toastToRender: ToastToRender = {};\n    const toastList = props.newestOnTop\n      ? Object.keys(collection).reverse()\n      : Object.keys(collection);\n\n    for (let i = 0; i < toastList.length; i++) {\n      const toast = collection[toastList[i]];\n      const { position } = toast.props;\n      toastToRender[position] || (toastToRender[position] = []);\n\n      toastToRender[position]!.push(toast);\n    }\n\n    return (Object.keys(toastToRender) as Array<ToastPosition>).map(p =>\n      cb(p, toastToRender[p]!)\n    );\n  }\n\n  return {\n    getToastToRender,\n    collection,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn } from '../utils';\nimport { ToastProps } from '../types';\nimport { useKeeper } from './useKeeper';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  deltaX: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(true);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useKeeper<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    deltaX: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  const syncProps = useKeeper(props, true);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      if (isFn(syncProps.onClose))\n        syncProps.onClose(\n          isValidElement(syncProps.children) && syncProps.children.props\n        );\n    };\n  }, []);\n\n  useEffect(() => {\n    props.draggable && bindDragEvents();\n    return () => {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    const toast = toastRef.current!;\n    drag.canCloseOnClick = true;\n    drag.canDrag = true;\n    drag.boundingRect = toast.getBoundingClientRect();\n    toast.style.transition = '';\n    drag.start = drag.x = getX(e.nativeEvent as DragEvent);\n    drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n\n    if (drag.canDrag) {\n      if (isRunning) pauseToast();\n\n      drag.x = getX(e as DragEvent);\n      drag.deltaX = drag.x - drag.start;\n      drag.y = getY(e as DragEvent);\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n\n      toast.style.transform = `translateX(${drag.deltaX}px)`;\n      toast.style.opacity = `${1 -\n        Math.abs(drag.deltaX / drag.removalDistance)}`;\n    }\n  }\n\n  function onDragEnd() {\n    const toast = toastRef.current!;\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.deltaX) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = 'translateX(0)';\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import * as React from 'react';\nimport { DEFAULT } from '../utils';\nimport { TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n}\n\nexport function CloseButton({\n  closeToast,\n  type,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${DEFAULT.CSS_NAMESPACE}__close-button ${DEFAULT.CSS_NAMESPACE}__close-button--${type}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import * as React from 'react';\nimport cx from 'classnames';\n\nimport { TYPE, DEFAULT } from './../utils';\nimport { TypeOptions } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: string | null;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n\n  const classNames = cx(\n    `${DEFAULT.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${DEFAULT.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${DEFAULT.CSS_NAMESPACE}__progress-bar--animated`,\n    `${DEFAULT.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${DEFAULT.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    },\n    className\n  );\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  return <div className={classNames} style={style} {...animationEvent} />;\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import * as React from 'react';\nimport cx from 'classnames';\n\nimport { ProgressBar } from './ProgressBar';\nimport { ToastProps } from '../types';\nimport { DEFAULT, isFn } from '../utils';\nimport { useToast } from '../hooks';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast\n  } = props;\n  const cssClasses = cx(\n    `${DEFAULT.CSS_NAMESPACE}__toast`,\n    `${DEFAULT.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${DEFAULT.CSS_NAMESPACE}__toast--rtl`]: rtl\n    },\n    className\n  );\n  const controlledProgress = !!progress;\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return null;\n\n    const props = { closeToast, type };\n    if (isFn(closeButton)) return closeButton(props);\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      in={props.in!}\n      appear\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(props.in && { role: role })}\n          className={cx(`${DEFAULT.CSS_NAMESPACE}__toast-body`, bodyClassName)}\n          style={bodyStyle}\n        >\n          {children}\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || controlledProgress) && (\n          <ProgressBar\n            {...(updateId && !controlledProgress\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={props.in}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={controlledProgress}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { DEFAULT, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__slide-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__slide-exit`,\n  duration: [450, 750],\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__flip-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","import * as React from 'react';\nimport { ToastProps } from '../types';\n\ntype ToastPositionerProps = Pick<ToastProps, 'className' | 'style' | 'in'>;\n\nexport const ToastPositioner: React.FC<ToastPositionerProps> = ({\n  children,\n  className,\n  style,\n  ...rest\n}) => {\n  // Monkey patch react-transition-group\n  // As exit transition is broken with strict mode\n  delete rest.in;\n\n  return (\n    <div className={className!} style={style}>\n      {React.Children.map(children, child =>\n        React.cloneElement(child as React.ReactElement<any>, rest)\n      )}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, DEFAULT, parseClassName, objectValues } from '../utils';\nimport { useToastContainer } from '../hooks';\nimport { ToastContainerProps, ToastPosition } from '../types';\nimport { ToastPositioner } from './ToastPositioner';\n\nexport const ToastContainer: React.FC<ToastContainerProps> = props => {\n  const { getToastToRender, containerRef, isToastActive } = useToastContainer(\n    props\n  );\n  const { className, style, rtl, containerId } = props;\n\n  return (\n    <div\n      ref={containerRef}\n      className={DEFAULT.CSS_NAMESPACE as string}\n      id={containerId as string}\n    >\n      {getToastToRender((position, toastList) => {\n        const swag = {\n          className: cx(\n            `${DEFAULT.CSS_NAMESPACE}__toast-container`,\n            `${DEFAULT.CSS_NAMESPACE}__toast-container--${position}`,\n            { [`${DEFAULT.CSS_NAMESPACE}__toast-container--rtl`]: rtl },\n            parseClassName(className)\n          ),\n          style:\n            toastList.length === 0\n              ? { ...style, pointerEvents: 'none' }\n              : { ...style }\n        } as any;\n\n        return (\n          <ToastPositioner {...swag} key={`container-${position}`}>\n            {toastList.map(({ content, props: toastProps }) => {\n              return (\n                <Toast\n                  {...toastProps}\n                  in={isToastActive(toastProps.toastId)}\n                  key={`toast-${toastProps.key}`}\n                  closeButton={\n                    toastProps.closeButton === true\n                      ? CloseButton\n                      : toastProps.closeButton\n                  }\n                >\n                  {content}\n                </Toast>\n              );\n            })}\n          </ToastPositioner>\n        );\n      })}\n    </div>\n  );\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  // @ts-ignore\n  ToastContainer.propTypes = {\n    // @ts-ignore\n    position: PropTypes.oneOf(objectValues(POSITION)),\n\n    // @ts-ignore\n    autoClose: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n\n    // @ts-ignore\n    closeButton: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.bool,\n      PropTypes.func\n    ]),\n    hideProgressBar: PropTypes.bool,\n    pauseOnHover: PropTypes.bool,\n    closeOnClick: PropTypes.bool,\n    newestOnTop: PropTypes.bool,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    toastClassName: PropTypes.string,\n    bodyClassName: PropTypes.string,\n    progressClassName: PropTypes.string,\n    progressStyle: PropTypes.object,\n    transition: PropTypes.func,\n    rtl: PropTypes.bool,\n    draggable: PropTypes.bool,\n    draggablePercent: PropTypes.number,\n    pauseOnFocusLoss: PropTypes.bool,\n    enableMultiContainer: PropTypes.bool,\n    containerId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    role: PropTypes.string,\n    onClick: PropTypes.func\n  };\n}\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: 80,\n  role: 'alert'\n};\n","import * as React from 'react';\nimport { render } from 'react-dom';\n\nimport { POSITION, TYPE, canUseDom, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  ToastContainerProps,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from 'hooks';\nimport { ToastContainer } from '../components';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet containerDomNode: HTMLElement;\nlet containerConfig: ToastContainerProps;\nlet queue: EnqueuedToast[] = [];\nlet lazy = false;\n\n/**\n * Check whether any container is currently mounted in the DOM\n */\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n\n/**\n * Get the container by id. Returns the last container declared when no id is given.\n */\nfunction getContainer(containerId?: Id) {\n  if (!isAnyContainerMounted()) return null;\n  return containers.get(!containerId ? latestInstance : containerId);\n}\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = getContainer(containerId);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return (Math.random().toString(36) + Date.now().toString(36)).substr(2, 10);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(<ToastContainer {...containerConfig} />, containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nconst toast = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n\ntoast.success = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.SUCCESS, options));\n\ntoast.info = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.INFO, options));\n\ntoast.error = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.ERROR, options));\n\ntoast.warning = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.WARNING, options));\n\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DARK, options));\n\n/**\n * Maybe I should remove warning in favor of warn, I don't know\n */\ntoast.warn = toast.warning;\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) =>\n  isAnyContainerMounted() && eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  isAnyContainerMounted() && eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content =\n        typeof nextOptions.render !== 'undefined'\n          ? nextOptions.render\n          : oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Track changes. The callback get the number of toast displayed\n *\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  if (isFn(callback)) {\n    eventManager.on(Event.Change, callback);\n  }\n  return () => {\n    isFn(callback) && eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * Configure the ToastContainer when lazy mounted\n */\ntoast.configure = (config: ToastContainerProps = {}) => {\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n\n    if (canUseDom && containerDomNode) {\n      document.body.removeChild(containerDomNode);\n    }\n  });\n\nexport { toast };\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends(_extends({}, theme.typography.body2), {}, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$hover:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\nvar defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      'head': classes.head,\n      'footer': classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected),\n    role: Component === defaultComponent ? null : 'row'\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends(_extends({}, theme.typography.body2), {}, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0px 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`default`).\n   */\n  padding: PropTypes.oneOf(['checkbox', 'default', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar defaultComponent = 'tbody';\nvar TableBody = React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);"],"sourceRoot":""}