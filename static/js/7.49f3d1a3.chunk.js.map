{"version":3,"sources":["views/Projects/ImageDetail.js","views/Projects/BoardDetail.js","views/Projects/ProjectForm.js","views/Projects/Projects.js"],"names":["ImageDetail","props","useState","url","setUrl","useEffect","src","zoomSrc","useStyles","makeStyles","theme","root","flexGrow","height","minWidth","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","chip","margin","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","divider","paper","color","text","secondary","button","fab","marginTop","float","extendedIcon","marginRight","formControl","Transition","React","forwardRef","ref","Slide","direction","AttentionDetail","project","setProject","setBoards","setType","board","setBoard","cellsBefore","setCellsBefore","cellsVoltaje","setCellsVoltaje","cellsCorriente","setCellsCorriente","cellsAfter","setCellsAfter","openDetailImage","setOpenDetailImage","observations","setObservations","loading","setLoading","boards","onSelectBoard","_","console","log","newItemsBoard","itemsBoards","map","item","photos","length","observation","tmpCellsBefore","filter","itemBoard","mode","tmpCellsVoltaje","tmpCellsCorriente","tmpCellsAfter","showImages","onOpenItemBoard","currentCell","openItemBoard","_id","then","response","status","cell","closeDatailImage","classes","Card","CardHeader","title","Divider","CardContent","className","content","Table","TableBody","TableRow","TableCell","i","key","Chip","size","label","name","variant","onClick","TextField","autoComplete","multiline","value","onChange","e","target","fullWidth","CircularProgress","Button","data","id","onUpdateObservationBoard","toast","success","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","itemBefore","letterOne","style","colorOne","photo","index","width","config","urlImages","itemVoltaje","textColorOne","colorTwo","textColorTwo","letterTwo","Dialog","maxWidth","open","onClose","TransitionComponent","DialogContent","DialogActions","autoFocus","ProjectForm","listCustomers","setCustomers","customers","person","disabled","customer","setCustomer","description","setDescription","errorDescription","setErrorDescription","errorTextDescription","setErrorTextDescription","validateDescription","toString","trim","onSubmitPerson","errors","validateForm","updateUser","info","createProject","Container","Paper","encType","onSubmit","preventDefault","Grid","container","xs","sm","select","clsx","textField","MenuItem","Autocomplete","getOptionLabel","option","toUpperCase","filterOptions","x","options","getOptionSelected","onInputChange","newInputValue","search","renderInput","params","renderTags","tagValue","getTagProps","indexOf","renderOption","Typography","helperText","iconWidth","icon","DialogTitle","withStyles","closeButton","right","top","children","other","disableTypography","IconButton","aria-label","Projects","listProjects","setProjects","projects","setTotalProjects","count","totalProjects","page","setPage","rowsPerPage","setRowsPerPage","setOpen","openDetailBoards","setOpenDetailBoards","openProjectForm","setOpenProjectForm","openObservations","setOpenObservations","onCloseDeleteProject","onDetailBoard","onOpenObservation","closeDatailBoards","onCloseProjectForm","onCloseObservations","Fab","TableHead","newProjects","currentProject","onSendReportProject","Swal","fire","showConfirmButton","timer","catch","TablePagination","rowsPerPageOptions","component","onChangePage","newPage","onChangeRowsPerPage","event","aria-labelledby","cursor","DialogContentText","deleteProject","BoardDetail","onSaveObservations"],"mappings":"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","file":"static/js/7.49f3d1a3.chunk.js","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react'\n\nimport InnerImageZoom from 'react-inner-image-zoom';\nimport 'react-inner-image-zoom/lib/InnerImageZoom/styles.min.css';\n\n\n\nconst ImageDetail = props => {\n\n    const [url, setUrl] = useState('');\n\n    useEffect(() => {\n\n        setUrl(props.url);\n    }, [props.url]);\n\n    return (\n        <div >\n            {\n                url ?\n                    <InnerImageZoom src={url} zoomSrc={url} />\n                    : ''\n            }\n        </div>\n    )\n}\n\nexport default ImageDetail","import React, { useState, useEffect, Fragment } from 'react'\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\n\nimport Chip from '@material-ui/core/Chip';\nimport config from '../../config';\nimport './projects.css';\nimport { Zoom } from \"react-slideshow-image\";\n\nimport 'react-slideshow-image/dist/styles.css';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Slide from '@material-ui/core/Slide';\n\nimport ImageDetail from './ImageDetail';\nimport { BiShowAlt } from 'react-icons/bi';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Button,\n} from '@material-ui/core';\n\nimport { openItemBoard, onSendEmailBoard, onUpdateObservationBoard } from '../../api/api';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n    minWidth: 290\n  },\n  input: {\n    display: \"flex\",\n    padding: 0,\n    height: \"auto\"\n  },\n  valueContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flex: 1,\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: theme.spacing(1, 2)\n  },\n  singleValue: {\n    fontSize: 16\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 2,\n    bottom: 6,\n    fontSize: 16\n  },\n\n  divider: {\n    height: theme.spacing(2)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n\n  },\n  button:\n  {\n    margin: theme.spacing(1),\n  },\n  fab:\n  {\n    marginTop: -2,\n    float: \"right\"\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}))\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n})\n\nconst AttentionDetail = props => {\n\n  const [project, setProject] = useState(null);\n  const [boards, setBoards] = useState([]);\n  const [type, setType] = useState(\"\");\n  const [board, setBoard] = useState(null);\n  const [cellsBefore, setCellsBefore] = useState([]);\n  const [cellsVoltaje, setCellsVoltaje] = useState([]);\n  const [cellsCorriente, setCellsCorriente] = useState([]);\n  const [cellsAfter, setCellsAfter] = useState([]);\n  const [openDetailImage, setOpenDetailImage] = useState(false);\n  const [url, setUrl] = useState('');\n  const [observations, setObservations] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setProject(props.project);\n    setType(props.project.type);\n    setBoards(props.project.boards);\n  }, [type, project, props.project]);\n\n  const onSelectBoard = board => _ => {\n    console.log(board);\n\n    let newItemsBoard = board.itemsBoards.map(item => {\n      if (item.photos.length === 0) {\n        item.photos = [{\n          url: 'default.png',\n          type: 'remote'\n        }];\n      }\n\n      return item\n    });\n    board.itemsBoards = newItemsBoard;\n    setBoard(board);\n    setObservations(board.observation)\n    console.log(board.observation);\n\n    let tmpCellsBefore = board.itemsBoards.filter(itemBoard => itemBoard.item.mode == 'before')\n    setCellsBefore(tmpCellsBefore);\n\n    let tmpCellsVoltaje = board.itemsBoards.filter(itemBoard => itemBoard.item.type == 'voltaje')\n    setCellsVoltaje(tmpCellsVoltaje);\n\n    let tmpCellsCorriente = board.itemsBoards.filter(itemBoard => itemBoard.item.type == 'corriente')\n    setCellsCorriente(tmpCellsCorriente);\n\n    let tmpCellsAfter = board.itemsBoards.filter(itemBoard => itemBoard.item.mode == 'after')\n    setCellsAfter(tmpCellsAfter);\n  }\n\n  const showImages = url => _ => {\n    console.log(\"showImages\", url);\n    setUrl(url);\n    setOpenDetailImage(true);\n  }\n  const onOpenItemBoard = currentCell => _ => {\n    openItemBoard(currentCell._id).then(response => {\n\n      if (response.status === 'success') {\n        switch (currentCell.item.mode) {\n          case 'before':\n            let tmpCellsBefore = cellsBefore.map(cell => {\n              console.log('cell ', cell)\n              if (cell._id === currentCell._id) {\n                cell.status = 'activo';\n              }\n              return cell;\n            })\n            setCellsBefore(tmpCellsBefore);\n            break;\n          case 'after':\n            let tmpCellsAfter = cellsAfter.map(cell => {\n              if (cell._id === currentCell._id) {\n                cell.status = 'activo';\n              }\n              return cell;\n            })\n            setCellsAfter(tmpCellsAfter)\n            break;\n        }\n        switch (currentCell.item.type) {\n          case 'voltaje':\n            let tmpCellsVoltaje = cellsBefore.map(cell => {\n              if (cell._id === currentCell._id) {\n                cell.status = 'activo';\n              }\n              return cell;\n            })\n            setCellsVoltaje(tmpCellsVoltaje);\n            break;\n          case 'corriente':\n            let tmpCellsCorriente = cellsCorriente.map(cell => {\n              if (cell._id === currentCell._id) {\n                cell.status = 'activo';\n              }\n              return cell;\n            })\n            setCellsCorriente(tmpCellsCorriente);\n            break;\n        }\n      }\n    });\n  }\n\n  const closeDatailImage = () => {\n    setOpenDetailImage(false)\n  }\n\n  const onChangeDescription = e => {\n    setObservations(e.target.value);\n  }\n\n  const updateObservation = () => {\n    console.log(observations);\n    setLoading(true);\n    let data = {\n      id: board._id,\n      observations\n    }\n    onUpdateObservationBoard(data).then(response => {\n      setLoading(false);\n      if (response.status == 'success') {\n        toast.success(response.message, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      } else {\n        toast.error(response.message, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    })\n  }\n\n  const classes = useStyles()\n\n  return (\n    <Fragment>\n      <ToastContainer />\n      <Card>\n        <CardHeader title=\"TABLEROS\" />\n        <Divider />\n        <CardContent className={classes.content}>\n          <Table>\n            <TableBody>\n              <TableRow>\n                <TableCell>\n                  <div className='board__item__wrapper'>\n                    {\n                      project ?\n                        project.boards.map((board, i) => {\n                          return (<div key={i} className='board_item'>\n                            <Chip\n                              size='small'\n                              color='primary'\n                              label={board.name}\n                              variant=\"outlined\"\n                              onClick={onSelectBoard(board)} />\n                          </div>)\n                        })\n                        : ''\n                    }\n                  </div>\n                </TableCell>\n              </TableRow>\n\n              <TableRow>\n                <TableCell>\n                  <div className='project__wrapper'>\n                    <div className='project__info'>\n                      {\n                        project ?\n                          <Fragment>\n                            <div className='project_name'>{project.name}</div>\n                            <div className='project_type'>{project.type === 'tri' ? 'Trifásico' : 'Monofásico'}</div>\n                            <div className='board_name'>{board ? board.name : ''}</div>\n                            <div className='board_observation'>{board ?\n                              <Fragment>\n                                <TextField\n                                  autoComplete='off'\n                                  multiline\n                                  margin=\"dense\"\n                                  label=\"Observaciones\"\n                                  value={observations}\n                                  onChange={onChangeDescription}\n                                  fullWidth\n                                />\n                                {\n                                  loading ?\n                                    <Fragment>\n                                      <CircularProgress />\n                                    </Fragment> :\n                                    <Button onClick={updateObservation} color=\"primary\">\n                                      Actualizar Observaciones\n                                    </Button>\n                                }\n                              </Fragment>\n                              : ''}</div>\n                          </Fragment>\n                          : ''\n                      }\n                    </div>\n                    <div className='project__board__wrapper'>\n                      <Fragment>\n                        {\n                          cellsBefore.length > 0 ?\n                            <Fragment>\n                              <div className='title_action'>IMAGENES ANTES DE MANTENIMIENTO</div>\n                              <div className='board__item__wrapper'>\n\n                                {\n                                  cellsBefore.map((itemBefore, i) => {\n                                    return (\n                                      <div className=\"card\" key={i}>\n                                        <div className='card_title'>{itemBefore.item.title}</div>\n                                        {\n                                          itemBefore.item.letterOne !== '' ?\n                                            <div className='card_colors'>\n                                              <div className='card_color_left' style={{ backgroundColor: `#FCF338` }}>{itemBefore.item.colorOne}</div>\n                                              <div className='card_color_right'></div>\n                                            </div>\n                                            : ''\n                                        }\n                                        <div className='card_header'>\n                                          {\n                                            itemBefore.status === 'inactivo'\n                                              ?\n                                              <div className='show__wrapper'>\n                                                <BiShowAlt className='icon' onClick={onOpenItemBoard(itemBefore)} />\n                                                <div className='show_text'>Esta marcación se encuentra oculta pulse en el icono para mostrar</div>\n                                              </div>\n                                              : ''\n                                          }\n                                        </div>\n                                        <div className='card_body'>\n                                          <div className=\"slide-container\">\n                                            {\n                                              itemBefore.photos.length > 0 ?\n                                                <Zoom>\n                                                  {\n                                                    itemBefore.photos.map((photo, index) =>\n                                                      <img key={index} style={{ width: \"100%\" }} src={`${config.urlImages}${photo.url}`} onClick={showImages(`${config.urlImages}${photo.url}`)} />\n                                                    )\n                                                  }\n                                                </Zoom> : ''\n                                            }\n                                          </div>\n                                        </div>\n                                      </div>\n                                    )\n                                  })\n                                }\n\n                              </div>\n                            </Fragment> : ''\n                        }\n                        {\n                          cellsVoltaje.length > 0 ?\n                            <Fragment>\n                              <div className='title_action'>VOLTAJES</div>\n                              <div className='board__item__wrapper'>\n\n                                {\n                                  cellsVoltaje.map((itemVoltaje, i) => {\n                                    return (\n                                      <div className=\"card\" key={i}>\n                                        <div className='card_title'>{itemVoltaje.item.title}</div>\n                                        {\n                                          itemVoltaje.item.letterOne !== '' ?\n                                            <div className='card_colors'>\n                                              <div\n                                                className='card_color_left'\n                                                style={{\n                                                  backgroundColor: `#${itemVoltaje.item.colorOne}`,\n                                                  color: `#${itemVoltaje.item.textColorOne}`\n                                                }}\n                                              >\n                                                {itemVoltaje.item.letterOne}\n                                              </div>\n                                              <div\n                                                className='card_color_right'\n                                                style={{\n                                                  backgroundColor: `#${itemVoltaje.item.colorTwo}`,\n                                                  color: `#${itemVoltaje.item.textColorTwo}`\n                                                }}\n                                              >\n                                                {itemVoltaje.item.letterTwo}\n                                              </div>\n                                            </div>\n                                            : ''\n                                        }\n                                        <div className='card_header'>\n                                          {\n                                            itemVoltaje.status === 'inactivo'\n                                              ?\n                                              <div className='show__wrapper'>\n                                                <BiShowAlt className='icon' onClick={onOpenItemBoard(itemVoltaje)} />\n                                                <div className='show_text'>Esta marcación se encuentra oculta pulse en el icono para mostrar</div>\n                                              </div>\n                                              : ''\n                                          }\n                                        </div>\n                                        <div className='card_body'>\n                                          <div className=\"slide-container\">\n                                            {\n                                              itemVoltaje.photos.length > 0 ?\n                                                <Zoom>\n                                                  {\n                                                    itemVoltaje.photos.map((photo, index) =>\n                                                      <img key={index} style={{ width: \"100%\" }} src={`${config.urlImages}${photo.url}`} onClick={showImages(`${config.urlImages}${photo.url}`)} />\n                                                    )\n                                                  }\n                                                </Zoom>\n                                                : ''\n                                            }\n                                          </div>\n                                        </div>\n                                        {\n                                          <div className='card_footer'>\n                                            <span className='text_value'>Valor:</span>\n                                            {itemVoltaje.item.value}\n                                          </div>\n                                        }\n                                      </div>\n                                    )\n                                  })\n                                }\n\n                              </div>\n                            </Fragment> : ''\n                        }\n                      </Fragment>\n                    </div>\n\n                  </div>\n\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table >\n        </CardContent >\n        <Dialog\n          fullWidth maxWidth=\"sm\"\n          open={openDetailImage}\n          onClose={closeDatailImage}\n          TransitionComponent={Transition}>\n          <DialogContent>\n            <ImageDetail url={url} />\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={closeDatailImage} color=\"primary\">\n              Cerrar\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n      </Card >\n    </Fragment>\n  )\n}\n\nexport default AttentionDetail","import React, { Fragment, useState, useEffect } from 'react';\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport clsx from 'clsx';\nimport { Button } from '@material-ui/core';\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { updateUser, listCustomers, createProject } from '../../api/api';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n    minWidth: 290\n  },\n  input: {\n    display: \"flex\",\n    padding: 0,\n    height: \"auto\"\n  },\n  valueContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flex: 1,\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: theme.spacing(1, 2)\n  },\n  singleValue: {\n    fontSize: 16\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 2,\n    bottom: 6,\n    fontSize: 16\n  },\n\n  divider: {\n    height: theme.spacing(2)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n\n  },\n  button:\n  {\n    margin: theme.spacing(1),\n  },\n  fab:\n  {\n    marginTop: -2,\n    float: \"right\"\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}))\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />\n}\n\ninputComponent.propTypes = {\n  inputRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({\n      current: PropTypes.any.isRequired\n    })\n  ])\n}\nconst ProjectForm = props => {\n\n  useEffect(() => {\n    console.log(props)\n\n    listCustomers().then(response => {\n      setCustomers(response.customers);\n    });\n    if (props.person) {\n\n      // setName(props.person.name);\n      // setDocumentNumber(props.person.document_number);\n      // setUsername(props.person.username);\n      // setRole(props.person.role);\n    }\n  }, [])\n\n  const [type, setType] = useState('')\n  const [disabled, setDisabled] = useState(false)\n\n  const [file, setFile] = useState({})\n  const classes = useStyles()\n\n  const [customers, setCustomers] = useState([]);\n  const [customer, setCustomer] = useState();\n  const [description, setDescription] = useState('');\n  const [documentNumber, setDocumentNumber] = useState('');\n  const [username, setUsername] = useState('');\n  const [repeatPassword, setRepeatPassword] = useState('');\n  const [role, setRole] = useState(null);\n\n  const [errorDescription, setErrorDescription] = useState(false)\n  const [errorTextDescription, setErrorTextDescription] = useState('')\n\n  const [errorDocument, setErrorDocument] = useState(false)\n  const [errorTextDocument, setErrorTextDocument] = useState('')\n\n  const onChangeDescription = e => {\n    setDescription(e.target.value);\n    validateDescription(e.target.value);\n  }\n\n  const validateForm = () => {\n    let errors = 0\n    errors += validateDescription()\n    // errors += validatePrice()\n    // errors += validateQuantity()\n    return errors\n  }\n\n  const validateDescription = (value) => {\n    let text = value !== undefined ? value : description\n\n    if (text == null || text.toString().trim() === '') {\n      setErrorDescription(true)\n      setErrorTextDescription('Este campo es requerido')\n      return 1\n    }\n    else {\n      setErrorDescription(false)\n      setErrorTextDescription('')\n      return 0\n    }\n  }\n\n  const validateDocument = (value) => {\n    let text = value !== undefined ? value : documentNumber\n\n    if (text == null || text.toString().trim() === '') {\n      setErrorDocument(true)\n      setErrorTextDocument('Este campo es requerido')\n      return 1\n    }\n    else {\n      setErrorDocument(false)\n      setErrorTextDocument('')\n      return 0\n    }\n  }\n\n  const onChangeType = e => {\n    setType(e.target.value)\n  }\n\n  const onSubmitPerson = _ => {\n\n    let errores = validateForm()\n    // errores += validateType();\n\n\n    if (errores === 0) {\n\n      let data = {\n        'name': description,\n        'type': type,\n        'customer': customer._id,\n      }\n\n      console.log(data)\n\n      if (!props.person) {\n        createProject(data).then(response => {\n          console.log('response', response);\n          if (response.status == 'success') {\n            toast.info('Proyecto registrado exitosamente', {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          } else {\n            toast.error('Ocurrió un error al registrar el proyecto', {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          }\n\n        });\n\n      } else {\n\n        updateUser(data).then(response => {\n          console.log('response', response);\n          if (response.status == 'success') {\n            toast.info('Proyecto registrado exitosamente', {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          } else {\n            toast.error('Ocurrió un error al registrar el proyecto', {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          }\n\n        });\n      }\n    } else {\n      toast.error('🦄 Wow so easy!', {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  }\n\n\n  return (\n    <Fragment>\n      <ToastContainer />\n      <Container maxWidth=\"md\">\n\n        <Paper className={classes.paper}>\n          <form encType={'multipart/form-data'}\n            onSubmit={e => {\n              e.preventDefault()\n              onSubmitPerson()\n            }} >\n            <Grid container spacing={3}>\n\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  select\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Tipo\"\n                  margin=\"dense\"\n                  value={type}\n                  onChange={onChangeType}\n                >\n                  <MenuItem key={\"tri\"} value={\"tri\"}>Trifásico</MenuItem>\n                  <MenuItem key={\"mono\"} value={\"mono\"}>Monofásico</MenuItem>\n                </TextField>\n              </Grid>\n\n              <Grid item xs={12} sm={8}>\n                <Autocomplete\n                  fullWidth\n                  size=\"small\"\n                  getOptionLabel={\n                    (option) => {\n                      return `${option.name.toString().toUpperCase()} `\n                    }\n                  }\n                  filterOptions={(x) => x}\n                  options={customers}\n                  autoComplete\n                  getOptionSelected={(option, value) => option === value}\n                  onChange={(_, value) => {\n                    setCustomer(value);\n                  }}\n                  onInputChange={(_, newInputValue) => {\n                    console.log('newInputValue', newInputValue)\n                    if (newInputValue.toString().trim().length > 0) {\n                      let data = {\n                        search: newInputValue.toString().trim()\n                      }\n                      listCustomers(data).then(response => {\n                        setCustomers(response.customers);\n                      })\n                    }\n                  }}\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"Cliente\" variant=\"outlined\" margin=\"dense\" />\n                  )}\n                  renderTags={(tagValue, getTagProps) =>\n                    tagValue.map((option, index) => (\n                      <Chip\n                        label={option.name}\n                        {...getTagProps({ index })}\n                        disabled={customers.indexOf(option) !== -1}\n                      />\n                    ))\n                  }\n                  renderOption={(option) => {\n\n                    return (\n                      <Grid container alignItems=\"center\">\n                        <Grid item xs>\n                          <Typography >{`${option.name.toString().toUpperCase()}`}</Typography>\n                        </Grid>\n                      </Grid>\n                    );\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12} sm={12}>\n                <TextField\n                  fullWidth\n                  error={errorDescription}\n                  helperText={errorTextDescription}\n                  margin=\"dense\"\n                  autoComplete='off'\n                  id=\"outlined-simple-start-adornment\"\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Descripción\"\n                  value={description}\n                  onChange={onChangeDescription} />\n              </Grid>\n\n\n\n\n              <Grid item xs={2} sm={3}>\n                <Button disabled={disabled} type=\"submit\" variant=\"contained\" color='primary'>\n                  {props.person ? \"Actualizar\" : \"Guardar\"}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n\n      </Container>\n    </Fragment>\n  )\n}\n\nexport default ProjectForm","import React, { useState, useEffect, Fragment } from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\n\n\nimport BoardDetail from './BoardDetail';\nimport ProjectForm from './ProjectForm';\nimport { Button } from '@material-ui/core';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Slide from '@material-ui/core/Slide';\n\nimport Tooltip from '@material-ui/core/Tooltip'\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { listProjects, deleteProject, onSaveObservations, onSendReportProject } from '../../api/api';\nimport Chip from '@material-ui/core/Chip';\nimport AddIcon from '@material-ui/icons/Add';\nimport { AiOutlineComment } from 'react-icons/ai';\nimport { FiSend, FiSearch } from 'react-icons/fi';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nimport Fab from '@material-ui/core/Fab';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './projects.css';\nimport Swal from 'sweetalert2'\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    iconWidth: {\n        width: 10\n    },\n    paper: {\n        padding: theme.spacing(2),\n        marginTop: 10,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    input: {\n        display: 'none',\n    },\n    fab: {\n        margin: theme.spacing(1),\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n        color: 'black'\n    },\n}))\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    }\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n})\n\nconst Projects = _ => {\n\n    useEffect(() => {\n        listProjects().then(response => {\n            setProjects(response.projects);\n            setTotalProjects(response.count);\n        });\n    }, []);\n\n    const classes = useStyles()\n\n    const [projects, setProjects] = useState([])\n    const [project, setProject] = useState(null)\n    const [totalProjects, setTotalProjects] = useState(0)\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n\n\n    const [open, setOpen] = useState(false);\n    const [openDetailBoards, setOpenDetailBoards] = useState(false);\n    const [openProjectForm, setOpenProjectForm] = useState(false);\n\n    const [openObservations, setOpenObservations] = useState(false);\n    const [observations, setObservations] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [loadingReport, setLoadingReport] = useState(false);\n\n    const handleChangePage = (_, newPage) => {\n        setPage(newPage);\n        // getPersons({ variables: { start: newPage, end: rowsPerPage } })\n    }\n\n    const handleChangeRowsPerPage = event => {\n\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n        // getPersons({ variables: { start: 0, end: event.target.value } })\n    }\n\n    const onCloseDeleteProject = () => {\n        setOpen(false);\n    }\n\n    const onDeleteProject = id => {\n        setOpen(false);\n\n        deleteProject(id).then(response => {\n            if (response.status === 'success') {\n                toast.success(response.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n                const newProjects = projects.map((currentProject) => {\n                    if (id !== currentProject._id)\n                        return currentProject\n\n                    currentProject.status = \"deleted\";\n                    return currentProject\n                })\n                setProjects(newProjects)\n            } else {\n                toast.error(response.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n        }).catch(e => {\n\n            toast.error('Ocurrió un error al eliminar el proyecto', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        })\n\n    }\n\n    const onDetailBoard = project => () => {\n        setProject(project)\n        setOpenDetailBoards(true)\n    }\n    const onOpenObservation = project => () => {\n        setOpenObservations(true);\n        setProject(project);\n    }\n\n    const closeDatailBoards = () => {\n        setOpenDetailBoards(false)\n    }\n\n    const onOpenProjectForm = () => {\n        setOpenProjectForm(true)\n    }\n\n    const onCloseProjectForm = () => {\n        setOpenProjectForm(false)\n    }\n\n    const onCloseObservations = () => {\n        setOpenObservations(false);\n    }\n\n    const saveObservations = () => {\n        console.log(observations);\n        console.log(project);\n        setLoading(true);\n        let data = {\n            observations,\n            id: project._id\n        }\n        onSaveObservations(data).then(response => {\n            setLoading(false);\n            setOpenObservations(false);\n\n            if (response.status === 'success') {\n                Swal.fire({\n                    icon: 'success',\n                    title: 'Mensaje',\n                    text: response.message,\n                    showConfirmButton: false,\n                    timer: 3000\n                })\n            } else {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Error',\n                    text: response.message,\n                    showConfirmButton: false,\n                    timer: 3000\n                })\n            }\n\n        }).catch(e => {\n            console.log(e);\n            setLoading(false);\n\n        })\n\n    }\n\n    const sendReportProject = id => () => {\n        console.log(id);\n\n        const newProjects = projects.map(currentProject => {\n            if (currentProject._id === id) {\n                currentProject.loading = true;\n            } else {\n                currentProject.loading = false;\n            }\n\n            return currentProject;\n        });\n\n        setProjects(newProjects);\n\n        onSendReportProject(id).then(response => {\n            const newProjects = projects.map(currentProject => {\n                currentProject.loading = false;\n                return currentProject;\n            });\n            setProjects(newProjects);\n\n            if (response.status === 'success') {\n                Swal.fire({\n                    icon: 'success',\n                    title: 'Mensaje',\n                    text: response.message,\n                    showConfirmButton: false,\n                    timer: 3000\n                })\n            } else {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Error',\n                    text: response.message,\n                    showConfirmButton: false,\n                    timer: 3000\n                })\n            }\n\n        }).catch(e => {\n            console.log(e);\n            setLoading(false);\n\n        })\n\n    }\n\n    const onChangeDescription = e => {\n        setObservations(e.target.value);\n\n    }\n\n\n\n    return (\n        <Fragment>\n            <ToastContainer />\n            <Paper className={classes.paper}>\n                <Fab onClick={onOpenProjectForm} variant=\"extended\" color=\"primary\" size=\"small\" className={classes.margin}>\n                    <AddIcon className={classes.extendedIcon} />\n                    Nuevo proyecto\n                </Fab>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>DESCRIPCIÓN</TableCell>\n                            <TableCell>CLIENTE</TableCell>\n                            <TableCell>TABLEROS</TableCell>\n                            <TableCell>VER TABLEROS</TableCell>\n                            <TableCell>ENVIAR INFORME</TableCell>\n                            <TableCell>OBSERVACIONES</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            projects.map(project => {\n                                return (\n                                    <TableRow key={project._id}>\n                                        <TableCell>{project.name} </TableCell>\n                                        <TableCell>{project.customer.name}</TableCell>\n                                        <TableCell className={classes.iconWidth}>\n                                            <Chip size='small' label={project.boards.length} variant=\"outlined\" />\n                                        </TableCell>\n                                        <TableCell className={classes.iconWidth}>\n                                            <FiSearch className={'icon'} onClick={onDetailBoard(project)} />\n                                        </TableCell>\n                                        <TableCell className={classes.iconWidth}>\n                                            {\n                                                project.loading ?\n                                                    <div className='circularProgress'>\n                                                        <CircularProgress size={16} />\n                                                    </div> :\n                                                    <FiSend className={'icon'} onClick={sendReportProject(project._id)} />\n                                            }\n                                        </TableCell>\n                                        <TableCell className={classes.iconWidth}>\n                                            <AiOutlineComment className={'icon'} onClick={onOpenObservation(project)} />\n                                        </TableCell>\n\n                                    </TableRow>)\n                            })\n                        }\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={totalProjects}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n\n            <Dialog\n                open={open}\n                onClose={onCloseDeleteProject}\n                aria-labelledby=\"draggable-dialog-title\">\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n                    Alerta\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Esta seguro de eliminar esta atención?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={onCloseDeleteProject} color=\"primary\">\n                        NO\n                    </Button>\n                    <Button onClick={onDeleteProject} color=\"primary\">\n                        SI\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog maxWidth=\"md\" open={openProjectForm} onClose={onCloseProjectForm} TransitionComponent={Transition}>\n                <DialogContent>\n                    <ProjectForm onClose={onCloseProjectForm} project={project} />\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={onCloseProjectForm} color=\"primary\">\n                        Cerrar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                fullWidth maxWidth=\"lg\"\n                open={openDetailBoards}\n                onClose={closeDatailBoards}\n                TransitionComponent={Transition}>\n                <DialogContent>\n                    <BoardDetail project={project} />\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={closeDatailBoards} color=\"primary\">\n                        Cerrar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n\n\n            <Dialog\n                fullWidth={true}\n                maxWidth={'sm'}\n                open={openObservations}\n                onClose={onCloseObservations}>\n                <DialogTitle>\n                    Observaciones\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <TextField\n                            autoComplete='off'\n                            multiline\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Observaciones\"\n                            onChange={onChangeDescription}\n                            fullWidth\n                        />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n\n                    {\n                        loading ?\n                            <div className='circularProgress'>\n                                <CircularProgress />\n                            </div> :\n\n                            <Fragment>\n                                <Button autoFocus onClick={onCloseObservations} color=\"primary\">\n                                    Cancelar\n                                </Button>\n                                <Button onClick={saveObservations} color=\"primary\">\n                                    Guardar\n                                </Button>\n                            </Fragment>\n                    }\n                </DialogActions>\n            </Dialog>\n\n        </Fragment>)\n}\n\nexport default Projects"],"sourceRoot":""}