{"version":3,"sources":["../node_modules/@material-ui/icons/Restore.js","views/Customer/CustomerDetail.js","views/Customer/CustomerForm.js","views/Customer/Customers.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","makeStyles","theme","root","flexGrow","height","minWidth","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","chip","margin","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","divider","paper","color","text","secondary","button","fab","marginTop","float","extendedIcon","marginRight","formControl","CustomerDetail","props","console","log","classes","useState","Card","CardHeader","title","Divider","CardContent","className","content","Table","TableBody","TableRow","TableCell","customer","name","selected","nit","address","phone","email","CustomerForm","useEffect","setName","setNit","setAddress","setPhone","setEmail","disabled","username","setUsername","password","setPassword","setErrorUsername","setErrorTextUsername","setErrorPassword","setErrorTextPassword","errorName","setErrorName","errorTextName","setErrorTextName","errorNit","setErrorNit","errorTextNit","setErrorTextNit","errorEmail","setErrorEmail","errorTextEmail","setErrorTextEmail","validateName","undefined","toString","trim","validateNit","validateEmail","validateUsername","validatePassword","onSubmitCustomer","_","errors","validateForm","data","id","_id","updateCustomer","then","response","status","toast","info","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","onCloseModal","onUpdateCustomers","error","createCustomer","message","Container","maxWidth","Paper","encType","onSubmit","e","preventDefault","Grid","container","item","xs","sm","TextField","fullWidth","helperText","autoComplete","clsx","textField","variant","label","onChange","target","Button","iconWidth","width","icon","DialogTitle","withStyles","closeButton","right","top","children","onClose","other","disableTypography","Typography","IconButton","aria-label","onClick","Transition","React","forwardRef","ref","Slide","direction","Customers","start","end","rowsPerPage","paginate","listCustomers","setCustomers","customers","setTotalCustomers","count","totalCustomers","page","setPage","setRowsPerPage","open","setOpen","openRestoreCustomer","setOpenRestoreCustomer","openDetailCustomer","setOpenDetailCustomer","openEditCustomer","setOpenEditCustomer","openCreateCustomer","setOpenCreateCustomer","setCustomerSelected","onOpenRestoreCustomer","onCloseDeleteCustomer","onDetailCustomer","closeDetailCustomer","onEditCustomer","onCloseEditCustomer","onCloseRestoreCustomer","onCloseCreateCustomer","Fab","size","TableHead","map","key","Tooltip","placement","TablePagination","rowsPerPageOptions","component","onChangePage","event","newPage","onChangeRowsPerPage","Dialog","aria-labelledby","style","cursor","DialogContent","DialogContentText","DialogActions","autoFocus","deleteCustomer","success","newCustomers","currentCustomer","catch","restoreCustomer","estado","TransitionComponent","handleClose","modal"],"mappings":"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","file":"static/js/14.4ce82476.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z\"\n}), 'Restore');\n\nexports.default = _default;","import React, { useState } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250,\r\n    minWidth: 290\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n\r\n  },\r\n  button:\r\n  {\r\n    margin: theme.spacing(1),\r\n  },\r\n  fab:\r\n  {\r\n    marginTop: -2,\r\n    float: \"right\"\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst CustomerDetail = props => {\r\n\r\n  console.log('props', props)\r\n\r\n  const classes = useStyles()\r\n\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n\r\n  const handleEditOpen = () => {\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleEditClose = () => {\r\n    setOpenEdit(false);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Detalle Usuario\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Nombres</TableCell>\r\n              <TableCell>{props.customer.name}</TableCell>\r\n            </TableRow>\r\n            <TableRow selected>\r\n              <TableCell>Nit</TableCell>\r\n              <TableCell>{props.customer.nit}</TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow>\r\n              <TableCell>Dirección</TableCell>\r\n              <TableCell>{props.customer.address}</TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow selected>\r\n              <TableCell>Telefono</TableCell>\r\n              <TableCell>{props.customer.phone}</TableCell>\r\n            </TableRow>\r\n\r\n\r\n            <TableRow>\r\n              <TableCell>Correo electrónico</TableCell>\r\n              <TableCell>{props.customer.email}</TableCell>\r\n            </TableRow>\r\n\r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CustomerDetail","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport clsx from 'clsx'\r\n\r\nimport { Button } from '@material-ui/core'\r\nimport { DropzoneArea } from 'material-ui-dropzone'\r\n\r\nimport PropTypes from \"prop-types\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport { createCustomer, updateCustomer } from '../../api/api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250,\r\n    minWidth: 290\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n\r\n  },\r\n  button:\r\n  {\r\n    margin: theme.spacing(1),\r\n  },\r\n  fab:\r\n  {\r\n    marginTop: -2,\r\n    float: \"right\"\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.shape({\r\n      current: PropTypes.any.isRequired\r\n    })\r\n  ])\r\n}\r\nconst CustomerForm = props => {\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(props)\r\n\r\n    if (props.customer) {\r\n      setName(props.customer.name);\r\n      setNit(props.customer.nit);\r\n      setAddress(props.customer.address);\r\n      setPhone(props.customer.phone);\r\n      setEmail(props.customer.email);\r\n    }\r\n  }, [])\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const classes = useStyles()\r\n\r\n\r\n  const [name, setName] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [nit, setNit] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  const [errorUsername, setErrorUsername] = useState(false)\r\n  const [errorTextUsername, setErrorTextUsername] = useState('')\r\n\r\n  const [errorPassword, setErrorPassword] = useState(false)\r\n  const [errorTextPassword, setErrorTextPassword] = useState('')\r\n\r\n  const [errorName, setErrorName] = useState(false)\r\n  const [errorTextName, setErrorTextName] = useState('')\r\n\r\n  const [errorNit, setErrorNit] = useState(false)\r\n  const [errorTextNit, setErrorTextNit] = useState('')\r\n\r\n  const [errorAddress, setErrorAddress] = useState(false)\r\n  const [errorTextAddress, setErrorTextAddress] = useState('')\r\n\r\n  const [errorPhone, setErrorPhone] = useState(false)\r\n  const [errorTextPhone, setErrorTextPhone] = useState('')\r\n\r\n  const [errorEmail, setErrorEmail] = useState(false)\r\n  const [errorTextEmail, setErrorTextEmail] = useState('')\r\n\r\n  const onChangeName = e => {\r\n    setName(e.target.value);\r\n    validateName(e.target.value);\r\n  }\r\n  const onChangeNit = e => {\r\n    setNit(e.target.value);\r\n    validateNit(e.target.value);\r\n  }\r\n  const onChangeAddress = e => {\r\n    setAddress(e.target.value)\r\n  }\r\n  const onChangePhone = e => {\r\n    setPhone(e.target.value)\r\n  }\r\n  const onChangeEmail = e => {\r\n    setEmail(e.target.value)\r\n  }\r\n  const onChangeUsername = e => {\r\n    setUsername(e.target.value);\r\n    validateUsername(e.target.value);\r\n  }\r\n  const onChangePassword = e => {\r\n    setPassword(e.target.value);\r\n    validatePassword(e.target.value);\r\n  }\r\n  const validateForm = () => {\r\n    let errors = 0\r\n    errors += validateName()\r\n    errors += validateEmail()\r\n    errors += validateNit()\r\n    return errors\r\n  }\r\n\r\n  const validateName = (value) => {\r\n    let text = value !== undefined ? value : name\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorName(true)\r\n      setErrorTextName('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorName(false)\r\n      setErrorTextName('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validateNit = (value) => {\r\n    let text = value !== undefined ? value : nit\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorNit(true)\r\n      setErrorTextNit('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorNit(false)\r\n      setErrorTextNit('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validateEmail = (value) => {\r\n    let text = value !== undefined ? value : email\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorEmail(true)\r\n      setErrorTextEmail('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorEmail(false)\r\n      setErrorTextEmail('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validateUsername = (value) => {\r\n    let text = value !== undefined ? value : username\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorUsername(true)\r\n      setErrorTextUsername('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorUsername(false)\r\n      setErrorTextUsername('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validatePassword = (value) => {\r\n    let text = value !== undefined ? value : password\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorPassword(true)\r\n      setErrorTextPassword('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorPassword(false)\r\n      setErrorTextPassword('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const onSubmitCustomer = _ => {\r\n\r\n    let errores = validateForm()\r\n\r\n    if (errores === 0) {\r\n\r\n      let data = {\r\n        name,\r\n        nit,\r\n        address,\r\n        phone,\r\n        email,\r\n        username,\r\n        password,\r\n      }\r\n\r\n      if (!props.customer) {\r\n        createCustomer(data).then(response => {\r\n          console.log('response', response);\r\n          if (response.status == 'success') {\r\n            toast.info('Cliente registrado exitosamente', {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n            props.onCloseModal(true);\r\n            props.onUpdateCustomers();\r\n          } else {\r\n            toast.error(response.message, {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n          }\r\n\r\n        });\r\n\r\n      } else {\r\n        data.id = props.customer._id;\r\n        updateCustomer(data).then(response => {\r\n          console.log('response', response);\r\n          if (response.status == 'success') {\r\n            toast.info('Cliente actualizado exitosamente', {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n            props.onCloseModal(true);\r\n            props.onUpdateCustomers();\r\n          } else {\r\n            toast.error('Ocurrió un error al registrar el cliente', {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n          }\r\n\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <ToastContainer />\r\n      <Container maxWidth=\"md\">\r\n\r\n        <Paper className={classes.paper}>\r\n          <form encType={'multipart/form-data'}\r\n            onSubmit={e => {\r\n              e.preventDefault()\r\n              onSubmitCustomer()\r\n            }} >\r\n            <Grid container spacing={3}>\r\n\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  error={errorName}\r\n                  helperText={errorTextName}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Nombre\"\r\n                  value={name}\r\n                  onChange={onChangeName} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  error={errorNit}\r\n                  helperText={errorTextNit}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  value={nit}\r\n                  onChange={onChangeNit}\r\n                  label=\"Nit\" />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Direccion\"\r\n                  value={address}\r\n                  onChange={onChangeAddress} />\r\n              </Grid>\r\n\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Telefono\"\r\n                  value={phone}\r\n                  onChange={onChangePhone} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  error={errorEmail}\r\n                  helperText={errorTextEmail}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  value={email}\r\n                  label=\"Correo\"\r\n                  onChange={onChangeEmail} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Nombre de usuario\"\r\n                  value={username}\r\n                  onChange={onChangeUsername} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Contraseña\"\r\n                  value={password}\r\n                  onChange={onChangePassword} />\r\n              </Grid>\r\n\r\n\r\n\r\n\r\n\r\n              <Grid item xs={2} sm={12}>\r\n                <Button disabled={disabled} type=\"submit\" variant=\"contained\" color='primary'>\r\n                  {props.customer ? \"Actualizar\" : \"Guardar\"}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CustomerForm","import React, { useState, useEffect, Fragment } from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport CustomerDetail from './CustomerDetail'\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport CustomerForm from \"../Customer/CustomerForm\";\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { deleteCustomer, restoreCustomer, listCustomers } from '../../api/api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    iconWidth: {\r\n        width: 10\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    fab: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(1),\r\n        color: 'black'\r\n    },\r\n}))\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n})\r\n\r\n\r\n\r\nconst Customers = _ => {\r\n\r\n    useEffect(() => {\r\n        let data = { start: 0, end: rowsPerPage, paginate: true }\r\n        listCustomers(data).then(response => {\r\n            setCustomers(response.customers);\r\n            setTotalCustomers(response.count);\r\n        });\r\n    }, []);\r\n\r\n    const classes = useStyles()\r\n\r\n    const [customers, setCustomers] = useState([])\r\n    const [totalCustomers, setTotalCustomers] = useState(0)\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [openRestoreCustomer, setOpenRestoreCustomer] = useState(false);\r\n    const [openDetailCustomer, setOpenDetailCustomer] = useState(false);\r\n    const [openEditCustomer, setOpenEditCustomer] = useState(false);\r\n    const [openCreateCustomer, setOpenCreateCustomer] = useState(false);\r\n    const [customer, setCustomerSelected] = useState({})\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n        let data = { start: (newPage * rowsPerPage), end: rowsPerPage, paginate: true }\r\n        listCustomers(data).then(response => {\r\n            setCustomers(response.customers);\r\n            setTotalCustomers(response.count);\r\n        });\r\n    }\r\n    const handleChangeRowsPerPage = event => {\r\n\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n        let data = { start: 0, end: event.target.value, paginate: true }\r\n        listCustomers(data).then(response => {\r\n            setCustomers(response.customers);\r\n            setTotalCustomers(response.count);\r\n        });\r\n\r\n    }\r\n\r\n    const onUpdateCustomers = () => {\r\n        listCustomers().then(response => {\r\n            console.log(response);\r\n            setCustomers(response.customers);\r\n            setTotalCustomers(response.count);\r\n        });\r\n    }\r\n\r\n    const onOpenDeleteCustomer = id => () => {\r\n        setCustomerSelected(id)\r\n        setOpen(true);\r\n    }\r\n\r\n    const onOpenRestoreCustomer = id => () => {\r\n        setCustomerSelected(id)\r\n        setOpenRestoreCustomer(true);\r\n    }\r\n\r\n    const onCloseDeleteCustomer = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const onDeleteCustomer = () => {\r\n        setOpen(false);\r\n\r\n        deleteCustomer(customer).then(response => {\r\n            if (response.status === 'success') {\r\n                toast.success(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                const newCustomers = customers.map((currentCustomer) => {\r\n                    if (customer !== currentCustomer._id)\r\n                        return currentCustomer\r\n\r\n                    currentCustomer.status = \"inactivo\";\r\n                    return currentCustomer\r\n                })\r\n                setCustomers(newCustomers)\r\n            } else {\r\n                toast.error(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }).catch(e => {\r\n\r\n            toast.error('Ocurrió un error al desactivar el cliente', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        })\r\n\r\n    }\r\n\r\n    const onRestoreCustomer = () => {\r\n\r\n        setOpenRestoreCustomer(false)\r\n\r\n        restoreCustomer(customer).then(response => {\r\n            if (response.status === 'success') {\r\n                toast.success(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                const newCustomers = customers.map((currentCustomer) => {\r\n                    if (customer !== currentCustomer._id)\r\n                        return currentCustomer\r\n\r\n                    currentCustomer.estado = \"activo\";\r\n                    return currentCustomer\r\n                })\r\n                setCustomers(newCustomers)\r\n            } else {\r\n                toast.error(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }).catch(e => {\r\n            toast.error('Ocurrió un error al activar el cliente', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        })\r\n    }\r\n\r\n    const onDetailCustomer = customer => () => {\r\n        setCustomerSelected(customer)\r\n        setOpenDetailCustomer(true)\r\n    }\r\n\r\n    const closeDetailCustomer = () => {\r\n        setOpenDetailCustomer(false)\r\n    }\r\n\r\n    const onEditCustomer = customer => () => {\r\n        setCustomerSelected(customer)\r\n        setOpenEditCustomer(true)\r\n    };\r\n    const onCloseEditCustomer = () => {\r\n        setOpenEditCustomer(false)\r\n    };\r\n    const onCloseRestoreCustomer = () => {\r\n        setOpenRestoreCustomer(false)\r\n    };\r\n\r\n    const onCreateCustomer = () => {\r\n        setOpenCreateCustomer(true)\r\n    }\r\n    const onCloseCreateCustomer = () => {\r\n        setOpenCreateCustomer(false)\r\n    }\r\n    const onCloseModal = () => {\r\n        setOpenCreateCustomer(false);\r\n        setOpenEditCustomer(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <Paper className={classes.paper}>\r\n                <Fab onClick={onCreateCustomer} variant=\"extended\" color=\"primary\" size=\"small\" className={classes.margin}>\r\n                    <AddIcon className={classes.extendedIcon} />\r\n                    Nuevo cliente\r\n                </Fab>\r\n\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>NOMBRE</TableCell>\r\n                            <TableCell>NIT</TableCell>\r\n                            <TableCell>DIRECCION</TableCell>\r\n                            <TableCell>TELEFONO</TableCell>\r\n                            <TableCell>CORREO</TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            customers.map(item => {\r\n\r\n                                return (\r\n                                    <TableRow key={item._id}>\r\n                                        <TableCell>{item.name} </TableCell>\r\n                                        <TableCell>{item.nit}</TableCell>\r\n                                        <TableCell>{item.address}</TableCell>\r\n                                        <TableCell>{item.phone}</TableCell>\r\n                                        <TableCell>{item.email}</TableCell>\r\n\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            <Tooltip title=\"Detalle\" placement=\"top\">\r\n                                                <SearchIcon className={classes.icon} onClick={onDetailCustomer(item)} />\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            <Tooltip title=\"Editar\" placement=\"top\">\r\n                                                <EditIcon className={classes.icon} onClick={onEditCustomer(item)} />\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            <Tooltip title={'Eliminar'} placement=\"top\">\r\n                                                {\r\n                                                    item.status === 'activo' ?\r\n                                                        <DeleteIcon className={classes.icon} onClick={onOpenDeleteCustomer(item._id)} />\r\n                                                        :\r\n                                                        <RestoreIcon className={classes.icon} onClick={onOpenRestoreCustomer(item._id)} />\r\n                                                }\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                    </TableRow>)\r\n                            }\r\n                            )}\r\n                    </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={totalCustomers}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={onCloseDeleteCustomer}\r\n                aria-labelledby=\"draggable-dialog-title\">\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                    Alerta\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Esta seguro de desabilitar este cliente?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseDeleteCustomer} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Button onClick={onDeleteCustomer} color=\"primary\">\r\n                        SI\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={openRestoreCustomer}\r\n                onClose={onCloseRestoreCustomer}\r\n                aria-labelledby=\"draggable-dialog-title\">\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                    Alerta\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Esta seguro de habilitar este cliente?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseRestoreCustomer} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Button onClick={onRestoreCustomer} color=\"primary\">\r\n                        SI\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={openDetailCustomer} onClose={closeDetailCustomer} TransitionComponent={Transition}>\r\n                <DialogContent>\r\n                    <CustomerDetail customer={customer} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={closeDetailCustomer} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog maxWidth=\"md\" open={openEditCustomer} onClose={onCloseEditCustomer} TransitionComponent={Transition}>\r\n                <DialogContent>\r\n                    <CustomerForm onCloseModal={onCloseModal} onUpdateCustomers={onUpdateCustomers} customer={customer} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseEditCustomer} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n                open={openCreateCustomer}>\r\n                <DialogTitle onClose={onCloseCreateCustomer} >Crear cliente</DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <CustomerForm handleClose={onCloseCreateCustomer} onCloseModal={onCloseModal} onUpdateCustomers={onUpdateCustomers} modal={true} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCreateCustomer} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Fragment>)\r\n}\r\n\r\nexport default Customers"],"sourceRoot":""}