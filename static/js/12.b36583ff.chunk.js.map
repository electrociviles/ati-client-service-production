{"version":3,"sources":["views/Roles/RoleForm.js","views/Roles/Roles.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/Restore.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","height","minWidth","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","margin","marginTop","chip","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","divider","paper","color","text","secondary","button","fab","float","extendedIcon","marginRight","formControl","RoleForm","props","useState","disabled","setDisabled","setRole","classes","React","roleName","saved","values","setValues","useEffect","role","console","log","name","prop","initialState","Container","maxWidth","className","Paper","onSubmit","e","preventDefault","id","_id","updateRole","then","response","status","handleClose","passRoleEdit","Swal","fire","icon","title","showConfirmButton","timer","createRole","passRoleCreate","onSubmitRole","Grid","container","direction","item","xs","TextField","fullWidth","autoComplete","clsx","textField","variant","label","value","onChange","event","target","toString","trim","length","Button","iconWidth","width","Transition","forwardRef","ref","Slide","Role","roles","setRoles","totalRoles","setTotalRoles","rowsPerPage","setRowsPerPage","page","setPage","open","setOpen","openRestoreRole","setOpenRestoreRole","openEditRole","setOpenEditRole","openCreateRoleForm","setOpenCreateRoleForm","data","start","end","getRoles","count","onOpenDeleteRole","onOpenRestoreRole","onCloseDeleteRole","onEditRole","onCloseEditRole","onCloseRestoreRole","onCloseRoleForm","onClick","Table","TableHead","TableRow","TableCell","colSpan","TableBody","map","key","administrative","Tooltip","placement","TablePagination","rowsPerPageOptions","component","onChangePage","newPage","onChangeRowsPerPage","Dialog","onClose","aria-labelledby","DialogTitle","style","cursor","DialogContent","DialogContentText","DialogActions","autoFocus","deleteRole","newRoles","currentRole","restoreRole","currentRoles","index","TransitionComponent","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d"],"mappings":"uZAeMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,EACVC,OAAQ,IACRC,SAAU,KAEZC,MAAO,CACLC,QAAS,OACTC,QAAS,EACTJ,OAAQ,QAEVK,eAAgB,CACdF,QAAS,OACTG,SAAU,OACVC,KAAM,EACNC,WAAY,SACZC,SAAU,UAEZC,OAAQ,CACNC,UAAW,IAEbC,KAAM,CACJF,OAAQb,EAAMgB,QAAQ,GAAK,MAE7BC,YAAa,CACXC,gBAAiBC,YACQ,UAAvBnB,EAAMoB,QAAQC,KACVrB,EAAMoB,QAAQE,KAAK,KACnBtB,EAAMoB,QAAQE,KAAK,KACvB,MAGJC,iBAAkB,CAChBhB,QAASP,EAAMgB,QAAQ,EAAG,IAE5BQ,YAAa,CACXC,SAAU,IAEZC,YAAa,CACXC,SAAU,WACVC,KAAM,EACNC,OAAQ,EACRJ,SAAU,IAGZK,QAAS,CACP3B,OAAQH,EAAMgB,QAAQ,IAExBe,MAAO,CACLxB,QAASP,EAAMgB,QAAQ,GACvBgB,MAAOhC,EAAMoB,QAAQa,KAAKC,WAG5BC,OACA,CACEtB,OAAQb,EAAMgB,QAAQ,IAExBoB,IACA,CACEtB,WAAY,EACZuB,MAAO,SAETC,aAAc,CACZC,YAAavC,EAAMgB,QAAQ,IAE7BwB,YAAa,CACX3B,OAAQb,EAAMgB,QAAQ,QAsHXyB,EAjHE,SAAAC,GAAU,IAAD,EAEQC,oBAAS,GAFjB,mBAEjBC,EAFiB,KAEPC,EAFO,OAGAF,mBAAS,MAHT,mBAGXG,GAHW,WAIlBC,EAAUjD,IAJQ,EAKIkD,IAAML,SAAS,CACzCM,SAAU,GACVC,OAAO,IAPe,mBAKjBC,EALiB,KAKTC,EALS,KAUxBC,qBAAU,WACJX,EAAMY,OACRC,QAAQC,IAAI,QAASd,EAAMY,KAAKG,MAChCX,EAAQJ,EAAMY,MACdT,GAAY,GACZO,EAAU,2BAAKD,GAAN,IAAc,SAAYT,EAAMY,KAAKG,WAE/C,IAEH,IAMoBC,EANdC,EAAe,CACnBV,SAAU,GACVC,OAAO,GAwDT,OACE,kBAAC,WAAD,KAEE,kBAACU,EAAA,EAAD,CAAWC,SAAS,KAAKC,UAAWf,EAAQlC,QAE1C,kBAACkD,EAAA,EAAD,CAAOD,UAAWf,EAAQhB,OACxB,0BAAMiC,SAAU,SAAAC,GACdA,EAAEC,iBAnDS,SAAAD,GAEnB,IAAI5D,EAAQ,CACVoD,KAAMN,EAAOF,UAGVP,EAAMY,MAgBTjD,EAAM8D,GAAKzB,EAAMY,KAAKc,IACtBC,YAAWhE,GAAOiE,MAAK,SAAAC,GACG,YAApBA,EAASC,SACX9B,EAAM+B,cAENF,EAASjB,KAAKG,KAAON,EAAOF,SAC5BP,EAAMgC,aAAaH,EAASjB,MAE5BqB,IAAKC,KAAK,CACRC,KAAM,UACNC,MAAM,WAAD,OAAa3B,EAAOF,SAApB,kCACL8B,mBAAmB,EACnBC,MAAO,OAGT5B,EAAU,eAAKO,SA9BnBsB,YAAW5E,GAAOiE,MAAK,SAAAC,GACG,YAApBA,EAASC,SACX9B,EAAM+B,cACN/B,EAAMwC,eAAeX,EAASjB,MAC9BqB,IAAKC,KAAK,CACRC,KAAM,UACNC,MAAM,WAAD,OAAa3B,EAAOF,SAApB,gCACL8B,mBAAmB,EACnBC,MAAO,OAGT5B,EAAU,eAAKO,QAkCbwB,KAEA,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACrE,QAAS,EAAGsE,UAAU,UACpC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAWC,WAAS,EAClBC,aAAa,MACbxB,GAAG,kCACHL,UAAW8B,YAAK7C,EAAQlC,OAAQkC,EAAQ8C,WACxCC,QAAQ,WACRC,MAAM,iBACNC,MAAO7C,EAAOF,SACdgD,UAvEIvC,EAuEkB,WAvEV,SAAAwC,GAC1B9C,EAAU,2BAAKD,GAAN,kBAAeO,EAAOwC,EAAMC,OAAOH,SACxCE,EAAMC,OAAOH,MAAMI,WAAWC,OAAOC,OAAS,EAChDzD,GAAY,GAEZA,GAAY,QAuEJ,kBAACuC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAACe,EAAA,EAAD,CAAQ3D,SAAUA,EAAUvB,KAAK,SAASyE,QAAQ,YAAY9D,MAAM,WAAYU,EAAMY,KAAiB,aAAV,gB,mBCpKvGxD,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAU,GAEdsG,UAAW,CACPC,MAAO,IAEX1E,MAAO,CACHxB,QAASP,EAAMgB,QAAQ,GACvBF,UAAW,IAEfqB,OAAQ,CACJtB,OAAQb,EAAMgB,QAAQ,IAE1BX,MAAO,CACHC,QAAS,QAEb8B,IAAK,CACDvB,OAAQb,EAAMgB,QAAQ,IAE1BsB,aAAc,CACVC,YAAavC,EAAMgB,QAAQ,IAE/B6D,KAAM,CACFtC,YAAavC,EAAMgB,QAAQ,GAC3BgB,MAAO,aAIT0E,EAAa1D,IAAM2D,YAAW,SAAoBjE,EAAOkE,GAC3D,OAAO,kBAACC,EAAA,EAAD,eAAOvB,UAAU,KAAKsB,IAAKA,GAASlE,OAiQhCoE,UA5PF,WAET,IAAM/D,EAAUjD,IAFD,EAIW6C,mBAAS,IAJpB,mBAIRoE,EAJQ,KAIDC,EAJC,OAKqBrE,mBAAS,GAL9B,mBAKRsE,EALQ,KAKIC,EALJ,OAMuBvE,mBAAS,IANhC,mBAMRwE,EANQ,KAMKC,EANL,OAOSzE,mBAAS,GAPlB,mBAOR0E,EAPQ,KAOFC,EAPE,OASStE,IAAML,UAAS,GATxB,mBASR4E,EATQ,KASFC,EATE,OAU+BxE,IAAML,UAAS,GAV9C,mBAUR8E,EAVQ,KAUSC,EAVT,OAWyB1E,IAAML,UAAS,GAXxC,mBAWRgF,EAXQ,KAWMC,EAXN,QAYqC5E,IAAML,UAAS,GAZpD,qBAYRkF,GAZQ,MAYYC,GAZZ,SAaSnF,mBAAS,IAblB,qBAaRW,GAbQ,MAaFR,GAbE,MAgBfO,qBAAU,WACN,IAAI0E,EAAO,CAAEC,MAAO,EAAGC,IAAKd,GAC5Be,YAASH,GAAMzD,MAAK,SAAAC,GAChByC,EAASzC,EAASwC,OAClBG,EAAc3C,EAAS4D,YAE5B,IAEH,IAAMC,GAAmB,SAAA9E,GAAI,OAAI,WAC7BR,GAAQQ,GACRkE,GAAQ,KAENa,GAAoB,SAAA/E,GAAI,OAAI,WAC9BR,GAAQQ,GACRoE,GAAmB,KAEjBY,GAAoB,WACtBd,GAAQ,IAoCNe,GAAa,SAAAjF,GAAI,OAAI,WACvBR,GAAQQ,GACRsE,GAAgB,KAEdY,GAAkB,WACpBZ,GAAgB,IAEda,GAAqB,WACvBf,GAAmB,IAKjBgB,GAAkB,WACpBZ,IAAsB,IAyC1B,OACI,kBAAC,WAAD,KACI,kBAAC/D,EAAA,EAAD,CAAOD,UAAWf,EAAQhB,OACtB,kBAACwE,EAAA,EAAD,CAAQT,QAAQ,YAAY9D,MAAM,UAAU2G,QAhDnC,WACjBb,IAAsB,KA+Cd,aAEA,kBAACc,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,CAAWC,QAAS,GAApB,cAGR,kBAACC,EAAA,EAAD,KAEQlC,EAAMmC,KAAI,SAAA5F,GACN,OACI,kBAACwF,EAAA,EAAD,CAAUK,IAAK7F,EAAKc,KAChB,kBAAC2E,EAAA,EAAD,KAAYzF,EAAKG,KAAjB,KAEA,kBAACsF,EAAA,EAAD,CAAWjF,UAAWf,EAAQyD,WAErBlD,EAAK8F,eAIA,GAHF,kBAACC,EAAA,EAAD,CAASvE,MAAM,SAASwE,UAAU,OAC9B,kBAAC,IAAD,CAAUxF,UAAWf,EAAQ8B,KAAM8D,QAASJ,GAAWjF,OAKvE,kBAACyF,EAAA,EAAD,CAAWjF,UAAWf,EAAQyD,WAErBlD,EAAK8F,eASA,GARF,kBAACC,EAAA,EAAD,CAASvE,MAAM,WAAWwE,UAAU,OAEZ,WAAhBhG,EAAKkB,OACD,kBAAC,IAAD,CAAYV,UAAWf,EAAQ8B,KAAM8D,QAASP,GAAiB9E,KAE/D,kBAAC,IAAD,CAAaQ,UAAWf,EAAQ8B,KAAM8D,QAASN,GAAkB/E,aAYjH,kBAACiG,EAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,UAAU,MACVtB,MAAOlB,EACPE,YAAaA,EACbE,KAAMA,EACNqC,aA7ES,SAACxD,EAAOyD,GAC7BrC,EAAQqC,GACR,IAAI5B,EAAO,CAAEC,MAAO2B,EAAS1B,IAAKd,GAClCe,YAASH,GAAMzD,MAAK,SAAAC,GAChByC,EAASzC,EAASwC,OAClBG,EAAc3C,EAAS4D,WAyEfyB,oBArEgB,SAAA1D,GAE5BkB,GAAgBlB,EAAMC,OAAOH,OAC7BsB,EAAQ,GACR,IAAIS,EAAO,CAAEC,MAAO,EAAGC,IAAK/B,EAAMC,OAAOH,OACzCkC,YAASH,GAAMzD,MAAK,SAAAC,GAChByC,EAASzC,EAASwC,OAClBG,EAAc3C,EAAS4D,cAiEvB,kBAAC0B,EAAA,EAAD,CACItC,KAAMA,EACNuC,QAASxB,GACTyB,kBAAgB,0BAChB,kBAACC,EAAA,EAAD,CAAaC,MAAO,CAAEC,OAAQ,QAAU/F,GAAG,0BAA3C,UAGA,kBAACgG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,2CAIJ,kBAACC,EAAA,EAAD,KACI,kBAAC9D,EAAA,EAAD,CAAQ+D,WAAS,EAAC3B,QAASL,GAAmBtG,MAAM,WAApD,MAGA,kBAACuE,EAAA,EAAD,CAAQoC,QAnKH,WACjBnB,GAAQ,GAER+C,YAAW,CAAEpG,GAAIb,GAAKc,MAAOE,MAAK,SAAAC,GAC9B,GAAwB,YAApBA,EAASC,OAAsB,CAC/B,IAAMgG,EAAWzD,EAAMmC,KAAI,SAACuB,GACxB,OAAInH,GAAKc,MAAQqG,EAAYrG,MAG7BqG,EAAYjG,OAAS,YAFViG,KAKfzD,EAASwD,QAuJ0BxI,MAAM,WAArC,QAMR,kBAAC6H,EAAA,EAAD,CACItC,KAAME,EACNqC,QAASrB,GACTsB,kBAAgB,0BAChB,kBAACC,EAAA,EAAD,CAAaC,MAAO,CAAEC,OAAQ,QAAU/F,GAAG,0BAA3C,UAGA,kBAACgG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,8CAIJ,kBAACC,EAAA,EAAD,KACI,kBAAC9D,EAAA,EAAD,CAAQ+D,WAAS,EAAC3B,QAASF,GAAoBzG,MAAM,WAArD,MAGA,kBAACuE,EAAA,EAAD,CAAQoC,QAzKF,WAElBjB,GAAmB,GAEnBgD,YAAY,CAAEvG,GAAIb,GAAKc,MAAOE,MAAK,SAAAC,GAC/B,GAAwB,YAApBA,EAASC,OAAsB,CAC/B,IAAMgG,EAAWzD,EAAMmC,KAAI,SAACyB,EAAcC,GAEtC,OAAItH,GAAKc,MAAQuG,EAAavG,MAG9BuG,EAAanG,OAAS,UAFXmG,KAKf3D,EAASwD,QA2J2BxI,MAAM,WAAtC,QAMR,kBAAC6H,EAAA,EAAD,CAAQhG,SAAS,KAAK0D,KAAMI,EAAcmC,QAAStB,GAAiBqC,oBAAqBnE,GACrF,kBAACyD,EAAA,EAAD,KACI,kBAAC,EAAD,CAAU1F,YAAa+D,GAAiBlF,KAAMA,GAAMoB,aA3I/C,SAAApB,GACjBsE,GAAgB,GAChB,IAAM4C,EAAWzD,EAAMmC,KAAI,SAACyB,GAExB,OAAIrH,EAAKc,MAAQuG,EAAavG,MAG9BuG,EAAalH,KAAOH,EAAKG,MAFdkH,KAKf3D,EAASwD,OAmID,kBAACH,EAAA,EAAD,KACI,kBAAC9D,EAAA,EAAD,CAAQ+D,WAAS,EAAC3B,QAASH,GAAiBxG,MAAM,WAAlD,YAMR,kBAAC6H,EAAA,EAAD,CAAQtC,KAAMM,GAAoBiC,QAASpB,IACvC,kBAACsB,EAAA,EAAD,CAAa7F,GAAG,qBAAhB,aACA,kBAACgG,EAAA,EAAD,KACI,kBAAC,EAAD,CAAU1F,YAAaiE,GAAiBxD,eA3JjC,SAAA5B,GACnB0D,GAAS,SAAAD,GAAK,4BAAQA,GAAR,CAAezD,OAC7BwE,IAAsB,OA2Jd,kBAACuC,EAAA,EAAD,KACI,kBAAC9D,EAAA,EAAD,CAAQoC,QAASD,GAAiB1G,MAAM,WAAxC,e,iCC5SpB,IAAI8I,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3ClF,OAAO,IAETkF,EAAQC,aAAU,EAElB,IAAIC,EAASN,EAAuBC,EAAQ,IAIxCM,GAAW,EAFMP,EAAuBC,EAAQ,KAElBI,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,wJACD,QAEJL,EAAQC,QAAUE,G,iCCflB,IAAIP,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3ClF,OAAO,IAETkF,EAAQC,aAAU,EAElB,IAAIC,EAASN,EAAuBC,EAAQ,IAIxCM,GAAW,EAFMP,EAAuBC,EAAQ,KAElBI,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,qOACD,WAEJL,EAAQC,QAAUE","file":"static/js/12.b36583ff.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\n\nimport clsx from 'clsx';\n\nimport { createRole, updateRole } from '../../api/api';\n\nimport { Button } from '@material-ui/core';\nimport TextField from \"@material-ui/core/TextField\";\nimport Swal from 'sweetalert2';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n    minWidth: 290\n  },\n  input: {\n    display: \"flex\",\n    padding: 0,\n    height: \"auto\"\n  },\n  valueContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flex: 1,\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  margin: {\n    marginTop: 10\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: theme.spacing(1, 2)\n  },\n  singleValue: {\n    fontSize: 16\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 2,\n    bottom: 6,\n    fontSize: 16\n  },\n\n  divider: {\n    height: theme.spacing(2)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n\n  },\n  button:\n  {\n    margin: theme.spacing(1),\n  },\n  fab:\n  {\n    marginTop: -2,\n    float: \"right\"\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}));\n\n\nconst RoleForm = props => {\n\n  const [disabled, setDisabled] = useState(true)\n  const [role, setRole] = useState(null)\n  const classes = useStyles()\n  const [values, setValues] = React.useState({\n    roleName: '',\n    saved: false\n  })\n\n  useEffect(() => {\n    if (props.role) {\n      console.log('props', props.role.name);\n      setRole(props.role);\n      setDisabled(false);\n      setValues({ ...values, 'roleName': props.role.name })\n    }\n  }, []);\n\n  const initialState = {\n    roleName: '',\n    saved: true\n  }\n\n\n  const inputChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value })\n    if (event.target.value.toString().trim().length > 5)\n      setDisabled(false)\n    else\n      setDisabled(true)\n  }\n\n  const onSubmitRole = e => {\n\n    let input = {\n      name: values.roleName\n    }\n\n    if (!props.role) {\n      createRole(input).then(response => {\n        if (response.status === 'success') {\n          props.handleClose()\n          props.passRoleCreate(response.role)\n          Swal.fire({\n            icon: 'success',\n            title: `El role ${values.roleName}  fue creado(a) exitosamente`,\n            showConfirmButton: false,\n            timer: 1500\n          })\n\n          setValues({ ...initialState })\n        }\n      });\n    } else {\n      input.id = props.role._id;\n      updateRole(input).then(response => {\n        if (response.status === 'success') {\n          props.handleClose()\n\n          response.role.name = values.roleName;\n          props.passRoleEdit(response.role)\n\n          Swal.fire({\n            icon: 'success',\n            title: `El role ${values.roleName}  fue actualizado exitosamente`,\n            showConfirmButton: false,\n            timer: 1500\n          })\n\n          setValues({ ...initialState });\n        }\n      });\n    }\n  }\n\n\n  return (\n    <Fragment>\n\n      <Container maxWidth=\"md\" className={classes.margin}>\n\n        <Paper className={classes.paper}>\n          <form onSubmit={e => {\n            e.preventDefault()\n            onSubmitRole()\n          }} >\n            <Grid container spacing={3} direction=\"column\" >\n              <Grid item xs={12}>\n                <TextField fullWidth\n                  autoComplete='off'\n                  id=\"outlined-simple-start-adornment\"\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Nombre del rol\"\n                  value={values.roleName}\n                  onChange={inputChange('roleName')} />\n              </Grid>\n\n\n\n              <Grid item xs={6}>\n                <Button disabled={disabled} type=\"submit\" variant=\"contained\" color='primary'>{!props.role ? 'Crear' : 'Actualizar'}</Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n\n      </Container>\n    </Fragment>\n  )\n}\n\nexport default RoleForm","import React, { useState, Fragment, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport RoleForm from \"./RoleForm\";\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { getRoles, deleteRole, restoreRole } from '../../api/api';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    iconWidth: {\n        width: 10\n    },\n    paper: {\n        padding: theme.spacing(2),\n        marginTop: 10,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    input: {\n        display: 'none',\n    },\n    fab: {\n        margin: theme.spacing(1),\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n        color: 'black'\n    },\n}))\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n})\n\n\n\nconst Role = () => {\n\n    const classes = useStyles()\n\n    const [roles, setRoles] = useState([])\n    const [totalRoles, setTotalRoles] = useState(0)\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [page, setPage] = useState(0);\n\n    const [open, setOpen] = React.useState(false);\n    const [openRestoreRole, setOpenRestoreRole] = React.useState(false);\n    const [openEditRole, setOpenEditRole] = React.useState(false);\n    const [openCreateRoleForm, setOpenCreateRoleForm] = React.useState(false);\n    const [role, setRole] = useState({})\n\n\n    useEffect(() => {\n        let data = { start: 0, end: rowsPerPage }\n        getRoles(data).then(response => {\n            setRoles(response.roles);\n            setTotalRoles(response.count);\n        });\n    }, []);\n\n    const onOpenDeleteRole = role => () => {\n        setRole(role)\n        setOpen(true);\n    }\n    const onOpenRestoreRole = role => () => {\n        setRole(role)\n        setOpenRestoreRole(true);\n    }\n    const onCloseDeleteRole = () => {\n        setOpen(false);\n    }\n    const onDeleteRole = () => {\n        setOpen(false);\n\n        deleteRole({ id: role._id }).then(response => {\n            if (response.status === 'success') {\n                const newRoles = roles.map((currentRole) => {\n                    if (role._id !== currentRole._id)\n                        return currentRole\n\n                    currentRole.status = 'inactive'\n                    return currentRole\n                });\n                setRoles(newRoles)\n            }\n        });\n    }\n    const onRestoreRole = () => {\n\n        setOpenRestoreRole(false)\n\n        restoreRole({ id: role._id }).then(response => {\n            if (response.status === 'success') {\n                const newRoles = roles.map((currentRoles, index) => {\n\n                    if (role._id !== currentRoles._id)\n                        return currentRoles\n\n                    currentRoles.status = 'active'\n                    return currentRoles\n                })\n                setRoles(newRoles)\n            }\n        });\n    }\n    const onEditRole = role => () => {\n        setRole(role)\n        setOpenEditRole(true)\n    };\n    const onCloseEditRole = () => {\n        setOpenEditRole(false)\n    };\n    const onCloseRestoreRole = () => {\n        setOpenRestoreRole(false)\n    };\n    const onCreateRole = () => {\n        setOpenCreateRoleForm(true)\n    }\n    const onCloseRoleForm = () => {\n        setOpenCreateRoleForm(false)\n    }\n    const passRoleCreate = role => {\n        setRoles(roles => [...roles, role]);\n        setOpenCreateRoleForm(false);\n    }\n    const passRoleEdit = role => {\n        setOpenEditRole(false);\n        const newRoles = roles.map((currentRoles) => {\n\n            if (role._id !== currentRoles._id)\n                return currentRoles\n\n            currentRoles.name = role.name;\n            return currentRoles\n        })\n        setRoles(newRoles)\n    }\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n        let data = { start: newPage, end: rowsPerPage }\n        getRoles(data).then(response => {\n            setRoles(response.roles);\n            setTotalRoles(response.count);\n\n        });\n    }\n    const handleChangeRowsPerPage = event => {\n\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n        let data = { start: 0, end: event.target.value }\n        getRoles(data).then(response => {\n            setRoles(response.roles);\n            setTotalRoles(response.count);\n        });\n\n    }\n\n\n\n    return (\n        <Fragment>\n            <Paper className={classes.paper}>\n                <Button variant=\"contained\" color=\"primary\" onClick={onCreateRole}>Crear rol</Button>\n\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Nombre</TableCell>\n                            <TableCell colSpan={4}>Acciones</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            roles.map(role => {\n                                return (\n                                    <TableRow key={role._id}>\n                                        <TableCell>{role.name} </TableCell>\n\n                                        <TableCell className={classes.iconWidth}>\n                                            {\n                                                !role.administrative ?\n                                                    <Tooltip title=\"Editar\" placement=\"top\">\n                                                        <EditIcon className={classes.icon} onClick={onEditRole(role)} />\n                                                    </Tooltip>\n                                                    : \"\"\n                                            }\n                                        </TableCell>\n                                        <TableCell className={classes.iconWidth}>\n                                            {\n                                                !role.administrative ?\n                                                    <Tooltip title=\"Eliminar\" placement=\"top\">\n                                                        {\n                                                            role.status === 'active' ?\n                                                                <DeleteIcon className={classes.icon} onClick={onOpenDeleteRole(role)} />\n                                                                :\n                                                                <RestoreIcon className={classes.icon} onClick={onOpenRestoreRole(role)} />\n                                                        }\n                                                    </Tooltip>\n                                                    : \"\"\n                                            }\n                                        </TableCell>\n\n                                    </TableRow>)\n                            }\n                            )}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={totalRoles}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <Dialog\n                open={open}\n                onClose={onCloseDeleteRole}\n                aria-labelledby=\"draggable-dialog-title\">\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n                    Alerta\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Esta seguro de eliminar este rol?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={onCloseDeleteRole} color=\"primary\">\n                        NO\n                    </Button>\n                    <Button onClick={onDeleteRole} color=\"primary\">\n                        SI\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={openRestoreRole}\n                onClose={onCloseRestoreRole}\n                aria-labelledby=\"draggable-dialog-title\">\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n                    Alerta\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Esta seguro de Reactivar a este rol?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={onCloseRestoreRole} color=\"primary\">\n                        NO\n                    </Button>\n                    <Button onClick={onRestoreRole} color=\"primary\">\n                        SI\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog maxWidth=\"md\" open={openEditRole} onClose={onCloseEditRole} TransitionComponent={Transition}>\n                <DialogContent>\n                    <RoleForm handleClose={onCloseEditRole} role={role} passRoleEdit={passRoleEdit} />\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={onCloseEditRole} color=\"primary\">\n                        Cerrar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog open={openCreateRoleForm} onClose={onCloseRoleForm} >\n                <DialogTitle id=\"form-dialog-title\">Crear rol</DialogTitle>\n                <DialogContent>\n                    <RoleForm handleClose={onCloseRoleForm} passRoleCreate={passRoleCreate} />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onCloseRoleForm} color=\"primary\">\n                        Cerrar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Fragment>\n    )\n}\n\nexport default Role","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z\"\n}), 'Restore');\n\nexports.default = _default;"],"sourceRoot":""}