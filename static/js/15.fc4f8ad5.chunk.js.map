{"version":3,"sources":["../node_modules/@material-ui/icons/Restore.js","views/Person/PersonDetail.js","views/Person/PersonForm.js","views/Person/Person.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","makeStyles","theme","root","flexGrow","height","minWidth","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","chip","margin","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","divider","paper","color","text","secondary","button","fab","marginTop","float","extendedIcon","marginRight","formControl","PersonDetail","props","console","log","classes","useState","Card","CardHeader","title","Divider","CardContent","className","content","Table","TableBody","TableRow","TableCell","person","names","selected","last_name","documentType","documentNumber","checkDigit","email","address","PersonForm","useEffect","getRoles","then","response","setRoles","roles","setName","name","setDocumentNumber","document_number","setUsername","username","setRole","role","disabled","file","setFile","password","setPassword","repeatPassword","setRepeatPassword","errorName","setErrorName","errorTextName","setErrorTextName","errorDocument","setErrorDocument","errorTextDocument","setErrorTextDocument","validateName","undefined","toString","trim","validateDocument","onSubmitPerson","_","errores","errors","validateForm","toast","error","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","formData","FormData","append","_id","updateUser","status","info","createUser","onCloseModal","message","Container","maxWidth","Paper","encType","onSubmit","e","preventDefault","Grid","container","item","xs","sm","Autocomplete","fullWidth","size","getOptionLabel","option","toUpperCase","filterOptions","x","options","autoComplete","getOptionSelected","onChange","onInputChange","newInputValue","length","data","search","renderInput","params","TextField","label","variant","renderTags","tagValue","getTagProps","map","index","Chip","indexOf","renderOption","Typography","helperText","id","clsx","textField","target","open","filesLimit","dropzoneText","acceptedFiles","Button","iconWidth","width","icon","DialogTitle","withStyles","closeButton","right","top","children","onClose","other","disableTypography","IconButton","aria-label","onClick","Transition","React","forwardRef","ref","Slide","direction","Person","start","end","rowsPerPage","paginate","listUsers","setPersons","users","setTotalPersons","count","persons","totalPersons","page","setPage","setRowsPerPage","setOpen","openRestorePerson","setOpenRestorePerson","openDetailPerson","setOpenDetailPerson","openEditPerson","setOpenEditPerson","openCreatePerson","setOpenCreatePerson","setPersonSelected","onUpdateUsers","onOpenRestorePerson","onCloseDeletePerson","onDetailPerson","closeApu","onEditPerson","onCloseEditPerson","onCloseRestorePerson","onCloseCreatePerson","Fab","TableHead","key","Tooltip","placement","TablePagination","rowsPerPageOptions","component","onChangePage","event","newPage","onChangeRowsPerPage","Dialog","aria-labelledby","style","cursor","DialogContent","DialogContentText","DialogActions","autoFocus","deleteUser","success","newPersons","currentPerson","estado","catch","restoreUser","TransitionComponent","handleClose","modal"],"mappings":"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","file":"static/js/15.fc4f8ad5.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z\"\n}), 'Restore');\n\nexports.default = _default;","import React, { useState } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport PersonIcon from '@material-ui/icons/PersonOutline';\r\n\r\nimport { Label } from 'components';\r\n\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250,\r\n    minWidth: 290\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n\r\n  },\r\n  button:\r\n  {\r\n    margin: theme.spacing(1),\r\n  },\r\n  fab:\r\n  {\r\n    marginTop: -2,\r\n    float: \"right\"\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst PersonDetail = props => {\r\n\r\n  console.log('props', props)\r\n\r\n  const classes = useStyles()\r\n\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n\r\n  const handleEditOpen = () => {\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleEditClose = () => {\r\n    setOpenEdit(false);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Detalle Usuario\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Nombres</TableCell>\r\n              <TableCell>{props.person.names}</TableCell>\r\n            </TableRow>\r\n            <TableRow selected>\r\n              <TableCell>Apellidos</TableCell>\r\n              <TableCell>{props.person.last_name}</TableCell>\r\n            </TableRow>\r\n            \r\n            <TableRow>\r\n              <TableCell>Tipo de documento</TableCell>\r\n              <TableCell>{props.person.documentType ? props.person.documentType.documentType : ''}</TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow selected>\r\n              <TableCell>Número de documento</TableCell>\r\n              <TableCell>{props.person.documentNumber} {props.person.checkDigit >= 0 ? props.person.checkDigit : ''}</TableCell>\r\n            </TableRow>\r\n\r\n            \r\n            <TableRow>\r\n              <TableCell>Correo electrónico</TableCell>\r\n              <TableCell>{props.person.email}</TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow selected>\r\n              <TableCell>Dirección</TableCell>\r\n              <TableCell>{props.person.address}</TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow >\r\n              <TableCell>Correo electrónico</TableCell>\r\n              <TableCell>{props.person.email}</TableCell>\r\n            </TableRow>\r\n\r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PersonDetail","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Container from '@material-ui/core/Container'\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Button } from '@material-ui/core'\r\nimport { DropzoneArea } from 'material-ui-dropzone'\r\n\r\nimport PropTypes from \"prop-types\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport { createUser, updateUser, getRoles } from '../../api/api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250,\r\n    minWidth: 290\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n\r\n  },\r\n  button:\r\n  {\r\n    margin: theme.spacing(1),\r\n  },\r\n  fab:\r\n  {\r\n    marginTop: -2,\r\n    float: \"right\"\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.shape({\r\n      current: PropTypes.any.isRequired\r\n    })\r\n  ])\r\n}\r\nconst PersonForm = props => {\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(props)\r\n\r\n    getRoles().then(response => {\r\n      setRoles(response.roles);\r\n    })\r\n\r\n    if (props.person) {\r\n\r\n      setName(props.person.name);\r\n      setDocumentNumber(props.person.document_number);\r\n      setUsername(props.person.username);\r\n      setRole(props.person.role);\r\n    }\r\n  }, [])\r\n\r\n  const [dataResponse, setDataResponse] = useState([])\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const [file, setFile] = useState({})\r\n  const classes = useStyles()\r\n\r\n\r\n  const [roles, setRoles] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [documentNumber, setDocumentNumber] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [repeatPassword, setRepeatPassword] = useState('');\r\n  const [role, setRole] = useState(null);\r\n\r\n  const [errorName, setErrorName] = useState(false)\r\n  const [errorTextName, setErrorTextName] = useState('')\r\n\r\n  const [errorDocument, setErrorDocument] = useState(false)\r\n  const [errorTextDocument, setErrorTextDocument] = useState('')\r\n\r\n  const handlePicture = file => {\r\n    setFile(file[0])\r\n  }\r\n  const onChangeName = e => {\r\n    setName(e.target.value);\r\n    validateName(e.target.value);\r\n  }\r\n  const onChangeDocumentNumber = e => {\r\n    setDocumentNumber(e.target.value);\r\n    validateDocument(e.target.value);\r\n  }\r\n  const onChangeUserame = e => {\r\n    setUsername(e.target.value)\r\n  }\r\n  const onChangePassword = e => {\r\n    setPassword(e.target.value)\r\n  }\r\n  const onChangeRepeatPassword = e => {\r\n    setRepeatPassword(e.target.value)\r\n  }\r\n  const validateForm = () => {\r\n    let errors = 0\r\n    errors += validateName()\r\n    // errors += validatePrice()\r\n    // errors += validateQuantity()\r\n    return errors\r\n  }\r\n  const validateName = (value) => {\r\n    let text = value !== undefined ? value : name\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorName(true)\r\n      setErrorTextName('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorName(false)\r\n      setErrorTextName('')\r\n      return 0\r\n    }\r\n  }\r\n  const validateDocument = (value) => {\r\n    let text = value !== undefined ? value : documentNumber\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorDocument(true)\r\n      setErrorTextDocument('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorDocument(false)\r\n      setErrorTextDocument('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const onSubmitPerson = _ => {\r\n\r\n    let errores = validateForm()\r\n    errores += validateDocument();\r\n\r\n    if (password && repeatPassword) {\r\n      if (password !== repeatPassword) {\r\n        errores++;\r\n        toast.error('Las contraseñas no son iguales', {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }\r\n    }\r\n\r\n\r\n\r\n    if (errores === 0) {\r\n      const formData = new FormData();\r\n      if (props.person) {\r\n        formData.append(\"id\", props.person._id);\r\n      }\r\n      formData.append(\"photo\", file);\r\n      formData.append(\"name\", name);\r\n      formData.append(\"username\", username);\r\n      formData.append(\"documentNumber\", documentNumber);\r\n      formData.append(\"role\", role._id);\r\n      formData.append(\"password\", password);\r\n\r\n      if (!props.person) {\r\n        createUser(formData).then(response => {\r\n          console.log('response', response);\r\n          if (response.status == 'success') {\r\n            toast.info('Funcionario registrado exitosamente', {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n            props.onCloseModal(true);\r\n            // props.onUpdateUsers();\r\n          } else {\r\n            toast.error(response.message, {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n          }\r\n\r\n        });\r\n\r\n      } else {\r\n\r\n        updateUser(formData).then(response => {\r\n          console.log('response', response);\r\n          if (response.status == 'success') {\r\n            toast.info('Funcionario registrado exitosamente', {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n          } else {\r\n            toast.error('Ocurrió un error al registrar el funcionario', {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n          }\r\n\r\n        });\r\n      }\r\n    } else {\r\n      toast.error('🦄 Wow so easy!', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <ToastContainer />\r\n      <Container maxWidth=\"md\">\r\n\r\n        <Paper className={classes.paper}>\r\n          <form encType={'multipart/form-data'}\r\n            onSubmit={e => {\r\n              e.preventDefault()\r\n              onSubmitPerson()\r\n            }} >\r\n            <Grid container spacing={3}>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n\r\n                <Autocomplete\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  getOptionLabel={\r\n                    (option) => {\r\n                      return `${option.name.toString().toUpperCase()} `\r\n                    }\r\n                  }\r\n                  filterOptions={(x) => x}\r\n                  options={roles}\r\n                  autoComplete\r\n                  getOptionSelected={(option, value) => option === value}\r\n                  onChange={(_, value) => {\r\n                    setRole(value);\r\n                  }}\r\n                  onInputChange={(_, newInputValue) => {\r\n                    if (newInputValue.toString().trim().length > 0) {\r\n                      let data = {\r\n                        search: newInputValue.toString().trim()\r\n                      }\r\n                      getRoles(data).then(response => {\r\n                        setRoles(response.roles);\r\n                      })\r\n                    }\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} label=\"Roles\" variant=\"outlined\" margin=\"dense\" />\r\n                  )}\r\n                  renderTags={(tagValue, getTagProps) =>\r\n                    tagValue.map((option, index) => (\r\n                      <Chip\r\n                        label={option.name}\r\n                        {...getTagProps({ index })}\r\n                        disabled={roles.indexOf(option) !== -1}\r\n                      />\r\n                    ))\r\n                  }\r\n                  renderOption={(option) => {\r\n\r\n                    return (\r\n                      <Grid container alignItems=\"center\">\r\n                        <Grid item xs>\r\n                          <Typography >{`${option.name.toString().toUpperCase()}`}</Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    );\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  error={errorName}\r\n                  helperText={errorTextName}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Nombre\"\r\n                  value={name}\r\n                  onChange={onChangeName} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  error={errorDocument}\r\n                  helperText={errorTextDocument}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  value={documentNumber}\r\n                  onChange={onChangeDocumentNumber}\r\n                  label=\"Documento\" />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Nombre de usuario\"\r\n                  value={username}\r\n                  onChange={onChangeUserame} />\r\n              </Grid>\r\n\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  type='password'\r\n                  label=\"Contraseña\"\r\n                  onChange={onChangePassword} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  type='password'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Repite la contraseña\"\r\n                  onChange={onChangeRepeatPassword} />\r\n              </Grid>\r\n\r\n\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <DropzoneArea\r\n                  open={true}\r\n                  filesLimit={1}\r\n                  dropzoneText=\"Arrastre y suelte un archivo de imagen aquí o haga clic\"\r\n                  acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\r\n                  onChange={handlePicture} />\r\n\r\n              </Grid>\r\n\r\n\r\n              <Grid item xs={2} sm={3}>\r\n                <Button disabled={disabled} type=\"submit\" variant=\"contained\" color='primary'>\r\n                  {props.person ? \"Actualizar\" : \"Guardar\"}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React, { useState, useEffect, Fragment } from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport PersonDetail from './PersonDetail'\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport PersonForm from \"./../Person/PersonForm\";\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { deleteUser, restoreUser, listUsers } from '../../api/api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    iconWidth: {\r\n        width: 10\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    fab: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(1),\r\n        color: 'black'\r\n    },\r\n}))\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n})\r\n\r\n\r\n\r\nconst Person = _ => {\r\n\r\n    useEffect(() => {\r\n        let data = { start: 0, end: rowsPerPage, paginate: true }\r\n\r\n        listUsers(data).then(response => {\r\n            setPersons(response.users);\r\n            setTotalPersons(response.count);\r\n        });\r\n    }, []);\r\n\r\n\r\n\r\n    const classes = useStyles()\r\n\r\n    const [persons, setPersons] = useState([])\r\n    const [totalPersons, setTotalPersons] = useState(0)\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [openRestorePerson, setOpenRestorePerson] = useState(false);\r\n    const [openDetailPerson, setOpenDetailPerson] = useState(false);\r\n    const [openEditPerson, setOpenEditPerson] = useState(false);\r\n    const [openCreatePerson, setOpenCreatePerson] = useState(false);\r\n    const [person, setPersonSelected] = useState({})\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n        let data = { start: (newPage * rowsPerPage), end: rowsPerPage, paginate: true }\r\n        listUsers(data).then(response => {\r\n            setPersons(response.users);\r\n            setTotalPersons(response.count);\r\n        });\r\n    }\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n        let data = { start: 0, end: event.target.value, paginate: true }\r\n        listUsers(data).then(response => {\r\n            setPersons(response.users);\r\n            setTotalPersons(response.count);\r\n        });\r\n    }\r\n    const onUpdateUsers = () => {\r\n        listUsers().then(response => {\r\n            setPersons(response.users);\r\n            setTotalPersons(response.count);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const onOpenDeletePerson = id => () => {\r\n        setPersonSelected(id)\r\n        setOpen(true);\r\n    }\r\n\r\n    const onOpenRestorePerson = id => () => {\r\n        setPersonSelected(id)\r\n        setOpenRestorePerson(true);\r\n    }\r\n\r\n    const onCloseDeletePerson = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const onDeletePerson = () => {\r\n        setOpen(false);\r\n\r\n        deleteUser(person).then(response => {\r\n            if (response.status === 'success') {\r\n                toast.success(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                const newPersons = persons.map((currentPerson) => {\r\n                    if (person !== currentPerson._id)\r\n                        return currentPerson\r\n\r\n                    currentPerson.estado = \"inactivo\";\r\n                    return currentPerson\r\n                })\r\n                setPersons(newPersons)\r\n            } else {\r\n                toast.error(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }).catch(e => {\r\n\r\n            toast.error('Ocurrió un error al desactivar el funcionario', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        })\r\n\r\n    }\r\n\r\n    const onRestorePerson = () => {\r\n\r\n        setOpenRestorePerson(false)\r\n\r\n        restoreUser(person).then(response => {\r\n            if (response.status === 'success') {\r\n                toast.success(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                const newPersons = persons.map((currentPerson) => {\r\n                    if (person !== currentPerson._id)\r\n                        return currentPerson\r\n\r\n                    currentPerson.estado = \"activo\";\r\n                    return currentPerson\r\n                })\r\n                setPersons(newPersons)\r\n            } else {\r\n                toast.error(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }).catch(e => {\r\n            toast.error('Ocurrió un error al activar el funcionario', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        })\r\n    }\r\n\r\n    const onDetailPerson = person => () => {\r\n        setPersonSelected(person)\r\n        setOpenDetailPerson(true)\r\n    }\r\n\r\n    const closeApu = () => {\r\n        setOpenDetailPerson(false)\r\n    }\r\n\r\n    const onEditPerson = person => () => {\r\n        setPersonSelected(person)\r\n        setOpenEditPerson(true)\r\n    }\r\n\r\n    const onCloseEditPerson = () => {\r\n        setOpenEditPerson(false)\r\n    }\r\n\r\n    const onCloseRestorePerson = () => {\r\n        setOpenRestorePerson(false)\r\n    }\r\n\r\n    const onCreatePerson = () => {\r\n        setOpenCreatePerson(true)\r\n    }\r\n\r\n    const onCloseCreatePerson = () => {\r\n        setOpenCreatePerson(false)\r\n    }\r\n\r\n    const onCloseModal = () => {\r\n        setOpenCreatePerson(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <Paper className={classes.paper}>\r\n                <Fab onClick={onCreatePerson} variant=\"extended\" color=\"primary\" size=\"small\" className={classes.margin}>\r\n                    <AddIcon className={classes.extendedIcon} />\r\n                    Nuevo funcionario\r\n                </Fab>\r\n\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>FUNCIONARIO</TableCell>\r\n                            <TableCell>DOCUMENTO</TableCell>\r\n                            <TableCell>NOMBRE DE USUARIO</TableCell>\r\n                            <TableCell>ROL</TableCell>\r\n                            <TableCell>FOTO</TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            persons.map(item => {\r\n\r\n                                return (\r\n                                    <TableRow key={item._id}>\r\n                                        <TableCell>{item.name} </TableCell>\r\n                                        <TableCell>{item.document_number}</TableCell>\r\n                                        <TableCell>{item.username}</TableCell>\r\n                                        <TableCell>{item.role.name}</TableCell>\r\n                                        <TableCell>{item.username}</TableCell>\r\n\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            <Tooltip title=\"Detalle\" placement=\"top\">\r\n                                                <SearchIcon className={classes.icon} onClick={onDetailPerson(item)} />\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            <Tooltip title=\"Editar\" placement=\"top\">\r\n                                                <EditIcon className={classes.icon} onClick={onEditPerson(item)} />\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            <Tooltip title={item.status} placement=\"top\">\r\n                                                {\r\n                                                    item.status === 'activo' ?\r\n                                                        <DeleteIcon className={classes.icon} onClick={onOpenDeletePerson(item._id)} />\r\n                                                        :\r\n                                                        <RestoreIcon className={classes.icon} onClick={onOpenRestorePerson(item._id)} />\r\n                                                }\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                    </TableRow>)\r\n                            }\r\n                            )}\r\n                    </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={totalPersons}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={onCloseDeletePerson}\r\n                aria-labelledby=\"draggable-dialog-title\">\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                    Alerta\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Esta seguro de eliminar este funcionario?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseDeletePerson} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Button onClick={onDeletePerson} color=\"primary\">\r\n                        SI\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={openRestorePerson}\r\n                onClose={onCloseRestorePerson}\r\n                aria-labelledby=\"draggable-dialog-title\">\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                    Alerta\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Esta seguro de Reactivar a esta persona?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseRestorePerson} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Button onClick={onRestorePerson} color=\"primary\">\r\n                        SI\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={openDetailPerson} onClose={closeApu} TransitionComponent={Transition}>\r\n                <DialogContent>\r\n                    <PersonDetail person={person} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={closeApu} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog maxWidth=\"md\" open={openEditPerson} onClose={onCloseEditPerson} TransitionComponent={Transition}>\r\n                <DialogContent>\r\n                    <PersonForm onCloseModal={onCloseModal} onUpdateUsers={onUpdateUsers} person={person} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseEditPerson} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n                open={openCreatePerson}>\r\n                <DialogTitle onClose={onCloseCreatePerson} >Crear usuario</DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <PersonForm handleClose={onCloseCreatePerson} onCloseModal={onCloseModal} onUpdateUsers={onUpdateUsers} modal={true} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCreatePerson} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Fragment>)\r\n}\r\n\r\nexport default Person"],"sourceRoot":""}