{"version":3,"sources":["../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ArrowDropDown.js","../node_modules/@material-ui/lab/esm/useAutocomplete/useAutocomplete.js","../node_modules/@material-ui/lab/esm/Autocomplete/Autocomplete.js"],"names":["createSvgIcon","React","d","stripDiacritics","string","normalize","replace","findIndex","array","comp","i","length","defaultFilterOptions","config","arguments","undefined","_config$ignoreAccents","ignoreAccents","_config$ignoreCase","ignoreCase","limit","_config$matchFrom","matchFrom","stringify","_config$trim","trim","options","_ref","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","createFilterOptions","useAutocomplete","props","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$blurOnSelect","blurOnSelect","_props$clearOnBlur","clearOnBlur","freeSolo","_props$clearOnEscape","clearOnEscape","_props$componentName","componentName","_props$debug","debug","_props$defaultValue","defaultValue","multiple","_props$disableClearab","disableClearable","_props$disableCloseOn","disableCloseOnSelect","_props$disabledItemsF","disabledItemsFocusable","_props$disableListWra","disableListWrap","_props$filterOptions","filterOptions","_props$filterSelected","filterSelectedOptions","_props$freeSolo","getOptionDisabled","_props$getOptionLabel","x","_props$getOptionSelec","getOptionSelected","value","groupBy","idProp","id","_props$includeInputIn","includeInputInList","inputValueProp","_props$multiple","onChange","onClose","onHighlightChange","onInputChange","onOpen","openProp","open","_props$openOnFocus","openOnFocus","_props$selectOnFocus","selectOnFocus","valueProp","useId","ignoreFocus","firstFocus","inputRef","listboxRef","_React$useState","anchorEl","setAnchorEl","_React$useState2","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","setHighlightedIndex","useEventCallback","index","reason","event","current","removeAttribute","setAttribute","concat","prev","querySelector","listboxNode","parentElement","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","_useControlled","useControlled","controlled","default","name","_useControlled2","_slicedToArray","setValue","_useControlled3","state","_useControlled4","setInputValue","_React$useState3","focused","setFocused","resetInputValue","newValue","newInputValue","optionLabel","_useControlled5","_useControlled6","setOpenState","inputValueIsSelectedValue","popupOpen","some","value2","focusTag","tagToFocus","focus","validOptionIndex","direction","nextFocus","nextFocusDisabled","disabled","getAttribute","hasAttribute","changeHighlightedIndex","diff","getNextIndex","maxIndex","newIndex","Math","abs","nextIndex","setSelectionRange","valueItem","currentOption","val","itemIndex","optionItem","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","_toConsumableArray","push","splice","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","other","key","preventDefault","which","stopPropagation","onKeyDown","handleFocus","handleBlur","document","activeElement","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handleListboxRef","node","setRef","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","group","getRootProps","_extends","role","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","ref","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","_ref2","onDelete","getListboxProps","getOptionProps","_ref3","selected","onMouseOver","onTouchStart","DisablePortal","_objectWithoutProperties","CloseIcon","fontSize","ArrowDropDownIcon","Autocomplete","startAdornment","ChipProps","classes","className","_props$clearText","clearText","_props$closeIcon","closeIcon","_props$closeText","closeText","_props$disabled","_props$disablePortal","disablePortal","_props$forcePopupIcon","forcePopupIcon","_props$fullWidth","fullWidth","_props$getLimitTagsTe","getLimitTagsText","more","_props$limitTags","limitTags","_props$ListboxCompone","ListboxComponent","ListboxProps","_props$loading","loading","_props$loadingText","loadingText","_props$noOptionsText","noOptionsText","_props$openText","openText","_props$PaperComponent","PaperComponent","Paper","_props$PopperComponen","PopperComponent","PopperComponentProp","Popper","_props$popupIcon","popupIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","_props$size","size","_useAutocomplete","getCustomizedTagProps","params","clsx","tag","tagSizeSmall","map","Chip","label","ListSubheader","groupLabel","component","groupUl","children","renderListOption","optionProps","hasClearIcon","hasPopupIcon","root","InputLabelProps","InputProps","inputRoot","endAdornment","IconButton","title","clearIndicator","clearIndicatorDirty","popupIndicator","popupIndicatorOpen","inputProps","inputFocused","popper","popperDisablePortal","style","width","clientWidth","paper","noOptions","listbox","option2","index2","withStyles","theme","_option","visibility","margin","maxWidth","flexWrap","paddingRight","minWidth","paddingBottom","padding","paddingLeft","right","paddingTop","flexGrow","textOverflow","opacity","position","top","marginRight","transform","zIndex","modal","typography","body1","overflow","listStyle","maxHeight","color","palette","text","secondary","minHeight","display","justifyContent","alignItems","cursor","boxSizing","outline","WebkitTapHighlightColor","_defineProperty","breakpoints","up","backgroundColor","action","hover","disabledOpacity","pointerEvents","background"],"mappings":"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","file":"static/js/3.f6624f8a.chunk.js","sourcesContent":["import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { setRef, useEventCallback, useControlled, unstable_useId as useId } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      limit = config.limit,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      stringify = config.stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue,\n        getOptionLabel = _ref.getOptionLabel;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    var filteredOptions = options.filter(function (option) {\n      var candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE 11 support.\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$componentName = props.componentName,\n      componentName = _props$componentName === void 0 ? 'useAutocomplete' : _props$componentName,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      _props$getOptionSelec = props.getOptionSelected,\n      getOptionSelected = _props$getOptionSelec === void 0 ? function (option, value) {\n    return option === value;\n  } : _props$getOptionSelec,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onHighlightChange = props.onHighlightChange,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      options = props.options,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      valueProp = props.value;\n  var id = useId(idProp);\n  var ignoreFocus = React.useRef(false);\n  var firstFocus = React.useRef(true);\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState = React.useState(null),\n      anchorEl = _React$useState[0],\n      setAnchorEl = _React$useState[1];\n\n  var _React$useState2 = React.useState(-1),\n      focusedTag = _React$useState2[0],\n      setFocusedTag = _React$useState2[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n  var setHighlightedIndex = useEventCallback(function (index) {\n    var reason = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'auto';\n    var event = arguments.length > 2 ? arguments[2] : undefined;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, options[index], reason);\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  var _useControlled3 = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  }),\n      _useControlled4 = _slicedToArray(_useControlled3, 2),\n      inputValue = _useControlled4[0],\n      setInputValue = _useControlled4[1];\n\n  var _React$useState3 = React.useState(false),\n      focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  var resetInputValue = useEventCallback(function (event, newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof optionLabel !== 'string') {\n          var erroneousReturn = optionLabel === undefined ? 'undefined' : \"\".concat(_typeof(optionLabel), \" (\").concat(optionLabel, \")\");\n          console.error(\"Material-UI: The `getOptionLabel` method of \".concat(componentName, \" returned \").concat(erroneousReturn, \" instead of a string for \").concat(JSON.stringify(newValue), \".\"));\n        }\n      }\n\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValue(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(function () {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n\n  var _useControlled5 = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  }),\n      _useControlled6 = _slicedToArray(_useControlled5, 2),\n      open = _useControlled6[0],\n      setOpenState = _useControlled6[1];\n\n  var inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(function (value2) {\n      return value2 !== null && getOptionSelected(option, value2);\n    })) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue ? '' : inputValue,\n    getOptionLabel: getOptionLabel\n  }) : [];\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      var missingValue = (multiple ? value : [value]).filter(function (value2) {\n        return !options.some(function (option) {\n          return getOptionSelected(option, value2);\n        });\n      });\n\n      if (missingValue.length > 0) {\n        console.warn([\"Material-UI: The value provided to \".concat(componentName, \" is invalid.\"), \"None of the options match with `\".concat(missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0]), \"`.\"), 'You can use the `getOptionSelected` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      var nextFocusDisabled = disabledItemsFocusable ? false : option && (option.disabled || option.getAttribute('aria-disabled') === 'true');\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var changeHighlightedIndex = useEventCallback(function (diff, direction) {\n    var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'auto';\n    var event = arguments.length > 3 ? arguments[3] : undefined;\n\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex(nextIndex, reason, event);\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  React.useEffect(function () {\n    if (!popupOpen) {\n      return;\n    }\n\n    var valueItem = multiple ? value[0] : value; // The popup is empty\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex('reset', 'next');\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (!filterSelectedOptions && valueItem != null) {\n      var currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, function (val) {\n        return getOptionSelected(currentOption, val);\n      }) !== -1) {\n        return;\n      }\n\n      var itemIndex = findIndex(filteredOptions, function (optionItem) {\n        return getOptionSelected(optionItem, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex('reset', 'next');\n      } else {\n        setHighlightedIndex(itemIndex);\n      }\n\n      return;\n    } // Keep the index in the boundaries\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex(filteredOptions.length - 1);\n    } // Ignore filterOptions => options, getOptionSelected, getOptionLabel)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [value, popupOpen, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, inputValue, multiple]);\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  var handleClose = function handleClose(event, reason) {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue, reason, details) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValue(newValue);\n  };\n\n  var isTouch = React.useRef(false);\n\n  var selectNewValue = function selectNewValue(event, option) {\n    var reasonProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'select-option';\n    var origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'options';\n    var reason = reasonProp;\n    var newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? _toConsumableArray(value) : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        var matches = newValue.filter(function (val) {\n          return getOptionSelected(option, val);\n        });\n\n        if (matches.length > 1) {\n          console.error([\"Material-UI: The `getOptionSelected` method of \".concat(componentName, \" do not handle the arguments correctly.\"), \"The component expects a single value to match a given option but found \".concat(matches.length, \" matches.\")].join('\\n'));\n        }\n      }\n\n      var itemIndex = findIndex(newValue, function (valueItem) {\n        return getOptionSelected(option, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'remove-option';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option: option\n    });\n\n    if (!disableCloseOnSelect) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    ignoreFocus.current = true;\n    setInputValue('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  var handleKeyDown = function handleKeyDown(other) {\n    return function (event) {\n      if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n        setFocusedTag(-1);\n        focusTag(-1);\n      }\n\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('start', 'next', 'keyboard', event);\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('end', 'previous', 'keyboard', event);\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(-pageSize, 'previous', 'keyboard', event);\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(pageSize, 'next', 'keyboard', event);\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(1, 'next', 'keyboard', event);\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(-1, 'previous', 'keyboard', event);\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          // Wait until IME is settled.\n          if (event.which === 229) {\n            break;\n          }\n\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            var option = filteredOptions[highlightedIndexRef.current];\n            var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n            if (disabled) {\n              return;\n            } // We don't want to validate the form.\n\n\n            event.preventDefault();\n            selectNewValue(event, option, 'select-option'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'create-option', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n\n            var newValue = _toConsumableArray(value);\n\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'remove-option', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n\n      if (other.onKeyDown) {\n        other.onKeyDown(event);\n      }\n    };\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    // Ignore the event when using the scrollbar with IE 11\n    if (listboxRef.current !== null && document.activeElement === listboxRef.current.parentElement) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValue(newValue);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    setHighlightedIndex(index, 'mouse', event);\n  };\n\n  var handleOptionTouchStart = function handleOptionTouchStart() {\n    isTouch.current = true;\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'select-option');\n    isTouch.current = false;\n  };\n\n  var handleTagDelete = function handleTagDelete(index) {\n    return function (event) {\n      var newValue = _toConsumableArray(value);\n\n      newValue.splice(index, 1);\n      handleValue(event, newValue, 'remove-option', {\n        option: value[index]\n      });\n    };\n  };\n\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    } // Automatically select the first option as the listbox become visible.\n\n\n    if (highlightedIndexRef.current === -1 && autoHighlight) {\n      changeHighlightedIndex('reset', 'next');\n    } else {\n      // Restore the focus to the correct option.\n      setHighlightedIndex(highlightedIndexRef.current);\n    }\n  });\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  var handleClick = function handleClick() {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  var handleInputMouseDown = function handleInputMouseDown(event) {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    var indexBy = new Map();\n    var warn = false;\n    groupedOptions = filteredOptions.reduce(function (acc, option, index) {\n      var group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(\"Material-UI: The options provided combined with the `groupBy` method of \".concat(componentName, \" returns duplicated headers.\"), 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index: index,\n          group: group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends(_extends({\n        'aria-owns': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        role: 'combobox',\n        'aria-expanded': popupOpen\n      }, other), {}, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\"),\n        htmlFor: id\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        onMouseDown: handleInputMouseDown,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? '' : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        // Disable browser's suggestion that might overlap with the popup.\n        // Handle autocomplete but not autofill.\n        autoComplete: 'off',\n        ref: inputRef,\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator\n      };\n    },\n    getTagProps: function getTagProps(_ref2) {\n      var index = _ref2.index;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-popup\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          // Prevent blur\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref3) {\n      var index = _ref3.index,\n          option = _ref3.option;\n      var selected = (multiple ? value : [value]).some(function (value2) {\n        return value2 != null && getOptionSelected(option, value2);\n      });\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    inputValue: inputValue,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chip from '@material-ui/core/Chip';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useAutocomplete, { createFilterOptions } from '../useAutocomplete';\nexport { createFilterOptions };\nexport var styles = function styles(theme) {\n  var _option;\n\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '&:hover $clearIndicatorDirty, &$focused $clearIndicatorDirty': {\n        visibility: 'visible'\n      }\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Pseudo-class applied to the root element if focused. */\n    focused: {},\n\n    /* Styles applied to the tag elements, e.g. the chips. */\n    tag: {\n      margin: 3,\n      maxWidth: 'calc(100% - 6px)'\n    },\n\n    /* Styles applied to the tag elements, e.g. the chips if `size=\"small\"`. */\n    tagSizeSmall: {\n      margin: 2,\n      maxWidth: 'calc(100% - 4px)'\n    },\n\n    /* Styles applied when the popup icon is rendered. */\n    hasPopupIcon: {},\n\n    /* Styles applied when the clear icon is rendered. */\n    hasClearIcon: {},\n\n    /* Styles applied to the Input element. */\n    inputRoot: {\n      flexWrap: 'wrap',\n      '$hasPopupIcon &, $hasClearIcon &': {\n        paddingRight: 26 + 4\n      },\n      '$hasPopupIcon$hasClearIcon &': {\n        paddingRight: 52 + 4\n      },\n      '& $input': {\n        width: 0,\n        minWidth: 30\n      },\n      '&[class*=\"MuiInput-root\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: 4\n        },\n        '& $input:first-child': {\n          padding: '6px 0'\n        }\n      },\n      '&[class*=\"MuiInput-root\"][class*=\"MuiInput-marginDense\"]': {\n        '& $input': {\n          padding: '4px 4px 5px'\n        },\n        '& $input:first-child': {\n          padding: '3px 0 6px'\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"]': {\n        padding: 9,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9.5px 4px'\n        },\n        '& $input:first-child': {\n          paddingLeft: 6\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"][class*=\"MuiOutlinedInput-marginDense\"]': {\n        padding: 6,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"]': {\n        paddingTop: 19,\n        paddingLeft: 8,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9px 4px'\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"][class*=\"MuiFilledInput-marginDense\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      }\n    },\n\n    /* Styles applied to the input element. */\n    input: {\n      flexGrow: 1,\n      textOverflow: 'ellipsis',\n      opacity: 0\n    },\n\n    /* Styles applied to the input element if tag focused. */\n    inputFocused: {\n      opacity: 1\n    },\n\n    /* Styles applied to the endAdornment element. */\n    endAdornment: {\n      // We use a position absolute to support wrapping tags.\n      position: 'absolute',\n      right: 0,\n      top: 'calc(50% - 14px)' // Center vertically\n\n    },\n\n    /* Styles applied to the clear indicator. */\n    clearIndicator: {\n      marginRight: -2,\n      padding: 4,\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the clear indicator if the input is dirty. */\n    clearIndicatorDirty: {},\n\n    /* Styles applied to the popup indicator. */\n    popupIndicator: {\n      padding: 2,\n      marginRight: -2\n    },\n\n    /* Styles applied to the popup indicator if the popup is open. */\n    popupIndicatorOpen: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the popper element. */\n    popper: {\n      zIndex: theme.zIndex.modal\n    },\n\n    /* Styles applied to the popper element if `disablePortal={true}`. */\n    popperDisablePortal: {\n      position: 'absolute'\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: _extends(_extends({}, theme.typography.body1), {}, {\n      overflow: 'hidden',\n      margin: '4px 0'\n    }),\n\n    /* Styles applied to the `listbox` component. */\n    listbox: {\n      listStyle: 'none',\n      margin: 0,\n      padding: '8px 0px',\n      maxHeight: '40vh',\n      overflow: 'auto'\n    },\n\n    /* Styles applied to the loading wrapper. */\n    loading: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the no option wrapper. */\n    noOptions: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the option elements. */\n    option: (_option = {\n      minHeight: 48,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      cursor: 'pointer',\n      paddingTop: 6,\n      boxSizing: 'border-box',\n      outline: '0',\n      WebkitTapHighlightColor: 'transparent',\n      paddingBottom: 6,\n      paddingLeft: 16,\n      paddingRight: 16\n    }, _defineProperty(_option, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    }), _defineProperty(_option, '&[aria-selected=\"true\"]', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[data-focus=\"true\"]', {\n      backgroundColor: theme.palette.action.hover\n    }), _defineProperty(_option, '&:active', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[aria-disabled=\"true\"]', {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    }), _option),\n\n    /* Styles applied to the group's label elements. */\n    groupLabel: {\n      backgroundColor: theme.palette.background.paper,\n      top: -8\n    },\n\n    /* Styles applied to the group's ul elements. */\n    groupUl: {\n      padding: 0,\n      '& $option': {\n        paddingLeft: 24\n      }\n    }\n  };\n};\n\nfunction DisablePortal(props) {\n  // eslint-disable-next-line react/prop-types\n  var anchorEl = props.anchorEl,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"anchorEl\", \"open\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", other);\n}\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/React.createElement(ArrowDropDownIcon, null);\n\nvar Autocomplete = React.forwardRef(function Autocomplete(props, ref) {\n  /* eslint-disable no-unused-vars */\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      ChipProps = props.ChipProps,\n      classes = props.classes,\n      className = props.className,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$clearText = props.clearText,\n      clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n      _props$closeIcon = props.closeIcon,\n      closeIcon = _props$closeIcon === void 0 ? _ref : _props$closeIcon,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      filterOptions = props.filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$forcePopupIcon = props.forcePopupIcon,\n      forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$getLimitTagsTe = props.getLimitTagsText,\n      getLimitTagsText = _props$getLimitTagsTe === void 0 ? function (more) {\n    return \"+\".concat(more);\n  } : _props$getLimitTagsTe,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      getOptionSelected = props.getOptionSelected,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$limitTags = props.limitTags,\n      limitTags = _props$limitTags === void 0 ? -1 : _props$limitTags,\n      _props$ListboxCompone = props.ListboxComponent,\n      ListboxComponent = _props$ListboxCompone === void 0 ? 'ul' : _props$ListboxCompone,\n      ListboxProps = props.ListboxProps,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      _props$loadingText = props.loadingText,\n      loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$noOptionsText = props.noOptionsText,\n      noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onHighlightChange = props.onHighlightChange,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      _props$openText = props.openText,\n      openText = _props$openText === void 0 ? 'Open' : _props$openText,\n      options = props.options,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponentProp = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      _props$popupIcon = props.popupIcon,\n      popupIcon = _props$popupIcon === void 0 ? _ref2 : _props$popupIcon,\n      renderGroupProp = props.renderGroup,\n      renderInput = props.renderInput,\n      renderOptionProp = props.renderOption,\n      renderTags = props.renderTags,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      valueProp = props.value,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"classes\", \"className\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeIcon\", \"closeText\", \"debug\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"getOptionSelected\", \"groupBy\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"]);\n  /* eslint-enable no-unused-vars */\n\n\n  var PopperComponent = disablePortal ? DisablePortal : PopperComponentProp;\n\n  var _useAutocomplete = useAutocomplete(_extends(_extends({}, props), {}, {\n    componentName: 'Autocomplete'\n  })),\n      getRootProps = _useAutocomplete.getRootProps,\n      getInputProps = _useAutocomplete.getInputProps,\n      getInputLabelProps = _useAutocomplete.getInputLabelProps,\n      getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n      getClearProps = _useAutocomplete.getClearProps,\n      getTagProps = _useAutocomplete.getTagProps,\n      getListboxProps = _useAutocomplete.getListboxProps,\n      getOptionProps = _useAutocomplete.getOptionProps,\n      value = _useAutocomplete.value,\n      dirty = _useAutocomplete.dirty,\n      id = _useAutocomplete.id,\n      popupOpen = _useAutocomplete.popupOpen,\n      focused = _useAutocomplete.focused,\n      focusedTag = _useAutocomplete.focusedTag,\n      anchorEl = _useAutocomplete.anchorEl,\n      setAnchorEl = _useAutocomplete.setAnchorEl,\n      inputValue = _useAutocomplete.inputValue,\n      groupedOptions = _useAutocomplete.groupedOptions;\n\n  var startAdornment;\n\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return _extends({\n        className: clsx(classes.tag, size === 'small' && classes.tagSizeSmall),\n        disabled: disabled\n      }, getTagProps(params));\n    };\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        return /*#__PURE__*/React.createElement(Chip, _extends({\n          label: getOptionLabel(option),\n          size: size\n        }, getCustomizedTagProps({\n          index: index\n        }), ChipProps));\n      });\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    var more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.tag,\n        key: startAdornment.length\n      }, getLimitTagsText(more)));\n    }\n  }\n\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: params.key\n    }, /*#__PURE__*/React.createElement(ListSubheader, {\n      className: classes.groupLabel,\n      component: \"div\"\n    }, params.group), /*#__PURE__*/React.createElement(\"ul\", {\n      className: classes.groupUl\n    }, params.children));\n  };\n\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n  var renderOption = renderOptionProp || getOptionLabel;\n\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return /*#__PURE__*/React.createElement(\"li\", _extends({}, optionProps, {\n      className: classes.option\n    }), renderOption(option, {\n      selected: optionProps['aria-selected'],\n      inputValue: inputValue\n    }));\n  };\n\n  var hasClearIcon = !disableClearable && !disabled;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    className: clsx(classes.root, className, focused && classes.focused, fullWidth && classes.fullWidth, hasClearIcon && classes.hasClearIcon, hasPopupIcon && classes.hasPopupIcon)\n  }, getRootProps(other)), renderInput({\n    id: id,\n    disabled: disabled,\n    fullWidth: true,\n    size: size === 'small' ? 'small' : undefined,\n    InputLabelProps: getInputLabelProps(),\n    InputProps: {\n      ref: setAnchorEl,\n      className: classes.inputRoot,\n      startAdornment: startAdornment,\n      endAdornment: /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.endAdornment\n      }, hasClearIcon ? /*#__PURE__*/React.createElement(IconButton, _extends({}, getClearProps(), {\n        \"aria-label\": clearText,\n        title: clearText,\n        className: clsx(classes.clearIndicator, dirty && classes.clearIndicatorDirty)\n      }), closeIcon) : null, hasPopupIcon ? /*#__PURE__*/React.createElement(IconButton, _extends({}, getPopupIndicatorProps(), {\n        disabled: disabled,\n        \"aria-label\": popupOpen ? closeText : openText,\n        title: popupOpen ? closeText : openText,\n        className: clsx(classes.popupIndicator, popupOpen && classes.popupIndicatorOpen)\n      }), popupIcon) : null)\n    },\n    inputProps: _extends({\n      className: clsx(classes.input, focusedTag === -1 && classes.inputFocused),\n      disabled: disabled\n    }, getInputProps())\n  })), popupOpen && anchorEl ? /*#__PURE__*/React.createElement(PopperComponent, {\n    className: clsx(classes.popper, disablePortal && classes.popperDisablePortal),\n    style: {\n      width: anchorEl ? anchorEl.clientWidth : null\n    },\n    role: \"presentation\",\n    anchorEl: anchorEl,\n    open: true\n  }, /*#__PURE__*/React.createElement(PaperComponent, {\n    className: classes.paper\n  }, loading && groupedOptions.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.loading\n  }, loadingText) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noOptions\n  }, noOptionsText) : null, groupedOptions.length > 0 ? /*#__PURE__*/React.createElement(ListboxComponent, _extends({\n    className: classes.listbox\n  }, getListboxProps(), ListboxProps), groupedOptions.map(function (option, index) {\n    if (groupBy) {\n      return renderGroup({\n        key: option.key,\n        group: option.group,\n        children: option.options.map(function (option2, index2) {\n          return renderListOption(option2, option.index + index2);\n        })\n      });\n    }\n\n    return renderListOption(option, index);\n  })) : null)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the input's text will be cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume his search.\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default close icon.\n   */\n  closeIcon: PropTypes.node,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input is filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.any, PropTypes.array]),\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the input will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * @param {T} option\n   * @returns {string}\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * Used to determine if an option is selected, considering the current value.\n   * Uses strict equality by default.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  getOptionSelected: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   */\n  limitTags: PropTypes.number,\n\n  /**\n   * The component used to render the listbox.\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T} value The new value of the component.\n   * @param {string} reason One of \"create-option\", \"select-option\", \"remove-option\", \"blur\" or \"clear\".\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"select-option\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text will be selected on focus.\n   * It helps the user clear the selected value.\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the autocomplete.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `getOptionSelected` prop.\n   */\n  value: PropTypes.oneOfType([PropTypes.any, PropTypes.array])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAutocomplete'\n})(Autocomplete);"],"sourceRoot":""}