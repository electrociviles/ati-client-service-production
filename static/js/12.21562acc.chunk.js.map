{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@material-ui/lab/esm/TabContext/TabContext.js","../node_modules/@material-ui/lab/esm/TabList/TabList.js","../node_modules/@material-ui/lab/esm/TabPanel/TabPanel.js","views/Roles/WebPermission.js","views/Roles/MobilePermission.js","views/Roles/AssignRole.js","../node_modules/@material-ui/core/esm/Container/Container.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/Switch/Switch.js"],"names":["createSvgIcon","React","d","Context","TabContext","props","children","value","idPrefix","_React$useState","id","setId","concat","Math","round","random","useUniquePrefix","context","Provider","useTabContext","getPanelId","getTabId","TabList","ref","childrenProp","other","_objectWithoutProperties","TypeError","map","child","Tabs","_extends","TabPanel","className","classes","tabId","clsx","root","hidden","role","withStyles","theme","padding","spacing","name","useStyles","makeStyles","flexGrow","height","minWidth","checkbox","width","input","display","valueContainer","flexWrap","flex","alignItems","overflow","margin","marginTop","chip","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","divider","paper","color","text","secondary","button","fab","float","extendedIcon","marginRight","formControl","WebPermission","useState","pages","setPages","roles","setRoles","saved","values","setValues","useEffect","getRoles","then","response","prop","listMenu","getMenu","menus","onChangeMenu","idpage","indexParent","indexChild","event","console","log","target","checked","status","idrole","updateMenuRole","_","aux","push","length","i","splice","Container","Typography","Paper","onSubmit","e","preventDefault","roleName","Grid","container","direction","item","xs","TextField","fullWidth","select","textField","variant","label","onChange","option","MenuItem","key","_id","Table","TableBody","page","index","TableRow","TableCell","title","TableHead","Switch","includes","edge","subPage","indexSubPage","MobilePermission","AssingRole","setValue","newValue","aria-label","Tab","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","capitalize","String","_defineProperty","marginLeft","boxSizing","paddingLeft","paddingRight","breakpoints","up","Object","keys","reduce","acc","breakpoint","maxWidthXs","max","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","tablelvl2","Tablelvl2Context","_props$color","_props$edge","_props$size","size","icon","thumb","edgeStart","edgeEnd","SwitchBase","checkedIcon","switchBase","disabled","track","flexShrink","zIndex","verticalAlign","colorAdjust","top","transition","transitions","create","duration","shortest","transform","opacity","colorPrimary","primary","main","fade","action","hoverOpacity","common","black","white","colorSecondary","sizeSmall","boxShadow","shadows","borderRadius"],"mappings":"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","file":"static/js/12.21562acc.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\n\nvar Context = React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\n\nfunction useUniquePrefix() {\n  var _React$useState = React.useState(null),\n      id = _React$useState[0],\n      setId = _React$useState[1];\n\n  React.useEffect(function () {\n    setId(\"mui-p-\".concat(Math.round(Math.random() * 1e5)));\n  }, []);\n  return id;\n}\n\nexport default function TabContext(props) {\n  var children = props.children,\n      value = props.value;\n  var idPrefix = useUniquePrefix();\n  var context = React.useMemo(function () {\n    return {\n      idPrefix: idPrefix,\n      value: value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: context\n  }, children);\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\n/**\n * @returns {unknown}\n */\n\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  var idPrefix = context.idPrefix;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return \"\".concat(context.idPrefix, \"-P-\").concat(value);\n}\nexport function getTabId(context, value) {\n  var idPrefix = context.idPrefix;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return \"\".concat(context.idPrefix, \"-T-\").concat(value);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport { useTabContext, getTabId, getPanelId } from '../TabContext';\nvar TabList = /*#__PURE__*/React.forwardRef(function TabList(props, ref) {\n  var childrenProp = props.children,\n      other = _objectWithoutProperties(props, [\"children\"]);\n\n  var context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  var children = React.Children.map(childrenProp, function (child) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      // SOMEDAY: `Tabs` will set those themselves\n      'aria-controls': getPanelId(context, child.props.value),\n      id: getTabId(context, child.props.value)\n    });\n  });\n  return /*#__PURE__*/React.createElement(Tabs, _extends({}, other, {\n    ref: ref,\n    value: context.value\n  }), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? TabList.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element)\n} : void 0;\nexport default TabList;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport { getPanelId, getTabId, useTabContext } from '../TabContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      padding: theme.spacing(3)\n    }\n  };\n};\nvar TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(props, ref) {\n  var children = props.children,\n      className = props.className,\n      classes = props.classes,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"className\", \"classes\", \"value\"]);\n\n  var context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  var id = getPanelId(context, value);\n  var tabId = getTabId(context, value);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\"\n  }, other), value === context.value && children);\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTabPanel'\n})(TabPanel);","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport clsx from 'clsx';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Swal from 'sweetalert2'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { getRoles, getMenu, updateMenuRole } from '../../api/api';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250,\r\n        minWidth: 290\r\n    },\r\n    checkbox: {\r\n        width: 10\r\n    },\r\n    input: {\r\n        display: \"flex\",\r\n        padding: 0,\r\n        height: \"auto\"\r\n    },\r\n    valueContainer: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        overflow: \"hidden\"\r\n    },\r\n    margin: {\r\n        marginTop: 10\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5, 0.25)\r\n    },\r\n    chipFocused: {\r\n        backgroundColor: emphasize(\r\n            theme.palette.type === \"light\"\r\n                ? theme.palette.grey[300]\r\n                : theme.palette.grey[700],\r\n            0.08\r\n        )\r\n    },\r\n    noOptionsMessage: {\r\n        padding: theme.spacing(1, 2)\r\n    },\r\n    singleValue: {\r\n        fontSize: 16\r\n    },\r\n    placeholder: {\r\n        position: \"absolute\",\r\n        left: 2,\r\n        bottom: 6,\r\n        fontSize: 16\r\n    },\r\n\r\n    divider: {\r\n        height: theme.spacing(2)\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    button:\r\n    {\r\n        margin: theme.spacing(1),\r\n    },\r\n    fab:\r\n    {\r\n        marginTop: -2,\r\n        float: \"right\"\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst WebPermission = () => {\r\n\r\n    const [pages, setPages] = useState([]);\r\n    const [roles, setRoles] = useState([]);\r\n    const classes = useStyles();\r\n    const [values, setValues] = useState({\r\n        role: '',\r\n        saved: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        getRoles().then(response => {\r\n            setRoles(response.roles);\r\n        });\r\n    }, []);\r\n\r\n    const inputChange = prop => event => {\r\n        console.log('event.target.value => ', event.target.value);\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        listMenu();\r\n    }\r\n\r\n    const listMenu = () => {\r\n        getMenu({ type: \"web\" }).then(response => {\r\n            setPages(response.menus.pages);\r\n        });\r\n    }\r\n\r\n    const onChangeMenu = (idpage, indexParent, indexChild) => event => {\r\n        // console.log('onChnageMenu')\r\n        console.log('idpage', idpage)\r\n        console.log('checked', event.target.checked)\r\n        console.log('role', values.role)\r\n        let status = event.target.checked\r\n\r\n        const input = {\r\n            idpage,\r\n            idrole: values.role,\r\n            status: status\r\n        }\r\n\r\n\r\n        updateMenuRole(input).then(_ => {\r\n            let aux = pages\r\n            if (indexChild >= 0) {\r\n                if (status) {\r\n                    aux[indexParent].children[indexChild].roles.push(values.role)\r\n                }\r\n                else {\r\n                    console.log('length', aux[indexParent].children[indexChild].roles.length)\r\n                    for (let i = 0; i < aux[indexParent].children[indexChild].roles.length; i++) {\r\n\r\n                        console.log('role01', aux[indexParent].children[indexChild].roles[i])\r\n                        console.log('role02', values.role)\r\n                        if (aux[indexParent].children[indexChild].roles[i] === values.role)\r\n                            aux[indexParent].children[indexChild].roles.splice(i, 1)\r\n                    }\r\n                }\r\n\r\n            }\r\n            else {\r\n                console.log(\"index02\", indexParent)\r\n                console.log(\"status\", status)\r\n                if (status) {\r\n                    aux[indexParent].roles.push(values.role)\r\n                }\r\n                else {\r\n                    aux[indexParent].roles.splice(indexParent, 1)\r\n                }\r\n            }\r\n\r\n            setPages([...aux])\r\n        });\r\n\r\n    }\r\n\r\n\r\n    const onSubmitRole = e => {\r\n\r\n        const input = {\r\n            name: values.roleName,\r\n            status: true\r\n        }\r\n    }\r\n\r\n    const [value, setValue] = React.useState('1');\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <Typography><b>Permisos aplicación web</b></Typography>\r\n                <Paper className={classes.paper}>\r\n                    <form onSubmit={e => {\r\n                        e.preventDefault()\r\n                        onSubmitRole()\r\n                    }} >\r\n                        <Grid container spacing={1} direction=\"column\" >\r\n                            <Grid item xs={6} >\r\n                                <TextField\r\n                                    fullWidth\r\n                                    select\r\n                                    className={clsx(classes.margin, classes.textField)}\r\n                                    variant=\"outlined\"\r\n                                    label=\"Rol\"\r\n                                    value={values.role}\r\n                                    onChange={inputChange('role')}>\r\n                                    {\r\n                                        roles.map(option => (\r\n                                            <MenuItem key={option._id} value={option._id} >\r\n                                                {option.name}\r\n                                            </MenuItem>))\r\n\r\n                                    }\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n\r\n                <Grid item xs={12} >\r\n                    <Paper className={classes.paper}>\r\n                        {\r\n                            <Table>\r\n\r\n                                <TableBody>\r\n                                    {\r\n                                        pages.map(function (page, index) {\r\n\r\n                                            if (page.children.length <= 0) {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell>\r\n                                                            <fieldset>\r\n                                                                <legend> <Typography> {page.title} </Typography></legend>\r\n                                                                <Table>\r\n                                                                    <TableHead>\r\n                                                                        <TableRow>\r\n                                                                            <TableCell>{page.title}</TableCell>\r\n                                                                            <TableCell className={classes.checkbox}><Switch checked={page.roles.includes(values.role) ? true : false} edge=\"end\" onChange={onChangeMenu(page._id, index, -1)} /></TableCell>\r\n                                                                        </TableRow>\r\n                                                                    </TableHead>\r\n                                                                </Table>\r\n                                                            </fieldset>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            }\r\n                                            else {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell>\r\n                                                            <fieldset>\r\n                                                                <legend> <Typography>{page.title} </Typography></legend>\r\n                                                                <Table>\r\n                                                                    <TableHead>\r\n                                                                        <TableRow>\r\n                                                                            <TableCell>{page.title}</TableCell>\r\n                                                                            <TableCell><Switch edge=\"end\" checked={page.roles.includes(values.role) ? true : false} onChange={onChangeMenu(page._id, index, -1)} /></TableCell>\r\n                                                                        </TableRow>\r\n                                                                    </TableHead>\r\n                                                                    <TableBody>\r\n                                                                        {\r\n                                                                            page.children.map(function (subPage, indexSubPage) {\r\n                                                                                return (\r\n                                                                                    <TableRow key={indexSubPage}>\r\n                                                                                        <TableCell>{subPage.title}</TableCell>\r\n                                                                                        <TableCell className={classes.checkbox} ><Switch edge=\"end\" checked={subPage.roles.includes(values.role) ? true : false} onChange={onChangeMenu(subPage._id, index, indexSubPage)} /></TableCell>\r\n                                                                                    </TableRow>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </TableBody>\r\n                                                                </Table>\r\n                                                            </fieldset>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n\r\n\r\n                                                )\r\n\r\n                                            }\r\n\r\n                                        })\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default WebPermission","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport clsx from 'clsx';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Swal from 'sweetalert2'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { getRoles, getMenu, updateMenuRole } from '../../api/api';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250,\r\n        minWidth: 290\r\n    },\r\n    checkbox: {\r\n        width: 10\r\n    },\r\n    input: {\r\n        display: \"flex\",\r\n        padding: 0,\r\n        height: \"auto\"\r\n    },\r\n    valueContainer: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        overflow: \"hidden\"\r\n    },\r\n    margin: {\r\n        marginTop: 10\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5, 0.25)\r\n    },\r\n    chipFocused: {\r\n        backgroundColor: emphasize(\r\n            theme.palette.type === \"light\"\r\n                ? theme.palette.grey[300]\r\n                : theme.palette.grey[700],\r\n            0.08\r\n        )\r\n    },\r\n    noOptionsMessage: {\r\n        padding: theme.spacing(1, 2)\r\n    },\r\n    singleValue: {\r\n        fontSize: 16\r\n    },\r\n    placeholder: {\r\n        position: \"absolute\",\r\n        left: 2,\r\n        bottom: 6,\r\n        fontSize: 16\r\n    },\r\n\r\n    divider: {\r\n        height: theme.spacing(2)\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    button:\r\n    {\r\n        margin: theme.spacing(1),\r\n    },\r\n    fab:\r\n    {\r\n        marginTop: -2,\r\n        float: \"right\"\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst MobilePermission = () => {\r\n\r\n    const [pages, setPages] = useState([]);\r\n    const [roles, setRoles] = useState([]);\r\n    const classes = useStyles();\r\n    const [values, setValues] = useState({\r\n        role: '',\r\n        saved: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        getRoles().then(response => {\r\n            setRoles(response.roles);\r\n        });\r\n    }, []);\r\n\r\n    const inputChange = prop => event => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        listMenu();\r\n    }\r\n\r\n    const listMenu = () => {\r\n        getMenu({ type: \"mobile\" }).then(response => {\r\n            setPages(response.menus.pages);\r\n        });\r\n    }\r\n\r\n    const onChangeMenu = (idpage, indexParent, indexChild) => event => {\r\n\r\n        let status = event.target.checked\r\n        const input = {\r\n            idpage,\r\n            idrole: values.role,\r\n            status: status\r\n        }\r\n\r\n        updateMenuRole(input).then(_ => {\r\n            let aux = pages\r\n            if (indexChild >= 0) {\r\n                if (status) {\r\n                    aux[indexParent].children[indexChild].roles.push(values.role)\r\n                }\r\n                else {\r\n                    console.log('length', aux[indexParent].children[indexChild].roles.length)\r\n                    for (let i = 0; i < aux[indexParent].children[indexChild].roles.length; i++) {\r\n\r\n                        console.log('role01', aux[indexParent].children[indexChild].roles[i])\r\n                        console.log('role02', values.role)\r\n                        if (aux[indexParent].children[indexChild].roles[i] === values.role)\r\n                            aux[indexParent].children[indexChild].roles.splice(i, 1)\r\n                    }\r\n                }\r\n\r\n            }\r\n            else {\r\n                console.log(\"index02\", indexParent)\r\n                console.log(\"status\", status)\r\n                if (status) {\r\n                    aux[indexParent].roles.push(values.role)\r\n                }\r\n                else {\r\n                    aux[indexParent].roles.splice(indexParent, 1)\r\n                }\r\n            }\r\n\r\n            setPages([...aux])\r\n        });\r\n\r\n    }\r\n\r\n\r\n    const onSubmitRole = e => {\r\n\r\n        const input = {\r\n            name: values.roleName,\r\n            status: true\r\n        }\r\n    }\r\n\r\n    const [value, setValue] = React.useState('1');\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <Typography> <b>Permisos aplicación movil</b></Typography>\r\n                <Paper className={classes.paper}>\r\n                    <form onSubmit={e => {\r\n                        e.preventDefault()\r\n                        onSubmitRole()\r\n                    }} >\r\n                        <Grid container spacing={1} direction=\"column\" >\r\n                            <Grid item xs={6} >\r\n                                <TextField\r\n                                    fullWidth\r\n                                    select\r\n                                    className={clsx(classes.margin, classes.textField)}\r\n                                    variant=\"outlined\"\r\n                                    label=\"Rol\"\r\n                                    value={values.role}\r\n                                    onChange={inputChange('role')}>\r\n                                    {\r\n                                        roles.map(option => (\r\n                                            <MenuItem key={option._id} value={option._id} >\r\n                                                {option.name}\r\n                                            </MenuItem>))\r\n\r\n                                    }\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n\r\n                <Grid item xs={12} >\r\n                    <Paper className={classes.paper}>\r\n                        {\r\n                            <Table>\r\n\r\n                                <TableBody>\r\n                                    {\r\n                                        pages.map(function (page, index) {\r\n\r\n                                            if (page.children.length <= 0) {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell>\r\n                                                            <fieldset>\r\n                                                                <legend> <Typography> {page.title} </Typography></legend>\r\n                                                                <Table>\r\n                                                                    <TableHead>\r\n                                                                        <TableRow>\r\n                                                                            <TableCell>{page.title}</TableCell>\r\n                                                                            <TableCell className={classes.checkbox}><Switch checked={page.roles.includes(values.role) ? true : false} edge=\"end\" onChange={onChangeMenu(page._id, index, -1)} /></TableCell>\r\n                                                                        </TableRow>\r\n                                                                    </TableHead>\r\n                                                                </Table>\r\n                                                            </fieldset>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            }\r\n                                            else {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell>\r\n                                                            <fieldset>\r\n                                                                <legend> <Typography>{page.title} </Typography></legend>\r\n                                                                <Table>\r\n                                                                    <TableHead>\r\n                                                                        <TableRow>\r\n                                                                            <TableCell>{page.title}</TableCell>\r\n                                                                            <TableCell><Switch edge=\"end\" checked={page.roles.includes(values.role) ? true : false} onChange={onChangeMenu(page._id, index, -1)} /></TableCell>\r\n                                                                        </TableRow>\r\n                                                                    </TableHead>\r\n                                                                    <TableBody>\r\n                                                                        {\r\n                                                                            page.children.map(function (subPage, indexSubPage) {\r\n                                                                                return (\r\n                                                                                    <TableRow key={indexSubPage}>\r\n                                                                                        <TableCell>{subPage.title}</TableCell>\r\n                                                                                        <TableCell className={classes.checkbox} ><Switch edge=\"end\" checked={subPage.roles.includes(values.role) ? true : false} onChange={onChangeMenu(subPage._id, index, indexSubPage)} /></TableCell>\r\n                                                                                    </TableRow>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </TableBody>\r\n                                                                </Table>\r\n                                                            </fieldset>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n\r\n\r\n                                                )\r\n\r\n                                            }\r\n\r\n                                        })\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MobilePermission","import React, { Fragment } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabList from '@material-ui/lab/TabList';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport WebPermission from './WebPermission';\r\nimport MobilePermission from \"./MobilePermission\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250,\r\n        minWidth: 290\r\n    },\r\n    checkbox: {\r\n        width: 10\r\n    },\r\n    input: {\r\n        display: \"flex\",\r\n        padding: 0,\r\n        height: \"auto\"\r\n    },\r\n    valueContainer: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        overflow: \"hidden\"\r\n    },\r\n    margin: {\r\n        marginTop: 10\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5, 0.25)\r\n    },\r\n    chipFocused: {\r\n        backgroundColor: emphasize(\r\n            theme.palette.type === \"light\"\r\n                ? theme.palette.grey[300]\r\n                : theme.palette.grey[700],\r\n            0.08\r\n        )\r\n    },\r\n    noOptionsMessage: {\r\n        padding: theme.spacing(1, 2)\r\n    },\r\n    singleValue: {\r\n        fontSize: 16\r\n    },\r\n    placeholder: {\r\n        position: \"absolute\",\r\n        left: 2,\r\n        bottom: 6,\r\n        fontSize: 16\r\n    },\r\n\r\n    divider: {\r\n        height: theme.spacing(2)\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    button:\r\n    {\r\n        margin: theme.spacing(1),\r\n    },\r\n    fab:\r\n    {\r\n        marginTop: -2,\r\n        float: \"right\"\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst AssingRole = () => {\r\n\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('1');\r\n\r\n    const handleChange = (_, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.root}>\r\n                <TabContext value={value}>\r\n                    <TabList onChange={handleChange} aria-label=\"simple tabs example\">\r\n                        <Tab label=\"Permisos aplicación web\" value=\"1\" />\r\n                        <Tab label=\"Permisos aplicación movil\" value=\"2\" />\r\n                        <Tab label=\"Notificaciones\" value=\"3\" />\r\n                    </TabList>\r\n                    <TabPanel value=\"1\">\r\n                        <WebPermission />\r\n                    </TabPanel>\r\n                    <TabPanel value=\"2\">\r\n                        <MobilePermission />\r\n                    </TabPanel>\r\n                    <TabPanel value=\"3\">Item Three</TabPanel>\r\n                </TabContext>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AssingRole","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);"],"sourceRoot":""}