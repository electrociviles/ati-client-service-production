{"version":3,"sources":["mutations/Product/products.js","views/Product/CreateProduct.js","views/Product/EditProduct.js","views/Product/Products.js","../node_modules/@material-ui/icons/Cancel.js","../node_modules/@material-ui/icons/Edit.js","queries/product.query.js","../node_modules/@material-ui/icons/Restore.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/Alert/Alert.js","views/Response/SimpleAlert.js","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js"],"names":["Create_Product","gql","Update_Product","Delete_Product","Restore_Product","useStyles","makeStyles","theme","root","flexGrow","height","minWidth","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","chip","margin","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","divider","paper","color","text","secondary","button","fab","marginTop","float","extendedIcon","marginRight","formControl","CreateProduct","props","React","useState","file","setFile","useMutation","createProduct","classes","name","price","quantity","unitOfmeasurement","product","values","setValues","inputChange","prop","event","target","value","Container","maxWidth","Paper","className","encType","onSubmit","e","preventDefault","parseFloat","variables","then","response","console","log","data","modal","onCloseCreateProduct","Swal","fire","icon","title","showConfirmButton","timer","onSubmitProduct","Grid","container","item","xs","TextField","fullWidth","autoComplete","id","clsx","textField","variant","label","onChange","sm","open","filesLimit","dropzoneText","acceptedFiles","Button","EditProduct","updateProduct","onCloseEditProduct","createMuiTheme","esES","fragment","width","maxHeight","iconWidth","Products","page","setPage","rowsPerPage","setRowsPerPage","deleteProduct","restoreProduct","products","setProducts","openCreateProduct","setOpenCreateProduct","openRestoreProduct","setOpenRestoreProduct","openDeleteProduct","setOpenDeleteProduct","openEditProduct","setOpenEditProduct","setProductSelected","totalProducts","setTotalProducts","useEffect","getProducts","start","end","useLazyQuery","Products_Paginate","fetchPolicy","onCompleted","onOpenRestoreProduct","onOpenEditProduct","onCloseDeleteProduct","onCloseRestoreProduct","ThemeProvider","Fab","onClick","size","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","colSpan","TableBody","map","row","hover","role","tabIndex","key","Tooltip","placement","status","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogActions","style","cursor","DialogContentText","autoFocus","newProducts","currentProduct","index","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","Products_By_Name","createSvgIcon","defaultIconMapping","success","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","error","ErrorOutlineIcon","info","InfoOutlinedIcon","_ref","CloseIcon","Alert","ref","action","children","_props$closeText","closeText","_props$iconMapping","iconMapping","_props$role","_props$severity","severity","_props$variant","other","_objectWithoutProperties","_extends","square","elevation","concat","capitalize","message","IconButton","withStyles","getColor","darken","lighten","getBackgroundColor","typography","body2","borderRadius","shape","standardSuccess","main","standardInfo","standardWarning","standardError","outlinedSuccess","border","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeight","fontWeightMedium","filledInfo","filledWarning","filledError","opacity","marginLeft","paddingLeft","SimpleAlert","Typography","marginBottom"],"mappings":"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","file":"static/js/14.34cc42fd.chunk.js","sourcesContent":["import gql from 'graphql-tag'\n\nexport const Create_Product = gql`\n  mutation createProduct($input: ProductInput, $file: Upload) \n  {\n    createProduct(input: $input, file: $file)\n    {\n        id\n        name\n        price\n        quantity\n    }\n  }\n`\n\nexport const Update_Product = gql`\n  mutation updateProduct($input: ProductInput, $file: Upload) \n  {\n    updateProduct(input: $input, file: $file)\n    {\n      id\n      name\n    }\n  }\n`\n\nexport const Delete_Product = gql`\n  mutation deleteProduct($id:ID) {\n    deleteProduct(id: $id) \n  } \n`\n\nexport const Restore_Product = gql`\n  mutation restoreProduct($id:ID) {\n    restoreProduct(id: $id) \n  } \n`","import React, { Fragment, useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\n\nimport clsx from 'clsx';\n\n\nimport { Button } from '@material-ui/core';\nimport { DropzoneArea } from 'material-ui-dropzone'\n\n\nimport PropTypes from \"prop-types\";\nimport Select from \"react-select\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Chip from \"@material-ui/core/Chip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport Response from '../../views/Response'\nimport { Create_Product } from '../../mutations/Product/products'\nimport Swal from 'sweetalert2'\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n    minWidth: 290\n  },\n  input: {\n    display: \"flex\",\n    padding: 0,\n    height: \"auto\"\n  },\n  valueContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flex: 1,\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: theme.spacing(1, 2)\n  },\n  singleValue: {\n    fontSize: 16\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 2,\n    bottom: 6,\n    fontSize: 16\n  },\n\n  divider: {\n    height: theme.spacing(2)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n\n  },\n  button:\n  {\n    margin: theme.spacing(1),\n  },\n  fab:\n  {\n    marginTop: -2,\n    float: \"right\"\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}))\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />\n}\ninputComponent.propTypes = {\n  inputRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({\n      current: PropTypes.any.isRequired\n    })\n  ])\n}\nfunction Control(props) {\n  const {\n    children,\n    innerProps,\n    innerRef,\n    selectProps: { classes, TextFieldProps }\n  } = props;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: classes.input,\n          ref: innerRef,\n          children,\n          ...innerProps\n        }\n      }}\n      {...TextFieldProps}\n    />\n  );\n}\nfunction Option(props) {\n  return (\n    <MenuItem\n      ref={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\nfunction MultiValue(props) {\n  return (\n    <Chip\n      tabIndex={-1}\n      label={props.children}\n      className={clsx(props.selectProps.classes.chip, {\n        [props.selectProps.classes.chipFocused]: props.isFocused\n      })}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={<CancelIcon {...props.removeProps} />}\n    />\n  );\n}\nconst components = {\n  Control,\n  MultiValue,\n  Option\n}\n\nconst CreateProduct = props => {\n  const [dataResponse, setDataResponse] = React.useState([])\n  //const [disabled, setDisabled] = React.useState(false)\n  const [file, setFile] = React.useState({})\n\n  const [createProduct] = useMutation(Create_Product)\n  const classes = useStyles()\n\n  const validarForm = () => {\n    // if( values.password === \"\"  /*|| values.password_repeat == '' || values.password !== values.password_repeat*/ )\n    //   setDisabled( false )\n    // else\n    //   setDisabled( true )\n  }\n\n  const [values, setValues] = useState({\n    name: '',\n    price: '',\n    quantity: '',\n    unitOfmeasurement: '',\n    product: ''\n  })\n\n\n  const inputChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value })\n    validarForm()\n  }\n\n  const handlePicture = file => {\n    setFile(file[0])\n  }\n\n  const onSubmitProduct = e => {\n    const input =\n    {\n      name: values.name,\n      price: parseFloat(values.price),\n      quantity: parseFloat(values.quantity)\n    }\n\n    createProduct({\n      variables: { input: input, file: file }\n    }).then(response => {\n      console.log(response)\n      console.log(props)\n\n      if (response.data.createProduct) {\n\n        if (props.modal) {\n          props.onCloseCreateProduct()\n          Swal.fire({\n            icon: 'success',\n            title: `El producto fue creado exitosamente`,\n            showConfirmButton: false,\n            timer: 1500\n          })\n        }\n      }\n    })\n\n  }\n\n\n  return (\n    <Fragment>\n\n      <Container maxWidth=\"md\">\n\n        <Paper className={classes.paper}>\n          <form encType={'multipart/form-data'}\n            onSubmit={e => {\n              e.preventDefault()\n              onSubmitProduct()\n            }} >\n            <Grid container spacing={3}>\n              <Grid item xs={6}>\n                <TextField fullWidth\n                  autoComplete='off'\n                  id=\"outlined-simple-start-adornment\"\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Nombre\"\n                  value={values.name}\n                  onChange={inputChange('name')} />\n              </Grid>\n\n              <Grid item xs={6} >\n                <TextField fullWidth\n                  autoComplete='off'\n                  id=\"outlined-simple-start-adornment\"\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Precio\"\n                  value={values.price}\n                  onChange={inputChange('price')} />\n              </Grid>\n\n\n\n\n              <Grid item xs={12} sm={6}>\n                <TextField fullWidth\n                  autoComplete='off'\n                  id=\"outlined-simple-start-adornment\"\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Cantidad\"\n                  value={values.quantity}\n                  onChange={inputChange('quantity')} />\n              </Grid>\n\n\n\n\n              <Grid item xs={12} sm={12}>\n                <DropzoneArea\n                  open={true}\n                  filesLimit={1}\n                  dropzoneText=\"Arrastre y suelte un archivo de imagen aquí o haga clic\"\n                  acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\n                  onChange={handlePicture} />\n\n              </Grid>\n\n\n              <Grid item xs={2} sm={3}>\n                <Button /*disabled={disabled} */ type=\"submit\" variant=\"contained\" color='primary'>Crear</Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n\n      </Container>\n    </Fragment>\n  )\n}\n\nexport default CreateProduct","import React, { Fragment, useState } from 'react'\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\n\nimport clsx from 'clsx';\n\n\n\nimport { Button } from '@material-ui/core';\nimport { DropzoneArea } from 'material-ui-dropzone'\n\n\nimport PropTypes from \"prop-types\";\nimport Select from \"react-select\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Chip from \"@material-ui/core/Chip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { Update_Product } from '../../mutations/Product/products'\nimport Swal from 'sweetalert2'\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n    minWidth: 290\n  },\n  input: {\n    display: \"flex\",\n    padding: 0,\n    height: \"auto\"\n  },\n  valueContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flex: 1,\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: theme.spacing(1, 2)\n  },\n  singleValue: {\n    fontSize: 16\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 2,\n    bottom: 6,\n    fontSize: 16\n  },\n\n  divider: {\n    height: theme.spacing(2)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n\n  },\n  button:\n  {\n    margin: theme.spacing(1),\n  },\n  fab:\n  {\n    marginTop: -2,\n    float: \"right\"\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}))\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />\n}\ninputComponent.propTypes = {\n  inputRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({\n      current: PropTypes.any.isRequired\n    })\n  ])\n}\nfunction Control(props) {\n  const {\n    children,\n    innerProps,\n    innerRef,\n    selectProps: { classes, TextFieldProps }\n  } = props;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: classes.input,\n          ref: innerRef,\n          children,\n          ...innerProps\n        }\n      }}\n      {...TextFieldProps}\n    />\n  );\n}\nfunction Option(props) {\n  return (\n    <MenuItem\n      ref={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\nfunction MultiValue(props) {\n  return (\n    <Chip\n      tabIndex={-1}\n      label={props.children}\n      className={clsx(props.selectProps.classes.chip, {\n        [props.selectProps.classes.chipFocused]: props.isFocused\n      })}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={<CancelIcon {...props.removeProps} />}\n    />\n  );\n}\n\nconst EditProduct = props => {\n\n  //const [disabled, setDisabled] = React.useState(false)\n  const [file, setFile] = React.useState({})\n\n  const [updateProduct] = useMutation(Update_Product)\n  const classes = useStyles()\n\n  const validarForm = () => {\n    // if( values.password === \"\"  /*|| values.password_repeat == '' || values.password !== values.password_repeat*/ )\n    //   setDisabled( false )\n    // else\n    //   setDisabled( true )\n  }\n  console.log(props.product)\n\n  const [values, setValues] = useState({\n    name: props.product.name,\n    price: props.product.price,\n    quantity: props.product.quantity,\n    product: ''\n  })\n\n\n\n  const inputChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value })\n    validarForm()\n  }\n\n  const handlePicture = file => {\n    setFile(file[0])\n  }\n\n  const onSubmitProduct = e => {\n    const input =\n    {\n      id: props.product.id,\n      name: values.name,\n      price: parseFloat(values.price),\n      quantity: parseFloat(values.quantity)\n    }\n\n    updateProduct({\n      variables: { input: input, file: file }\n    }).then(response => {\n      console.log(response)\n      console.log(props)\n\n      if (response.data.updateProduct) {\n\n        if (props.modal) {\n          props.onCloseEditProduct()\n          Swal.fire({\n            icon: 'success',\n            title: `El producto fue actualizado exitosamente`,\n            showConfirmButton: false,\n            timer: 1500\n          })\n        }\n      }\n    })\n  }\n\n\n  return (\n    <Fragment>\n\n      <Container maxWidth=\"md\">\n\n        <Paper className={classes.paper}>\n          <form encType={'multipart/form-data'}\n            onSubmit={e => {\n              e.preventDefault()\n              onSubmitProduct()\n            }} >\n            <Grid container spacing={3}>\n              <Grid item xs={6}>\n                <TextField fullWidth\n                  autoComplete='off'\n                  id=\"outlined-simple-start-adornment\"\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Nombre\"\n                  value={values.name}\n                  onChange={inputChange('name')} />\n              </Grid>\n\n              <Grid item xs={6} >\n                <TextField fullWidth\n                  autoComplete='off'\n                  id=\"outlined-simple-start-adornment\"\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Precio\"\n                  value={values.price}\n                  onChange={inputChange('price')} />\n              </Grid>\n\n\n\n\n              <Grid item xs={12} sm={6}>\n                <TextField fullWidth\n                  autoComplete='off'\n                  id=\"outlined-simple-start-adornment\"\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Cantidad\"\n                  value={values.quantity}\n                  onChange={inputChange('quantity')} />\n              </Grid>\n\n\n\n\n\n              <Grid item xs={12} sm={12}>\n                <DropzoneArea\n                  open={true}\n                  filesLimit={1}\n                  dropzoneText=\"Arrastre y suelte un archivo de imagen aquí o haga clic\"\n                  acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\n                  onChange={handlePicture} />\n\n              </Grid>\n\n\n              <Grid item xs={2} sm={3}>\n                <Button /*disabled={disabled} */ type=\"submit\" variant=\"contained\" color='primary'>Actualizar</Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n\n      </Container>\n    </Fragment>\n  )\n}\n\nexport default EditProduct","import React, { useState, useEffect, Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Query } from 'react-apollo'\nimport { Products_Paginate } from '../../queries/product.query'\nimport { Delete_Product, Restore_Product } from '../../mutations/Product/products'\nimport { useMutation } from \"@apollo/react-hooks\"\nimport { useLazyQuery } from '@apollo/react-hooks';\n\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport { esES } from '@material-ui/core/locale';\nimport Button from '@material-ui/core/Button';\n\nimport CreateProduct from './CreateProduct';\nimport EditProduct from './EditProduct';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nconst theme = createMuiTheme({}, esES);\n\nconst useStyles = makeStyles({\n    fragment: {\n        padding: 40\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        width: '100%',\n        margin: theme.spacing(1),\n    },\n    container: {\n        maxHeight: 440,\n    },\n    iconWidth: {\n        width: 10\n    },\n});\n\nexport default function Products() {\n\n    const classes = useStyles();\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n\n    const [deleteProduct] = useMutation(Delete_Product)\n    const [restoreProduct] = useMutation(Restore_Product)\n\n\n    const [products, setProducts] = useState([])\n\n    const [openCreateProduct, setOpenCreateProduct] = React.useState(false);\n    const [openRestoreProduct, setOpenRestoreProduct] = useState(false);\n    const [openDeleteProduct, setOpenDeleteProduct] = useState(false);\n    const [openEditProduct, setOpenEditProduct] = useState(false);\n    const [product, setProductSelected] = useState({})\n    const [reload, setReload] = useState(false)\n    const [totalProducts, setTotalProducts] = useState(0)\n\n    useEffect(() => {\n        getProducts({ variables: { start: page, end: rowsPerPage } })\n    }, [])\n    const [getProducts, { data }] = useLazyQuery(Products_Paginate, {\n        fetchPolicy: 'no-cache',\n        onCompleted: () => {\n            setProducts(data.getProducts)\n            setTotalProducts(data.totalProducts)\n        }\n    })\n\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n        getProducts({ variables: { start: newPage, end: rowsPerPage } })\n\n    };\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n        getProducts({ variables: { start: 0, end: event.target.value } })\n    };\n\n    //Opens modals\n    const onOpenDeleteProduct = id => () => {\n        setProductSelected(id)\n        setOpenDeleteProduct(true)\n    };\n    const onOpenRestoreProduct = id => () => {\n        setProductSelected(id);\n        setOpenRestoreProduct(true)\n    };\n    const onOpenEditProduct = id => () => {\n        setProductSelected(id);\n        setOpenEditProduct(true);\n    };\n    const onCreateProduct = () => {\n        setOpenCreateProduct(true)\n    };\n    //Close modals\n    const onCloseDeleteProduct = () => {\n        setOpenDeleteProduct(false)\n    };\n\n    const onCloseRestoreProduct = () => {\n        setOpenRestoreProduct(false)\n    };\n\n    const onCloseCreateProduct = () => {\n        setOpenCreateProduct(false)\n    };\n\n    const onCloseEditProduct = () => {\n        setOpenEditProduct(false)\n    };\n\n    //Actions dbs\n    const onDeleteProduct = () => {\n        setOpenDeleteProduct(false)\n\n        deleteProduct({\n            variables: { id: product.id }\n        }).then(response => {\n            const newProducts = products.map((currentProduct, index) => {\n                if (product.id !== currentProduct.id)\n                    return currentProduct\n\n                currentProduct.status = false\n                return currentProduct\n            })\n            setProducts(newProducts)\n        })\n    }\n\n    //Actions dbs\n    const onRestoreProduct = () => {\n        setOpenRestoreProduct(false)\n\n        restoreProduct({\n            variables: { id: product.id }\n        }).then(response => {\n            const newProducts = products.map((currentProduct, index) => {\n                if (product.id !== currentProduct.id)\n                    return currentProduct\n\n                currentProduct.status = true\n                return currentProduct\n            })\n            setProducts(newProducts)\n        })\n    }\n\n    return (\n        <ThemeProvider theme={theme} >\n            <Fragment >\n\n                <Paper className={classes.margin}>\n                    <Fab onClick={onCreateProduct} variant=\"extended\" size=\"small\" className={classes.margin}>\n                        <AddIcon className={classes.extendedIcon} />\n                            Nuevo producto\n                        </Fab>\n                    <TableContainer className={classes.container}>\n                        <Table stickyHeader aria-label=\"sticky table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Nombre</TableCell>\n                                    <TableCell>Precio</TableCell>\n                                    <TableCell>Cantidad</TableCell>\n                                    <TableCell colSpan={4}>Acciones</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {products.map(row => {\n                                    return (\n                                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                                            <TableCell>{row.name}</TableCell>\n                                            <TableCell>{row.price}</TableCell>\n                                            <TableCell>{row.quantity}</TableCell>\n\n                                            <TableCell className={classes.iconWidth}>\n                                                <Tooltip title=\"Editar\" placement=\"top\">\n                                                    <EditIcon className={classes.icon} onClick={onOpenEditProduct(row)} />\n                                                </Tooltip>\n                                            </TableCell>\n                                            <TableCell className={classes.iconWidth}>\n                                                <Tooltip title=\"Eliminar\" placement=\"top\">\n                                                    {\n                                                        row.status ?\n                                                            <DeleteIcon className={classes.icon} onClick={onOpenDeleteProduct(row)} />\n                                                            :\n                                                            <RestoreIcon className={classes.icon} onClick={onOpenRestoreProduct(row)} />\n                                                    }\n                                                </Tooltip>\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[10, 25, 100]}\n                        component=\"div\"\n                        count={totalProducts}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                    />\n                </Paper>\n                {/* Modal crear */}\n                <Dialog open={openCreateProduct} onClose={onOpenEditProduct} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Nuevo producto</DialogTitle>\n                    <DialogContent>\n                        <CreateProduct onCloseCreateProduct={onCloseCreateProduct} modal={true} />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={onCloseCreateProduct} color=\"primary\">\n                            Cerrar\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                {/* Modal editar */}\n                <Dialog open={openEditProduct} onClose={onCloseEditProduct} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Nuevo producto</DialogTitle>\n                    <DialogContent>\n                        <EditProduct onCloseEditProduct={onCloseEditProduct} product={product} modal={true} />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={onCloseEditProduct} color=\"primary\">Cerrar</Button>\n                    </DialogActions>\n                </Dialog>\n\n                {/* Modal eliminar */}\n                <Dialog\n                    open={openDeleteProduct}\n                    onClose={onCloseDeleteProduct}\n                    aria-labelledby=\"draggable-dialog-title\">\n                    <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n                        Alerta\n            </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Esta seguro de eliminar este producto?\n                </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button autoFocus onClick={onCloseDeleteProduct} color=\"primary\">\n                            NO\n            </Button>\n                        <Button onClick={onDeleteProduct} color=\"primary\">\n                            SI\n            </Button>\n                    </DialogActions>\n                </Dialog>\n\n                {/* Modal restaurar */}\n                <Dialog\n                    open={openRestoreProduct}\n                    onClose={onCloseRestoreProduct}\n                    aria-labelledby=\"draggable-dialog-title\">\n                    <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n                        Alerta\n            </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Esta seguro de recuperar este producto?\n                </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button autoFocus onClick={onCloseRestoreProduct} color=\"primary\">\n                            NO\n            </Button>\n                        <Button onClick={onRestoreProduct} color=\"primary\">\n                            SI\n            </Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        </ThemeProvider>\n    );\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import gql from 'graphql-tag'\n\n\nexport const Products_Query = gql`\n    query getProducts($start: Int, $end: Int) {\n        getProducts(start: $start, end: $end) {\n            id\n            name\n            price\n            quantity\n        }\n    }\n`\n\nexport const Products_Paginate = gql`\n    query getProducts($start: Int, $end: Int) {\n        getProducts(start: $start, end: $end) {\n            id\n            name\n            price\n            quantity\n            status\n        },\n        totalProducts\n    }\n`\nexport const Products_By_Name = gql`\n    query getProductsByName($name: String, $products: [String]) {\n        getProductsByName(name: $name, products: $products) {\n            id\n            name\n            price\n            quantity\n            status\n        }\n    }\n`","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z\"\n}), 'Restore');\n\nexports.default = _default;","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends(_extends({}, theme.typography.body2), {}, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);","import React from 'react';\nimport { Alert } from '@material-ui/lab';\n\n\n\nconst SimpleAlert = props => {\n\n\n  return (\n  <Alert severity={props.data.type}>{props.data.message}</Alert>\n      \n  );\n}\nexport default SimpleAlert","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = React.forwardRef(function DialogContentText(props, ref) {\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);"],"sourceRoot":""}