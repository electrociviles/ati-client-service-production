{"version":3,"sources":["views/Attentions/AttentionDetail.js","views/Attentions/Attentions.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","height","minWidth","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","chip","margin","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","divider","paper","color","text","secondary","button","fab","marginTop","float","extendedIcon","marginRight","formControl","AttentionDetail","props","console","log","useState","attention","setAttention","useEffect","attentionItems","classes","Card","CardHeader","title","Divider","CardContent","className","content","Table","TableBody","TableRow","TableCell","description","selected","status","Chip","label","variant","customer","name","colSpan","photos","map","photo","i","key","src","config","urlImages","url","signature","iconWidth","width","icon","DialogTitle","withStyles","closeButton","right","top","children","onClose","other","disableTypography","Typography","IconButton","aria-label","onClick","Transition","React","forwardRef","ref","Slide","direction","Person","_","listAttentions","then","response","setAttentions","attentions","setTotalAttentions","count","totalAttentions","page","setPage","rowsPerPage","setRowsPerPage","open","setOpen","openDetailAttention","setOpenDetailAttention","onCloseDeleteAttention","onDetailAttention","onOpenAttention","openAttention","_id","toast","success","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","newAttentions","currentAttention","error","catch","e","onCloseAttention","closeAttention","info","closeApu","Paper","TableHead","item","Tooltip","placement","TablePagination","rowsPerPageOptions","component","onChangePage","newPage","onChangeRowsPerPage","event","target","value","Dialog","aria-labelledby","style","cursor","id","DialogContent","DialogContentText","DialogActions","Button","autoFocus","deleteAttention","fullWidth","maxWidth","TransitionComponent"],"mappings":"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","file":"static/js/11.1d472414.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\n\nimport { Label } from 'components';\nimport Chip from '@material-ui/core/Chip';\nimport config from '../../config';\nimport './attention.css';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  CardMedia,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n    minWidth: 290\n  },\n  input: {\n    display: \"flex\",\n    padding: 0,\n    height: \"auto\"\n  },\n  valueContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flex: 1,\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: theme.spacing(1, 2)\n  },\n  singleValue: {\n    fontSize: 16\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 2,\n    bottom: 6,\n    fontSize: 16\n  },\n\n  divider: {\n    height: theme.spacing(2)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n\n  },\n  button:\n  {\n    margin: theme.spacing(1),\n  },\n  fab:\n  {\n    marginTop: -2,\n    float: \"right\"\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}))\n\nconst AttentionDetail = props => {\n\n  console.log('props', props)\n  const [attention, setAttention] = useState({});\n\n  useEffect(() => {\n    setAttention(props.attention);\n    console.log(props.attention.attentionItems);\n  }, [attention, props.attention]);\n\n\n  const classes = useStyles()\n\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <Card>\n      <CardHeader title=\"Detalle Usuario\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>DESCRIPCIÓN</TableCell>\n              <TableCell>{attention.description}</TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>ESTADO</TableCell>\n              <TableCell>\n                {\n                  attention.status === 'finished' ?\n                    <Chip label='Finalizado' variant=\"outlined\" /> :\n                    <Chip label='Activo' color=\"primary\" variant=\"outlined\" />\n                }\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell>CLIENTE</TableCell>\n              <TableCell>{attention.customer ? attention.customer.name : ''}</TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell colSpan={2}>IMAGENES ANTES DE MANTENIMIENTO</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell colSpan={2}>\n                <div className='attention-image-wrapper'>\n                  {\n                    attention.attentionItems ?\n                      attention.attentionItems[0].photos.map((photo, i) => {\n                        return (\n                          <div key={i} className='attention-image'>\n                            <img src={`${config.urlImages}${photo.url}`} />\n                          </div>);\n                      })\n                      : <div></div>\n                  }\n                </div>\n              </TableCell >\n            </TableRow>\n\n\n            <TableRow>\n              <TableCell colSpan={2}>IMAGENES DESPUES DE MANTENIMIENTO</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell colSpan={2}>\n                <div className='attention-image-wrapper'>\n                  {\n                    attention.attentionItems ?\n                      attention.attentionItems[1].photos.map((photo, i) => {\n                        return (\n                          <div key={i} className='attention-image'>\n                            <img src={`${config.urlImages}${photo.url}`} />\n                          </div>);\n                      })\n                      : <div></div>\n                  }\n                </div>\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell colSpan={2}>FIRMA Y OBSERVACIONES</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <div className='attention-image-wrapper'>\n                  <div className='attention-signature'>\n                    <img src={`${config.urlImages}${attention.signature ? attention.signature : ''}`} />\n                  </div>\n                </div>\n              </TableCell>\n              <TableCell>\n                {`${attention.description ? attention.description : ''}`}\n              </TableCell>\n            </TableRow>\n\n\n\n          </TableBody>\n        </Table >\n      </CardContent >\n\n    </Card >\n  )\n}\n\nexport default AttentionDetail","import React, { useState, useEffect, Fragment } from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport AttentionDetail from './AttentionDetail'\nimport { Button } from '@material-ui/core';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Slide from '@material-ui/core/Slide';\n\nimport Tooltip from '@material-ui/core/Tooltip'\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { deleteAttention, openAttention, closeAttention, listAttentions } from '../../api/api';\nimport Chip from '@material-ui/core/Chip';\nimport { AiOutlineLock, AiOutlineUnlock } from 'react-icons/ai';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './attention.css';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    iconWidth: {\n        width: 10\n    },\n    paper: {\n        padding: theme.spacing(2),\n        marginTop: 10,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    input: {\n        display: 'none',\n    },\n    fab: {\n        margin: theme.spacing(1),\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n        color: 'black'\n    },\n}))\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    }\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n})\n\nconst Person = _ => {\n\n    useEffect(() => {\n        listAttentions().then(response => {\n            setAttentions(response.attentions);\n            setTotalAttentions(response.count);\n        });\n    }, []);\n\n    const classes = useStyles()\n\n    const [attentions, setAttentions] = useState([])\n    const [attention, setAttention] = useState(null)\n    const [totalAttentions, setTotalAttentions] = useState(0)\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n\n    const [open, setOpen] = useState(false);\n    const [openDetailAttention, setOpenDetailAttention] = useState(false);\n\n    const handleChangePage = (_, newPage) => {\n        setPage(newPage);\n        // getPersons({ variables: { start: newPage, end: rowsPerPage } })\n    }\n\n    const handleChangeRowsPerPage = event => {\n\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n        // getPersons({ variables: { start: 0, end: event.target.value } })\n    }\n\n    const onCloseDeleteAttention = () => {\n        setOpen(false);\n    }\n\n    const onDeleteAttention = id => {\n        setOpen(false);\n\n        deleteAttention(id).then(response => {\n            if (response.status === 'success') {\n                toast.success(response.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n                const newAttentions = attentions.map((currentAttention) => {\n                    if (id !== currentAttention._id)\n                        return currentAttention\n\n                    currentAttention.status = \"deleted\";\n                    return currentAttention\n                })\n                setAttentions(newAttentions)\n            } else {\n                toast.error(response.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n        }).catch(e => {\n\n            toast.error('Ocurrió un error al eliminar la atención', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        })\n\n    }\n\n\n    const onDetailAttention = attention => () => {\n        setAttention(attention)\n        setOpenDetailAttention(true)\n    }\n    const onOpenAttention = attention => () => {\n        openAttention(attention._id).then(response => {\n            if (response.status === 'success') {\n\n                toast.success(response.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n\n                const newAttentions = attentions.map((currentAttention) => {\n                    if (attention._id !== currentAttention._id)\n                        return currentAttention\n\n                    currentAttention.status = \"created\";\n                    return currentAttention\n                })\n                setAttentions(newAttentions)\n            } else {\n                toast.error(response.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n        }).catch(e => {\n            console.log(e);\n            toast.error(\"Occurrió un error al abrir la atención\", {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        });\n    }\n    const onCloseAttention = attention => () => {\n        closeAttention(attention._id).then(response => {\n            if (response.status === 'success') {\n\n                toast.info(response.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n                const newAttentions = attentions.map((currentAttention) => {\n                    if (attention._id !== currentAttention._id)\n                        return currentAttention\n\n                    currentAttention.status = \"finished\";\n                    return currentAttention\n                })\n                setAttentions(newAttentions)\n            } else {\n                toast.error(response.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n        }).catch(e => {\n            console.log(e);\n            toast.error(\"Occurrió un error al cerrar la atención\", {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        });\n    }\n\n    const closeApu = () => {\n        setOpenDetailAttention(false)\n    }\n\n\n    return (\n        <Fragment>\n            <ToastContainer />\n            <Paper className={classes.paper}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>NOMBRE</TableCell>\n                            <TableCell>DESCRIPCIÓN</TableCell>\n                            <TableCell>ESTADO</TableCell>\n                            <TableCell>CLIENTE</TableCell>\n                            <TableCell>VER</TableCell>\n                            <TableCell>ABRIR/CERRAR</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            attentions.map(item => {\n                                return (\n                                    <TableRow key={item._id}>\n                                        <TableCell>{item.title} </TableCell>\n                                        <TableCell>{item.description} </TableCell>\n                                        <TableCell>\n                                            {\n                                                item.status === 'finished' ?\n                                                    <Chip label='Cerrado' variant=\"outlined\" /> :\n                                                    <Chip label='Abierto' color=\"primary\" variant=\"outlined\" />\n                                            }\n                                        </TableCell>\n                                        <TableCell>{item.customer.name}</TableCell>\n\n                                        <TableCell className={classes.iconWidth}>\n                                            <Tooltip title=\"Detalle\" placement=\"top\">\n                                                <SearchIcon className={classes.icon} onClick={onDetailAttention(item)} />\n                                            </Tooltip>\n                                        </TableCell>\n\n\n                                        <TableCell className={classes.iconWidth}>\n                                            {\n                                                item.status === 'finished' ?\n                                                    <div className='wrapper-icon-attention'>\n                                                        <AiOutlineUnlock className='icon' onClick={onOpenAttention(item)} />\n                                                        <span className='open-close'>Abrir</span>\n                                                    </div> :\n                                                    <div className='wrapper-icon-attention'>\n                                                        <AiOutlineLock className='icon' onClick={onCloseAttention(item)} />\n                                                        <div className='open-close'>Cerrar</div>\n                                                    </div>\n                                            }\n                                        </TableCell>\n                                    </TableRow>)\n                            })\n                        }\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={totalAttentions}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n\n\n            <Dialog\n                open={open}\n                onClose={onCloseDeleteAttention}\n                aria-labelledby=\"draggable-dialog-title\">\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n                    Alerta\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Esta seguro de eliminar esta atención?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={onCloseDeleteAttention} color=\"primary\">\n                        NO\n                    </Button>\n                    <Button onClick={onDeleteAttention} color=\"primary\">\n                        SI\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                fullWidth maxWidth=\"lg\"\n                open={openDetailAttention}\n                onClose={closeApu}\n                TransitionComponent={Transition}>\n                <DialogContent>\n                    <AttentionDetail attention={attention} />\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={closeApu} color=\"primary\">\n                        Cerrar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n        </Fragment>)\n}\n\nexport default Person"],"sourceRoot":""}