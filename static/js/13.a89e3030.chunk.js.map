{"version":3,"sources":["views/Roles/AssignRole.js","../node_modules/@material-ui/core/esm/Container/Container.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/Switch/Switch.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","height","minWidth","checkbox","width","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","margin","marginTop","chip","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","divider","paper","color","text","secondary","button","fab","float","extendedIcon","marginRight","formControl","AssingRole","useState","pages","setPages","roles","setRoles","classes","role","saved","values","setValues","useEffect","getRoles","then","response","prop","listMenu","getMenu","console","log","menus","onChangeMenu","idpage","indexParent","indexChild","event","target","checked","status","idrole","updateMenuRole","_","aux","children","push","length","i","splice","className","onSubmit","e","preventDefault","roleName","container","direction","item","xs","fullWidth","select","clsx","textField","variant","label","value","onChange","map","option","key","_id","name","page","index","title","includes","edge","subPage","indexSubPage","Container","React","props","ref","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","_objectWithoutProperties","_extends","concat","capitalize","String","withStyles","_defineProperty","marginLeft","boxSizing","paddingLeft","paddingRight","breakpoints","up","Object","keys","reduce","acc","breakpoint","maxWidthXs","Math","max","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","tablelvl2","TableHead","Tablelvl2Context","Provider","Switch","_props$color","_props$edge","_props$size","size","icon","thumb","edgeStart","edgeEnd","SwitchBase","checkedIcon","switchBase","disabled","track","flexShrink","zIndex","verticalAlign","colorAdjust","top","transition","transitions","create","duration","shortest","transform","opacity","colorPrimary","primary","main","fade","action","hoverOpacity","common","black","white","colorSecondary","sizeSmall","boxShadow","shadows","borderRadius"],"mappings":"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","file":"static/js/13.a89e3030.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport clsx from 'clsx';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Swal from 'sweetalert2'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { getRoles, getMenu, updateMenuRole } from '../../api/api';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250,\r\n        minWidth: 290\r\n    },\r\n    checkbox: {\r\n        width: 10\r\n    },\r\n    input: {\r\n        display: \"flex\",\r\n        padding: 0,\r\n        height: \"auto\"\r\n    },\r\n    valueContainer: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        overflow: \"hidden\"\r\n    },\r\n    margin: {\r\n        marginTop: 10\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5, 0.25)\r\n    },\r\n    chipFocused: {\r\n        backgroundColor: emphasize(\r\n            theme.palette.type === \"light\"\r\n                ? theme.palette.grey[300]\r\n                : theme.palette.grey[700],\r\n            0.08\r\n        )\r\n    },\r\n    noOptionsMessage: {\r\n        padding: theme.spacing(1, 2)\r\n    },\r\n    singleValue: {\r\n        fontSize: 16\r\n    },\r\n    placeholder: {\r\n        position: \"absolute\",\r\n        left: 2,\r\n        bottom: 6,\r\n        fontSize: 16\r\n    },\r\n\r\n    divider: {\r\n        height: theme.spacing(2)\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    button:\r\n    {\r\n        margin: theme.spacing(1),\r\n    },\r\n    fab:\r\n    {\r\n        marginTop: -2,\r\n        float: \"right\"\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst AssingRole = () => {\r\n\r\n    const [pages, setPages] = useState([]);\r\n    const [roles, setRoles] = useState([]);\r\n    const classes = useStyles();\r\n    const [values, setValues] = useState({\r\n        role: '',\r\n        saved: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        getRoles().then(response => {\r\n            setRoles(response.roles);\r\n        });\r\n    }, []);\r\n\r\n    const inputChange = prop => event => {\r\n        console.log('event.target.value => ', event.target.value);\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        listMenu();\r\n    }\r\n\r\n    const listMenu = () => {\r\n        getMenu().then(response => {\r\n            console.log('response => ', response);\r\n            setPages(response.menus[0].pages);\r\n        });\r\n    }\r\n\r\n    const onChangeMenu = (idpage, indexParent, indexChild) => event => {\r\n        // console.log('onChnageMenu')\r\n        console.log('idpage', idpage)\r\n        console.log('checked', event.target.checked)\r\n        console.log('role', values.role)\r\n        let status = event.target.checked\r\n\r\n        const input = {\r\n            idpage,\r\n            idrole: values.role,\r\n            status: status\r\n        }\r\n\r\n\r\n        updateMenuRole(input).then(_ => {\r\n            let aux = pages\r\n            if (indexChild >= 0) {\r\n                if (status) {\r\n                    aux[indexParent].children[indexChild].roles.push(values.role)\r\n                }\r\n                else {\r\n                    console.log('length', aux[indexParent].children[indexChild].roles.length)\r\n                    for (let i = 0; i < aux[indexParent].children[indexChild].roles.length; i++) {\r\n\r\n                        console.log('role01', aux[indexParent].children[indexChild].roles[i])\r\n                        console.log('role02', values.role)\r\n                        if (aux[indexParent].children[indexChild].roles[i] === values.role)\r\n                            aux[indexParent].children[indexChild].roles.splice(i, 1)\r\n                    }\r\n                }\r\n\r\n            }\r\n            else {\r\n                console.log(\"index02\", indexParent)\r\n                console.log(\"status\", status)\r\n                if (status) {\r\n                    aux[indexParent].roles.push(values.role)\r\n                }\r\n                else {\r\n                    aux[indexParent].roles.splice(indexParent, 1)\r\n                }\r\n            }\r\n\r\n            setPages([...aux])\r\n        });\r\n\r\n    }\r\n\r\n\r\n    const onSubmitRole = e => {\r\n\r\n        const input = {\r\n            name: values.roleName,\r\n            status: true\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <Container>\r\n\r\n                <Paper className={classes.paper}>\r\n                    <form onSubmit={e => {\r\n                        e.preventDefault()\r\n                        onSubmitRole()\r\n                    }} >\r\n                        <Grid container spacing={1} direction=\"column\" >\r\n                            <Grid item xs={6} >\r\n                                <TextField\r\n                                    fullWidth\r\n                                    select\r\n                                    className={clsx(classes.margin, classes.textField)}\r\n                                    variant=\"outlined\"\r\n                                    label=\"Rol\"\r\n                                    value={values.role}\r\n                                    onChange={inputChange('role')}>\r\n                                    {\r\n                                        roles.map(option => (\r\n                                            <MenuItem key={option._id} value={option._id} >\r\n                                                {option.name}\r\n                                            </MenuItem>))\r\n\r\n                                    }\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n\r\n                <Grid item xs={12} >\r\n                    <Paper className={classes.paper}>\r\n                        {\r\n                            <Table>\r\n\r\n                                <TableBody>\r\n                                    {\r\n                                        pages.map(function (page, index) {\r\n\r\n                                            if (page.children.length <= 0) {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell>\r\n                                                            <fieldset>\r\n                                                                <legend> <Typography> {page.title} </Typography></legend>\r\n                                                                <Table>\r\n                                                                    <TableHead>\r\n                                                                        <TableRow>\r\n                                                                            <TableCell>{page.title}</TableCell>\r\n                                                                            <TableCell className={classes.checkbox}><Switch checked={page.roles.includes(values.role) ? true : false} edge=\"end\" onChange={onChangeMenu(page._id, index, -1)} /></TableCell>\r\n                                                                        </TableRow>\r\n                                                                    </TableHead>\r\n                                                                </Table>\r\n                                                            </fieldset>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            }\r\n                                            else {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell>\r\n                                                            <fieldset>\r\n                                                                <legend> <Typography>{page.title} </Typography></legend>\r\n                                                                <Table>\r\n                                                                    <TableHead>\r\n                                                                        <TableRow>\r\n                                                                            <TableCell>{page.title}</TableCell>\r\n                                                                            <TableCell><Switch edge=\"end\" checked={page.roles.includes(values.role) ? true : false} onChange={onChangeMenu(page._id, index, -1)} /></TableCell>\r\n                                                                        </TableRow>\r\n                                                                    </TableHead>\r\n                                                                    <TableBody>\r\n                                                                        {\r\n                                                                            page.children.map(function (subPage, indexSubPage) {\r\n                                                                                return (\r\n                                                                                    <TableRow key={indexSubPage}>\r\n                                                                                        <TableCell>{subPage.title}</TableCell>\r\n                                                                                        <TableCell className={classes.checkbox} ><Switch edge=\"end\" checked={subPage.roles.includes(values.role) ? true : false} onChange={onChangeMenu(subPage._id, index, indexSubPage)} /></TableCell>\r\n                                                                                    </TableRow>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </TableBody>\r\n                                                                </Table>\r\n                                                            </fieldset>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n\r\n\r\n                                                )\r\n\r\n                                            }\r\n\r\n                                        })\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AssingRole","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);"],"sourceRoot":""}