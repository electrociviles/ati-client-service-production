{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@material-ui/icons/Restore.js","views/CenterOfAttention/CenterOfAttentionForm.js","views/CenterOfAttention/AddUser.js","views/CenterOfAttention/CenterOfAttention.js","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js"],"names":["createSvgIcon","React","d","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","useStyles","makeStyles","theme","root","flexGrow","height","minWidth","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","chip","margin","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","divider","paper","color","text","secondary","button","fab","marginTop","float","extendedIcon","marginRight","formControl","CenterOfAttentionForm","props","useEffect","listCustomers","then","response","setCustomers","customers","centerOfAttention","setCustomer","customer","setName","title","setDescription","description","classes","useState","name","username","password","errorName","setErrorName","errorTextName","setErrorTextName","errorDescription","setErrorDescription","errorTextDescription","setErrorTextDescription","validateDescription","undefined","toString","trim","validateName","onSubmit","errors","validateForm","data","_id","id","updateCenterOfAttention","status","Swal","fire","icon","showConfirmButton","timer","onClose","passCenterOfAttentionEdit","createCenterOfAttention","onCloseModal","passCreateCenterOfAttention","toast","error","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","Container","maxWidth","Paper","className","encType","e","preventDefault","Grid","container","item","xs","sm","Autocomplete","fullWidth","size","getOptionLabel","option","toUpperCase","filterOptions","x","options","autoComplete","getOptionSelected","onChange","_","onInputChange","newInputValue","length","search","renderInput","params","TextField","label","variant","renderTags","tagValue","getTagProps","map","index","Chip","disabled","indexOf","renderOption","Typography","helperText","clsx","textField","target","Button","AddUser","setPerson","person","listUsers","withOutCenterOfAttention","setUsers","users","user","setUser","errorUser","setErrorUser","errorTextUser","setErrorTextUser","validateUser","addUserToCenterOfAttention","console","log","iconWidth","width","Transition","forwardRef","ref","Slide","direction","CenterOfAttention","centersOfAttention","setCentersOfAttention","totalCentersOfAttention","setTotalCentersOfAttention","rowsPerPage","setRowsPerPage","page","setPage","openAddUser","setOpenAddUser","open","setOpen","openRestoreRole","setOpenRestoreCenterOfAttention","openEditRole","setOpenEditRole","openCreateCenterOfAttention","setOpenCreateCenterOfAttention","setCenterOfAttention","openUsers","setOpenUsers","start","end","listCenterOfAttention","count","onOpenDeleteCenterOfAttention","onOpenRestoreCenterOfAttention","role","onCloseDisableCenterOfAttention","onCloseEditCenterOfAttention","onCloseRestoreRole","onCloseCreateCenterOfAttention","onCloseModalUsers","onOpenModalUsers","onAddUser","onCloseAddUser","onClick","Table","TableHead","TableRow","TableCell","align","colSpan","TableBody","key","maintenanceCost","displayType","thousandSeparator","prefix","administrative","Tooltip","placement","TablePagination","rowsPerPageOptions","component","onChangePage","newPage","onChangeRowsPerPage","event","Dialog","aria-labelledby","DialogTitle","style","cursor","DialogContent","DialogContentText","DialogActions","autoFocus","deleteCenterOfAttention","newCentersOfAttention","currentCenterOfAttention","restoreCenterOfAttention","currentRoles","TransitionComponent","centerOfAttentions","List","ListItem","ListItemIcon","ListItemText","primary","children","_props$disableTypogra","disableTypography","other","_objectWithoutProperties","_extends","withStyles","_ref","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePaginationActions","backIconButtonProps","nextIconButtonProps","useTheme","IconButton","Math","ceil","defaultLabelDisplayedRows","from","to","concat","defaultRowsPerPageOptions","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","colSpanProp","_props$component","Component","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","_props$rowsPerPageOpt","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","MenuItem","Toolbar","toolbar","spacer","caption","Select","select","selectIcon","InputBase","selectRoot","rowsPerPageOption","menuItem","min","actions","typography","pxToRem","minHeight","paddingRight","flexShrink","marginLeft","paddingLeft","textAlign","textAlignLast","marginBottom"],"mappings":"8FAAA,mBAMeA,gBAA4BC,gBAAoB,OAAQ,CACrEC,EAAG,qDACD,uB,kCCRJ,mBAMeF,gBAA4BC,gBAAoB,OAAQ,CACrEC,EAAG,uDACD,sB,kCCNJ,IAAIC,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASP,EAAuBC,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBK,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EV,EAAG,qOACD,WAEJK,EAAQE,QAAUE,G,mXCGZE,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,EACVC,OAAQ,IACRC,SAAU,KAEZC,MAAO,CACLC,QAAS,OACTC,QAAS,EACTJ,OAAQ,QAEVK,eAAgB,CACdF,QAAS,OACTG,SAAU,OACVC,KAAM,EACNC,WAAY,SACZC,SAAU,UAEZC,KAAM,CACJC,OAAQd,EAAMe,QAAQ,GAAK,MAE7BC,YAAa,CACXC,gBAAiBC,YACQ,UAAvBlB,EAAMmB,QAAQC,KACVpB,EAAMmB,QAAQE,KAAK,KACnBrB,EAAMmB,QAAQE,KAAK,KACvB,MAGJC,iBAAkB,CAChBf,QAASP,EAAMe,QAAQ,EAAG,IAE5BQ,YAAa,CACXC,SAAU,IAEZC,YAAa,CACXC,SAAU,WACVC,KAAM,EACNC,OAAQ,EACRJ,SAAU,IAGZK,QAAS,CACP1B,OAAQH,EAAMe,QAAQ,IAExBe,MAAO,CACLvB,QAASP,EAAMe,QAAQ,GACvBgB,MAAO/B,EAAMmB,QAAQa,KAAKC,WAG5BC,OACA,CACEpB,OAAQd,EAAMe,QAAQ,IAExBoB,IACA,CACEC,WAAY,EACZC,MAAO,SAETC,aAAc,CACZC,YAAavC,EAAMe,QAAQ,IAE7ByB,YAAa,CACX1B,OAAQd,EAAMe,QAAQ,QAkRX0B,EA9Qe,SAAAC,GAE5BC,qBAAU,WAMRC,cAAgBC,MAAK,SAAAC,GACnBC,EAAaD,EAASE,WAClBN,EAAMO,mBACRC,EAAYR,EAAMO,kBAAkBE,aAGpCT,EAAMO,oBACRG,EAAQV,EAAMO,kBAAkBI,OAChCC,EAAeZ,EAAMO,kBAAkBM,aACvCL,EAAYR,EAAMO,kBAAkBE,aAErC,IAEH,IAAMK,EAAU1D,IArBqB,EAuBH2D,mBAAS,IAvBN,mBAuB9BT,EAvB8B,KAuBnBD,EAvBmB,OAwBLU,qBAxBK,mBAwB9BN,EAxB8B,KAwBpBD,EAxBoB,OAyBCO,mBAAS,IAzBV,mBAyB9BF,EAzB8B,KAyBjBD,EAzBiB,OA0BbG,mBAAS,IA1BI,mBA0B9BC,EA1B8B,KA0BxBN,EA1BwB,OA2BLK,mBAAS,IA3BJ,mBA2B9BE,EA3B8B,aA4BLF,mBAAS,KA5BJ,mBA4B9BG,EA5B8B,aA6BXH,mBAAS,KA7BE,gCA8BSA,mBAAS,KA9BlB,gCAgCHA,oBAAS,IAhCN,mBAgC9BI,EAhC8B,KAgCnBC,EAhCmB,OAiCKL,mBAAS,IAjCd,mBAiC9BM,EAjC8B,KAiCfC,EAjCe,OAmCWP,oBAAS,GAnCpB,mBAmC9BQ,GAnC8B,KAmCZC,GAnCY,QAoCmBT,mBAAS,IApC5B,qBAoC9BU,GApC8B,MAoCRC,GApCQ,MAwD/BC,GAAsB,SAAC5E,GAC3B,IAAIuC,OAAiBsC,IAAV7E,EAAsBA,EAAQ8D,EAEzC,OAAY,MAARvB,GAA2C,KAA3BA,EAAKuC,WAAWC,QAClCN,IAAoB,GACpBE,GAAwB,2BACjB,IAGPF,IAAoB,GACpBE,GAAwB,IACjB,IAILK,GAAe,SAAChF,GACpB,IAAIuC,OAAiBsC,IAAV7E,EAAsBA,EAAQiE,EAEzC,OAAY,MAAR1B,GAA2C,KAA3BA,EAAKuC,WAAWC,QAClCV,GAAa,GACbE,EAAiB,2BACV,IAGPF,GAAa,GACbE,EAAiB,IACV,IAILU,GAAW,WAIf,GAAgB,IA1CG,WACnB,IAAIC,EAAS,EAIb,OAHAA,GAAUN,KACVM,GAAUF,KAqCIG,GAEK,CAEjB,IAAIC,EAAO,CACTnB,OACAH,cACAI,WACAC,WACA,SAAYT,EAAS2B,KAGlBpC,EAAMO,mBAyBT4B,EAAKE,GAAKrC,EAAMO,kBAAkB6B,IAClCE,aAAwBH,GAAMhC,MAAK,SAAAC,GACV,WAAnBA,EAASmC,QACXC,IAAKC,KAAK,CACRC,KAAM,UACN/B,MAAM,4BAAD,OAA2BK,EAA3B,kCACL2B,mBAAmB,EACnBC,MAAO,OAET5C,EAAM6C,UACN7C,EAAM8C,0BAA0B1C,EAASG,oBAEzCiC,IAAKC,KAAK,CACRC,KAAM,QACN/B,MAAM,8DAAD,OAA0DK,GAC/D2B,mBAAmB,EACnBC,MAAO,WAxCbG,YAAwBZ,GAAMhC,MAAK,SAAAC,GAEV,WAAnBA,EAASmC,QACXC,IAAKC,KAAK,CACRC,KAAM,UACN/B,MAAM,4BAAD,OAA2BK,EAA3B,6BACL2B,mBAAmB,EACnBC,MAAO,OAET5C,EAAMgD,eACNhD,EAAMiD,4BAA4B7C,EAASG,oBAE3CiC,IAAKC,KAAK,CACRC,KAAM,QACN/B,MAAM,yDAAD,OAAqDK,GAC1D2B,mBAAmB,EACnBC,MAAO,eA+BfM,IAAMC,MAAM,0BAA2B,CACrCnE,SAAU,YACVoE,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU7B,KAMhB,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,MACA,kBAAC8B,EAAA,EAAD,CAAWC,SAAS,MAElB,kBAACC,EAAA,EAAD,CAAOC,UAAW/C,EAAQ1B,OACxB,0BAAM0E,QAAS,sBACb9B,SAAU,SAAA+B,GACRA,EAAEC,iBACFhC,OAEF,kBAACiC,EAAA,EAAD,CAAMC,WAAS,EAAC7F,QAAS,GAEvB,kBAAC4F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrB,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,QACLC,eACE,SAACC,GACC,MAAM,GAAN,OAAUA,EAAO1D,KAAKa,WAAW8C,cAAjC,MAGJC,cAAe,SAACC,GAAD,OAAOA,GACtBC,QAASxE,EAITyE,cAAY,EACZC,kBAAmB,SAACN,EAAQ3H,GAAT,OAAmB2H,IAAW3H,GACjDkI,SAAU,SAACC,EAAGnI,GACZyD,EAAYzD,IAEdoI,cAAe,SAACD,EAAGE,GACjB,GAAIA,EAAcvD,WAAWC,OAAOuD,OAAS,EAAG,CAC9C,IAAIlD,EAAO,CACTmD,OAAQF,EAAcvD,WAAWC,QAEnC5B,YAAciC,GAAMhC,MAAK,SAAAC,GACvBC,EAAaD,EAASE,gBAI5BiF,YAAa,SAACC,GAAD,OACX,kBAACC,EAAA,EAAD,iBAAeD,EAAf,CAAuBE,MAAM,UAAUC,QAAQ,WAAWvH,OAAO,YAEnEwH,WAAY,SAACC,EAAUC,GAAX,OACVD,EAASE,KAAI,SAACrB,EAAQsB,GAAT,OACX,kBAACC,EAAA,EAAD,eACEP,MAAOhB,EAAO1D,MACV8E,EAAY,CAAEE,UAFpB,CAGEE,UAAyC,IAA/B5F,EAAU6F,QAAQzB,UAIlC0B,aAAc,SAAC1B,GAEb,OACE,kBAACT,EAAA,EAAD,CAAMC,WAAS,EAACjG,WAAW,UACzB,kBAACgG,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACiC,EAAA,EAAD,eAAiB3B,EAAO1D,KAAKa,WAAW8C,sBAQpD,kBAACV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrB,kBAACoB,EAAA,EAAD,CACElB,WAAS,EACTpB,MAAOhC,EACPmF,WAAYjF,EACZjD,OAAO,QACP2G,aAAa,MACblB,UAAW0C,YAAKzF,EAAQ1C,OAAQ0C,EAAQ0F,WACxCb,QAAQ,WACRD,MAAM,mCACN3I,MAAOiE,EACPiE,SApMK,SAAAlB,GACnBrD,EAAQqD,EAAE0C,OAAO1J,OACjBgF,GAAagC,EAAE0C,OAAO1J,WAqMZ,kBAACkH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrB,kBAACoB,EAAA,EAAD,CACElB,WAAS,EACTpB,MAAO5B,GACP+E,WAAY7E,GACZrD,OAAO,QACP2G,aAAa,MACblB,UAAW0C,YAAKzF,EAAQ1C,OAAQ0C,EAAQ0F,WACxCb,QAAQ,WACRD,MAAM,2CACN3I,MAAO8D,EACPoE,SAvNY,SAAAlB,GAC1BnD,EAAemD,EAAE0C,OAAO1J,OACxB4E,GAAoBoC,EAAE0C,OAAO1J,WAwNnB,kBAACkH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAACqC,EAAA,EAAD,CAAQhI,KAAK,SAASiH,QAAQ,YAAYtG,MAAM,WAC7CW,EAAMO,kBAAoB,aAAe,kB,iFCtUtDnD,G,cAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,EACVC,OAAQ,IACRC,SAAU,KAEZC,MAAO,CACLC,QAAS,OACTC,QAAS,EACTJ,OAAQ,QAEVK,eAAgB,CACdF,QAAS,OACTG,SAAU,OACVC,KAAM,EACNC,WAAY,SACZC,SAAU,UAEZC,KAAM,CACJC,OAAQd,EAAMe,QAAQ,GAAK,MAE7BC,YAAa,CACXC,gBAAiBC,YACQ,UAAvBlB,EAAMmB,QAAQC,KACVpB,EAAMmB,QAAQE,KAAK,KACnBrB,EAAMmB,QAAQE,KAAK,KACvB,MAGJC,iBAAkB,CAChBf,QAASP,EAAMe,QAAQ,EAAG,IAE5BQ,YAAa,CACXC,SAAU,IAEZC,YAAa,CACXC,SAAU,WACVC,KAAM,EACNC,OAAQ,EACRJ,SAAU,IAGZK,QAAS,CACP1B,OAAQH,EAAMe,QAAQ,IAExBe,MAAO,CACLvB,QAASP,EAAMe,QAAQ,GACvBgB,MAAO/B,EAAMmB,QAAQa,KAAKC,WAG5BC,OACA,CACEpB,OAAQd,EAAMe,QAAQ,IAExBoB,IACA,CACEC,WAAY,EACZC,MAAO,SAETC,aAAc,CACZC,YAAavC,EAAMe,QAAQ,IAE7ByB,YAAa,CACX1B,OAAQd,EAAMe,QAAQ,SAiB1B,IAgLesI,EAhLC,SAAA3G,GAGdC,qBAAU,WAER2G,EAAU5G,EAAM6G,QAIhBC,YAHW,CACTC,0BAA0B,IAEZ5G,MAAK,SAAAC,GACnB4G,EAAS5G,EAAS6G,YAGnB,IAEH,IAAMnG,EAAU1D,IAfO,EAiBK2D,mBAAS,MAjBd,mBAiBR6F,GAjBQ,aAkBG7F,mBAAS,IAlBZ,mBAkBhBkG,EAlBgB,KAkBTD,EAlBS,OAmBCjG,mBAAS,IAnBV,mBAmBhBmG,EAnBgB,KAmBVC,EAnBU,OAoBWpG,oBAAS,GApBpB,mBAoBhBqG,EApBgB,KAoBLC,EApBK,OAqBmBtG,mBAAS,IArB5B,mBAqBhBuG,EArBgB,KAqBDC,EArBC,KA8BjBC,EAAe,SAACzK,GACpB,IAAIuC,OAAiBsC,IAAV7E,EAAsBA,EAAQkK,EAEzC,OAAY,MAAR3H,GAA2C,KAA3BA,EAAKuC,WAAWC,QAClCuF,GAAa,GACbE,EAAiB,2BACV,IAGPF,GAAa,GACbE,EAAiB,IACV,IAILvF,EAAW,SAAAkD,GAIf,GAAgB,IAzBG,WACnB,IAAIjD,EAAS,EAEb,OADAA,GAAUuF,IAqBItF,GAEK,CACjB,IAAIC,EAAO,CACT+E,KAAMA,EAAK9E,IACX7B,kBAAmBP,EAAMO,kBAAkB6B,KAG7CqF,YAA2BtF,GAAMhC,MAAK,SAAAC,GACpCsH,QAAQC,IAAI,WAAYvH,GACD,WAAnBA,EAASmC,QAEXC,IAAKC,KAAK,CACRC,KAAM,UACN/B,MAAO,yDACPgC,mBAAmB,EACnBC,MAAO,OAGT5C,EAAM6C,WAINL,IAAKC,KAAK,CACRC,KAAM,QACN/B,MAAO,4CACPgC,mBAAmB,EACnBC,MAAO,eAQbJ,IAAKC,KAAK,CACRC,KAAM,UACN/B,MAAO,wCACPgC,mBAAmB,EACnBC,MAAO,QAOb,OACE,kBAAC,WAAD,KACE,kBAACc,EAAA,EAAD,CAAWC,SAAS,MAElB,kBAACC,EAAA,EAAD,CAAOC,UAAW/C,EAAQ1B,OACxB,0BAAM0E,QAAS,sBACb9B,SAAU,SAAA+B,GACRA,EAAEC,iBACFhC,MAEF,kBAACiC,EAAA,EAAD,CAAMC,WAAS,EAAC7F,QAAS,GAEvB,kBAAC4F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrB,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,QACLC,eACE,SAACC,GACC,MAAM,GAAN,OAAUA,EAAO1D,KAAKa,WAAW8C,cAAjC,MAGJC,cAAe,SAACC,GAAD,OAAOA,GACtBC,QAASmC,EACTlC,cAAY,EACZC,kBAAmB,SAACN,EAAQ3H,GAAT,OAAmB2H,IAAW3H,GACjDkI,SAAU,SAACC,EAAGnI,GACZoK,EAAQpK,IAEVoI,cAAe,SAACD,EAAGE,GACjB,GAAIA,EAAcvD,WAAWC,OAAOuD,OAAS,EAAG,CAC9C,IAAIlD,EAAO,CACTmD,OAAQF,EAAcvD,WAAWC,OACjCiF,0BAA0B,GAG5BD,YAAU3E,GAAMhC,MAAK,SAAAC,GACnB4G,EAAS5G,EAAS6G,YAIxB1B,YAAa,SAACC,GAAD,OACX,kBAACC,EAAA,EAAD,eACEtC,MAAOiE,EACPd,WAAYgB,GACR9B,EAHN,CAIEE,MAAM,UACNC,QAAQ,WACRvH,OAAO,YAEXwH,WAAY,SAACC,EAAUC,GAAX,OACVD,EAASE,KAAI,SAACrB,EAAQsB,GAAT,OACX,kBAACC,EAAA,EAAD,CACEP,MAAOhB,EAAO1D,KACdkF,UAAqC,IAA3Be,EAAMd,QAAQzB,SAI9B0B,aAAc,SAAC1B,GACb,OACE,kBAACT,EAAA,EAAD,CAAMC,WAAS,EAACjG,WAAW,UACzB,kBAACgG,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACiC,EAAA,EAAD,eAAiB3B,EAAO1D,KAAKa,WAAW8C,sBAUpD,kBAACV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAACqC,EAAA,EAAD,CAAQhI,KAAK,SAASiH,QAAQ,YAAYtG,MAAM,WAAhD,kBCtOVjC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAU,GAEdoK,UAAW,CACPC,MAAO,IAEXzI,MAAO,CACHvB,QAASP,EAAMe,QAAQ,GACvBqB,UAAW,IAEfF,OAAQ,CACJpB,OAAQd,EAAMe,QAAQ,IAE1BV,MAAO,CACHC,QAAS,QAEb6B,IAAK,CACDrB,OAAQd,EAAMe,QAAQ,IAE1BuB,aAAc,CACVC,YAAavC,EAAMe,QAAQ,IAE/BqE,KAAM,CACF7C,YAAavC,EAAMe,QAAQ,GAC3BgB,MAAO,aAITyI,EAAatL,IAAMuL,YAAW,SAAoB/H,EAAOgI,GAC3D,OAAO,kBAACC,EAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAAShI,OAmWhCmI,UAhWW,WAEtB,IAAMrH,EAAU1D,IAFY,EAIwB2D,mBAAS,IAJjC,mBAIrBqH,EAJqB,KAIDC,EAJC,OAKkCtH,mBAAS,GAL3C,mBAKrBuH,EALqB,KAKIC,EALJ,OAMUxH,mBAAS,IANnB,mBAMrByH,EANqB,KAMRC,EANQ,OAOJ1H,mBAAS,GAPL,mBAOrB2H,EAPqB,KAOfC,EAPe,OASU5H,oBAAS,GATnB,mBASrB6H,EATqB,KASRC,EATQ,QAYJ9H,oBAAS,GAZL,qBAYrB+H,GAZqB,MAYfC,GAZe,SAa+BhI,oBAAS,GAbxC,qBAarBiI,GAbqB,MAaJC,GAbI,SAcYlI,oBAAS,GAdrB,qBAcrBmI,GAdqB,MAcPC,GAdO,SAe0CpI,oBAAS,GAfnD,qBAerBqI,GAfqB,MAeQC,GAfR,SAgBsBtI,mBAAS,MAhB/B,qBAgBrBR,GAhBqB,MAgBF+I,GAhBE,SAkBMvI,oBAAS,GAlBf,qBAkBrBwI,GAlBqB,MAkBVC,GAlBU,MAqB5BvJ,qBAAU,WACN,IAAIkC,EAAO,CAAEsH,MAAO,EAAGC,IAAKlB,GAC5BmB,YAAsBxH,GAAMhC,MAAK,SAAAC,GAC7BiI,EAAsBjI,EAASgI,oBAC/BG,EAA2BnI,EAASwJ,YAEzC,IAEH,IAAMC,GAAgC,SAAAtJ,GAAiB,OAAI,WACvD+I,GAAqB/I,GACrBwI,IAAQ,KAENe,GAAiC,SAAAC,GAAI,OAAI,WAC3CT,GAAqBS,GACrBd,IAAgC,KAE9Be,GAAkC,WACpCjB,IAAQ,IAwCNkB,GAA+B,WACjCd,IAAgB,IAEde,GAAqB,WACvBjB,IAAgC,IAK9BkB,GAAiC,WACnCd,IAA+B,IAyC7Be,GAAoB,WACtBZ,IAAa,IAEXa,GAAmB,SAAA9J,GAAiB,OAAI,WAC1C+I,GAAqB/I,GACrBiJ,IAAa,KAEXc,GAAY,SAAA/J,GAAiB,OAAI,WACnC+I,GAAqB/I,GACrBsI,GAAe,KAGb0B,GAAiB,WACnB1B,GAAe,IAInB,OACI,kBAAC,WAAD,KACI,kBAACjF,EAAA,EAAD,CAAOC,UAAW/C,EAAQ1B,OACtB,kBAACsH,EAAA,EAAD,CAAQf,QAAQ,YAAYtG,MAAM,UAAUmL,QAjEtB,WAC9BnB,IAA+B,KAgEvB,+BAEA,kBAACoB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,uBACA,kBAACD,EAAA,EAAD,CAAWE,QAAS,GAApB,cAGR,kBAACC,EAAA,EAAD,KAEQ3C,EAAmBrC,KAAI,SAAAxF,GACnB,OACI,kBAACoK,EAAA,EAAD,CAAUK,IAAKzK,EAAkB6B,KAC7B,kBAACwI,EAAA,EAAD,KAAYrK,EAAkBI,MAA9B,KACA,kBAACiK,EAAA,EAAD,KAAYrK,EAAkBM,YAA9B,KACA,kBAAC+J,EAAA,EAAD,KAAYrK,EAAkBE,SAASO,KAAvC,KACA,kBAAC4J,EAAA,EAAD,CAAWC,MAAM,SACb,kBAAC,IAAD,CAAc9N,MAAOwD,EAAkB0K,gBAAiBC,YAAa,OAAQC,mBAAmB,EAAMC,OAAQ,OAGlH,kBAACR,EAAA,EAAD,CAAW/G,UAAW/C,EAAQ8G,WAErBrH,EAAkB8K,eAOb,GALF,kBAACC,EAAA,EAAD,CAAS3K,MAAM,SAAS4K,UAAU,OAC9B,6BACI,kBAAC,IAAD,CAAU1H,UAAW/C,EAAQ4B,KAAM8H,SAzG3DT,EAyG4FxJ,EAzGpF,WACpC+I,GAAqBS,GACrBZ,IAAgB,UA6GgB,kBAACyB,EAAA,EAAD,CAAW/G,UAAW/C,EAAQ8G,WAEtB,kBAAC0D,EAAA,EAAD,CAAS3K,MAAM,WAAW4K,UAAU,OAChC,6BAEqC,WAA7BhL,EAAkBgC,OACd,kBAAC,IAAD,CAAYsB,UAAW/C,EAAQ4B,KAAM8H,QAASX,GAA8BtJ,KAE5E,kBAAC,IAAD,CAAasD,UAAW/C,EAAQ4B,KAAM8H,QAASV,GAA+BvJ,QAMtG,kBAACqK,EAAA,EAAD,CAAW/G,UAAW/C,EAAQ8G,WAC1B,kBAAC0D,EAAA,EAAD,CAAS3K,MAAM,WAAW4K,UAAU,OAChC,6BACI,kBAAC,IAAD,CAAS1H,UAAW,OAAQ2G,QAASH,GAAiB9J,QAIlE,kBAACqK,EAAA,EAAD,CAAW/G,UAAW/C,EAAQ8G,WAC1B,kBAAC0D,EAAA,EAAD,CAAS3K,MAAM,oBAAoB4K,UAAU,OACzC,6BACI,kBAAC,IAAD,CAAuB1H,UAAW,OAAQ2G,QAASF,GAAU/J,SAvI7E,IAAAwJ,OAiJpB,kBAACyB,EAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,UAAU,MACV9B,MAAOtB,EACPE,YAAaA,EACbE,KAAMA,EACNiD,aAvHS,SAAC5H,EAAG6H,GACzBjD,EAAQiD,GACR,IAAIzJ,EAAO,CAAEsH,MAAQmC,EAAUpD,EAAckB,IAAKlB,GAClDmB,YAAsBxH,GAAMhC,MAAK,SAAAC,GAC7BiI,EAAsBjI,EAASgI,oBAC/BG,EAA2BnI,EAASwJ,WAmH5BiC,oBA/GgB,SAAAC,GAE5BrD,GAAgBqD,EAAMrF,OAAO1J,OAC7B4L,EAAQ,GACR,IAAIxG,EAAO,CAAEsH,MAAO,EAAGC,IAAKoC,EAAMrF,OAAO1J,OACzC4M,YAAsBxH,GAAMhC,MAAK,SAAAC,GAC7BiI,EAAsBjI,EAASgI,oBAC/BG,EAA2BnI,EAASwJ,cA4GpC,kBAACmC,EAAA,EAAD,CACIjD,KAAMA,GACNjG,QAASmH,GACTgC,kBAAgB,0BAChB,kBAACC,EAAA,EAAD,CAAaC,MAAO,CAAEC,OAAQ,QAAU9J,GAAG,0BAA3C,UAGA,kBAAC+J,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,+DAIJ,kBAACC,EAAA,EAAD,KACI,kBAAC5F,EAAA,EAAD,CAAQ6F,WAAS,EAAC/B,QAASR,GAAiC3K,MAAM,WAAlE,MAGA,kBAACqH,EAAA,EAAD,CAAQ8D,QA9MW,WAC/BzB,IAAQ,GAERyD,YAAwBjM,GAAkB6B,KAAKjC,MAAK,SAAAC,GAChD,GAAwB,YAApBA,EAASmC,OAAsB,CAC/B,IAAMkK,EAAwBrE,EAAmBrC,KAAI,SAAC2G,GAClD,OAAInM,GAAkB6B,MAAQsK,EAAyBtK,MAGvDsK,EAAyBnK,OAAS,YAFvBmK,KAKfrE,EAAsBoE,QAkM2BpN,MAAM,WAAnD,QAMR,kBAAC0M,EAAA,EAAD,CACIjD,KAAME,GACNnG,QAASqH,IACT,kBAAC+B,EAAA,EAAD,CAAaC,MAAO,CAAEC,OAAQ,SAA9B,UAGA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,gEAIJ,kBAACC,EAAA,EAAD,KACI,kBAAC5F,EAAA,EAAD,CAAQ6F,WAAS,EAAC/B,QAASN,GAAoB7K,MAAM,WAArD,MAGA,kBAACqH,EAAA,EAAD,CAAQ8D,QAnNW,WAE/BvB,IAAgC,GAEhC0D,YAAyBpM,GAAkB6B,KAAKjC,MAAK,SAAAC,GACjD,GAAwB,YAApBA,EAASmC,OAAsB,CAC/B,IAAMkK,EAAwBrE,EAAmBrC,KAAI,SAAC6G,EAAc5G,GAEhE,OAAIzF,GAAkB6B,MAAQwK,EAAaxK,MAG3CwK,EAAarK,OAAS,UAFXqK,KAKfvE,EAAsBoE,QAqM2BpN,MAAM,WAAnD,QAMR,kBAAC0M,EAAA,EAAD,CAAQpI,SAAS,KAAKmF,KAAMI,GAAce,6BAA8BA,GAA8B4C,oBAAqB/E,GACvH,kBAACsE,EAAA,EAAD,KACI,kBAAC,EAAD,CAAuBvJ,QAASoH,GAA8B1J,kBAAmBA,GAAmBuC,0BArLlF,SAAAvC,GAC9B4I,IAAgB,GAChB,IAAMsD,EAAwBrE,EAAmBrC,KAAI,SAAC2G,GAElD,OAAInM,EAAkB6B,MAAQsK,EAAyBtK,IAC5CsK,EAEXA,EAA2BnM,KAG/B8H,EAAsBoE,OA6Kd,kBAACH,EAAA,EAAD,KACI,kBAAC5F,EAAA,EAAD,CAAQ6F,WAAS,EAAC/B,QAASP,GAA8B5K,MAAM,WAA/D,YAMR,kBAAC0M,EAAA,EAAD,CAAQjD,KAAMM,GAA6BvG,QAASsH,GAAgC6B,kBAAgB,qBAChG,kBAACC,EAAA,EAAD,oCACA,kBAACG,EAAA,EAAD,KACI,kBAAC,EAAD,CAAuBpJ,aAjKlB,WACjBqG,IAA+B,IAgKgCpG,4BArM/B,SAAA1C,GAChC8H,GAAsB,SAAAyE,GAAkB,4BAAQA,GAAR,CAA4BvM,OACpE8I,IAA+B,OAqMvB,kBAACiD,EAAA,EAAD,KACI,kBAAC5F,EAAA,EAAD,CAAQ8D,QAASL,GAAgC9K,MAAM,WAAvD,YAMR,kBAAC0M,EAAA,EAAD,CACIjD,KAAMS,GACN1G,QAASuH,IACT,kBAAC6B,EAAA,EAAD,iBAGA,kBAACG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,CAAMlJ,UAAW/C,EAAQvD,MAEjBgD,GACIA,GAAkB0G,MAAMlB,KAAI,SAAAmB,GACxB,OACI,kBAAC8F,EAAA,EAAD,CAAU/O,WAAW,cACjB,kBAACgP,EAAA,EAAD,KACI,kBAAC,IAAD,CAAQf,MAAO,CAAEpN,SAAU,GAAIO,MAAO,WAE1C,kBAAC6N,EAAA,EAAD,CACIC,QAASjG,EAAKlG,KACdzB,UAAW2H,EAAK6C,KAAK/I,WAMnC,MAKtB,kBAACsL,EAAA,EAAD,KACI,kBAAC5F,EAAA,EAAD,CAAQ6F,WAAS,EAAC/B,QAASJ,GAAmB/K,MAAM,WAApD,YAMR,kBAAC0M,EAAA,EAAD,CACIjD,KAAMF,EACN/F,QAAS0H,IACT,kBAAC0B,EAAA,EAAD,0BAGA,kBAACG,EAAA,EAAD,KACI,kBAAC,EAAD,CAASvJ,QAAS0H,GAAgBhK,kBAAmBA,MAEzD,kBAAC+L,EAAA,EAAD,KACI,kBAAC5F,EAAA,EAAD,CAAQ6F,WAAS,EAAC/B,QAASD,GAAgBlL,MAAM,WAAjD,e,iCC1ZpB,sDAeI4M,EAA2BzP,cAAiB,SAAqBwD,EAAOgI,GAC1E,IAAIoF,EAAWpN,EAAMoN,SACjBtM,EAAUd,EAAMc,QAChB+C,EAAY7D,EAAM6D,UAClBwJ,EAAwBrN,EAAMsN,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/DE,EAAQC,YAAyBxN,EAAO,CAAC,WAAY,UAAW,YAAa,sBAEjF,OAAoBxD,gBAAoB,MAAOiR,YAAS,CACtD5J,UAAW0C,YAAKzF,EAAQvD,KAAMsG,GAC9BmE,IAAKA,GACJuF,GAAQD,EAAoBF,EAAwB5Q,gBAAoB6J,IAAY,CACrFqF,UAAW,KACX/F,QAAS,MACRyH,OA8BUM,gBApDK,CAElBnQ,KAAM,CACJa,OAAQ,EACRP,QAAS,YACTG,KAAM,aA+CwB,CAChCgD,KAAM,kBADO0M,CAEZzB,I,wKCjDC0B,EAAoBnR,gBAAoBoR,IAAoB,MAE5DC,EAAqBrR,gBAAoBsR,IAAmB,MAE5DC,EAAqBvR,gBAAoBsR,IAAmB,MAE5DE,EAAqBxR,gBAAoBoR,IAAoB,MAmElDK,EAjE2BzR,cAAiB,SAAgCwD,EAAOgI,GAChG,IAAIkG,EAAsBlO,EAAMkO,oBAC5BtE,EAAQ5J,EAAM4J,MACduE,EAAsBnO,EAAMmO,oBAC5BxC,EAAe3L,EAAM2L,aACrBjD,EAAO1I,EAAM0I,KACbF,EAAcxI,EAAMwI,YACpB+E,EAAQC,YAAyBxN,EAAO,CAAC,sBAAuB,QAAS,sBAAuB,eAAgB,OAAQ,gBAExH1C,EAAQ8Q,cAUZ,OAAoB5R,gBAAoB,MAAOiR,YAAS,CACtDzF,IAAKA,GACJuF,GAAqB/Q,gBAAoB6R,IAAYZ,YAAS,CAC/DjD,QAX0B,SAA+BsB,GACzDH,EAAaG,EAAOpD,EAAO,IAW3BxC,SAAmB,IAATwC,EACVrJ,MAAO,WACN6O,GAA0C,QAApB5Q,EAAM4K,UAAsByF,EAAOE,GAAqBrR,gBAAoB6R,IAAYZ,YAAS,CACxHjD,QAX0B,SAA+BsB,GACzDH,EAAaG,EAAOpD,EAAO,IAW3BxC,UAAqB,IAAX0D,GAAelB,GAAQ4F,KAAKC,KAAK3E,EAAQpB,GAAe,EAClEnJ,MAAO,WACN8O,GAA0C,QAApB7Q,EAAM4K,UAAsB6F,EAAQC,O,SCiC3DQ,EAA4B,SAAmCb,GACjE,IAAIc,EAAOd,EAAKc,KACZC,EAAKf,EAAKe,GACV9E,EAAQ+D,EAAK/D,MACjB,MAAO,GAAG+E,OAAOF,EAAM,KAAKE,OAAOD,EAAI,QAAQC,QAAkB,IAAX/E,EAAeA,EAAQ,aAAa+E,OAAOD,KAG/FE,EAA4B,CAAC,GAAI,GAAI,GAAI,KAKzCpD,EAA+BhP,cAAiB,SAAyBwD,EAAOgI,GAClF,IA4BI8C,EA5BA+D,EAAwB7O,EAAM8O,iBAC9BA,OAA6C,IAA1BD,EAAmCZ,EAAyBY,EAC/EX,EAAsBlO,EAAMkO,oBAC5Ba,EAAwB/O,EAAMgP,mBAC9BA,OAA+C,IAA1BD,EAAmC,gBAAkBA,EAC1EjO,EAAUd,EAAMc,QAChB+C,EAAY7D,EAAM6D,UAClBoL,EAAcjP,EAAM8K,QACpBoE,EAAmBlP,EAAM0L,UACzByD,OAAiC,IAArBD,EAA8BtE,IAAYsE,EACtDtF,EAAQ5J,EAAM4J,MACdwF,EAAwBpP,EAAMqP,mBAC9BA,OAA+C,IAA1BD,EAAmCZ,EAA4BY,EACpFE,EAAwBtP,EAAMuP,iBAC9BA,OAA6C,IAA1BD,EAAmC,iBAAmBA,EACzEnB,EAAsBnO,EAAMmO,oBAC5BqB,EAAwBxP,EAAMyP,mBAC9BA,OAA+C,IAA1BD,EAAmC,YAAcA,EACtE7D,EAAe3L,EAAM2L,aACrBE,EAAsB7L,EAAM6L,oBAC5BnD,EAAO1I,EAAM0I,KACbF,EAAcxI,EAAMwI,YACpBkH,EAAwB1P,EAAMyL,mBAC9BA,OAA+C,IAA1BiE,EAAmCd,EAA4Bc,EACpFC,EAAqB3P,EAAM4P,YAC3BA,OAAqC,IAAvBD,EAAgC,GAAKA,EACnDpC,EAAQC,YAAyBxN,EAAO,CAAC,mBAAoB,sBAAuB,qBAAsB,UAAW,YAAa,UAAW,YAAa,QAAS,qBAAsB,mBAAoB,sBAAuB,qBAAsB,eAAgB,sBAAuB,OAAQ,cAAe,qBAAsB,gBAI9UmP,IAAcvE,KAA2B,OAAduE,IAC7BrE,EAAUmE,GAAe,KAG3B,IAAIY,EAAWC,cACXC,EAAUD,cACVE,EAAoBJ,EAAYK,OAAS,SAAWC,IACxD,OAAoB1T,gBAAoB2S,EAAW1B,YAAS,CAC1D5J,UAAW0C,YAAKzF,EAAQvD,KAAMsG,GAC9BiH,QAASA,EACT9C,IAAKA,GACJuF,GAAqB/Q,gBAAoB2T,IAAS,CACnDtM,UAAW/C,EAAQsP,SACL5T,gBAAoB,MAAO,CACzCqH,UAAW/C,EAAQuP,SACjB5E,EAAmBpG,OAAS,GAAkB7I,gBAAoB6J,IAAY,CAChFhH,MAAO,UACPsG,QAAS,QACT9B,UAAW/C,EAAQwP,QACnBjO,GAAI0N,GACHR,GAAmB9D,EAAmBpG,OAAS,GAAkB7I,gBAAoB+T,IAAQ9C,YAAS,CACvG3M,QAAS,CACP0P,OAAQ1P,EAAQ0P,OAChB9N,KAAM5B,EAAQ2P,YAEhB9S,MAAoBnB,gBAAoBkU,IAAW,CACjD7M,UAAW0C,YAAKzF,EAAQnD,MAAOmD,EAAQ6P,cAEzC5T,MAAOyL,EACPvD,SAAU4G,EACVxJ,GAAIwN,EACJE,QAASA,GACRH,GAAcnE,EAAmB1F,KAAI,SAAU6K,GAChD,OAAoBpU,gBAAoBwT,EAAmB,CACzDnM,UAAW/C,EAAQ+P,SACnB7F,IAAK4F,EAAkB7T,MAAQ6T,EAAkB7T,MAAQ6T,EACzD7T,MAAO6T,EAAkB7T,MAAQ6T,EAAkB7T,MAAQ6T,GAC1DA,EAAkBlL,MAAQkL,EAAkBlL,MAAQkL,OACvCpU,gBAAoB6J,IAAY,CAChDhH,MAAO,UACPsG,QAAS,QACT9B,UAAW/C,EAAQwP,SAClBjB,EAAmB,CACpBZ,KAAgB,IAAV7E,EAAc,EAAIlB,EAAOF,EAAc,EAC7CkG,IAAe,IAAX9E,EAAe0E,KAAKwC,IAAIlH,GAAQlB,EAAO,GAAKF,IAAgBE,EAAO,GAAKF,EAC5EoB,OAAkB,IAAXA,GAAgB,EAAIA,EAC3BlB,KAAMA,KACUlM,gBAAoBsS,EAAkB,CACtDjL,UAAW/C,EAAQiQ,QACnB7C,oBAAqBT,YAAS,CAC5B9M,MAAOqO,EACP,aAAcA,GACbd,GACHtE,MAAOA,EACPuE,oBAAqBV,YAAS,CAC5B9M,MAAO8O,EACP,aAAcA,GACbtB,GACHxC,aAAcA,EACdjD,KAAMA,EACNF,YAAaA,SAoIFkF,iBA9SK,SAAgBpQ,GAClC,MAAO,CAELC,KAAM,CACJ8B,MAAO/B,EAAMmB,QAAQa,KAAK6N,QAC1BrO,SAAUxB,EAAM0T,WAAWC,QAAQ,IACnC/S,SAAU,OAEV,eAAgB,CACdL,QAAS,IAKbuS,QAAS,CACPc,UAAW,GACXC,aAAc,GAIhBd,OAAQ,CACNrS,KAAM,YAIRsS,QAAS,CACPc,WAAY,GAKdT,WAAY,CACV9Q,YAAa,GACbwR,WAAY,GAIdb,OAAQ,CACNc,YAAa,EACbH,aAAc,GACdI,UAAW,QACXC,cAAe,SAMjBf,WAAY,GAGZ9S,MAAO,CACL0B,MAAO,UACPP,SAAU,UACVsS,WAAY,GAIdP,SAAU,GAGVE,QAAS,CACPK,WAAY,EACZC,WAAY,OAgPgB,CAChCrQ,KAAM,sBADO0M,CAEZlC,I,iCC/TH,wCAWIa,EAAiC7P,cAAiB,SAA2BwD,EAAOgI,GACtF,OAAoBxL,gBAAoB6J,IAAYoH,YAAS,CAC3D/B,UAAW,IACX/F,QAAS,QACTtG,MAAO,gBACP2I,IAAKA,GACJhI,OAmBU0N,gBA/BK,CAElBnQ,KAAM,CACJkU,aAAc,KA4BgB,CAChCzQ,KAAM,wBADO0M,CAEZrB","file":"static/js/15.c83c6dd5.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z\"\n}), 'Restore');\n\nexports.default = _default;","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport clsx from 'clsx';\r\nimport { Button } from '@material-ui/core';\r\nimport PropTypes from \"prop-types\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { updateCenterOfAttention, listCustomers, createCenterOfAttention } from '../../api/api';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250,\r\n    minWidth: 290\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n\r\n  },\r\n  button:\r\n  {\r\n    margin: theme.spacing(1),\r\n  },\r\n  fab:\r\n  {\r\n    marginTop: -2,\r\n    float: \"right\"\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst CenterOfAttentionForm = props => {\r\n\r\n  useEffect(() => {\r\n\r\n    // var d = new Date();\r\n    // d.setMonth(d.getMonth() + 6);\r\n    // setExpirationDateMaintenance(d)\r\n\r\n    listCustomers().then(response => {\r\n      setCustomers(response.customers);\r\n      if (props.centerOfAttention) {\r\n        setCustomer(props.centerOfAttention.customer);\r\n      }\r\n    });\r\n    if (props.centerOfAttention) {\r\n      setName(props.centerOfAttention.title);\r\n      setDescription(props.centerOfAttention.description);\r\n      setCustomer(props.centerOfAttention.customer);\r\n    }\r\n  }, [])\r\n\r\n  const classes = useStyles()\r\n\r\n  const [customers, setCustomers] = useState([]);\r\n  const [customer, setCustomer] = useState();\r\n  const [description, setDescription] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [maintenanceCost, setMaintenanceCost] = useState('');\r\n\r\n  const [errorName, setErrorName] = useState(false)\r\n  const [errorTextName, setErrorTextName] = useState('')\r\n\r\n  const [errorDescription, setErrorDescription] = useState(false)\r\n  const [errorTextDescription, setErrorTextDescription] = useState('')\r\n\r\n  const onChangeDescription = e => {\r\n    setDescription(e.target.value);\r\n    validateDescription(e.target.value);\r\n  }\r\n\r\n  const onChangeName = e => {\r\n    setName(e.target.value);\r\n    validateName(e.target.value);\r\n  }\r\n\r\n  const validateForm = () => {\r\n    let errors = 0\r\n    errors += validateDescription()\r\n    errors += validateName()\r\n\r\n    return errors\r\n  }\r\n\r\n  const validateDescription = (value) => {\r\n    let text = value !== undefined ? value : description\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorDescription(true)\r\n      setErrorTextDescription('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorDescription(false)\r\n      setErrorTextDescription('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validateName = (value) => {\r\n    let text = value !== undefined ? value : name\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorName(true)\r\n      setErrorTextName('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorName(false)\r\n      setErrorTextName('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const onSubmit = () => {\r\n\r\n    let errores = validateForm()\r\n\r\n    if (errores === 0) {\r\n\r\n      let data = {\r\n        name,\r\n        description,\r\n        username,\r\n        password,\r\n        'customer': customer._id,\r\n      }\r\n\r\n      if (!props.centerOfAttention) {\r\n        createCenterOfAttention(data).then(response => {\r\n\r\n          if (response.status == 'success') {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: `El centro de atención ${name}  fue creado exitosamente`,\r\n              showConfirmButton: false,\r\n              timer: 1500\r\n            });\r\n            props.onCloseModal();\r\n            props.passCreateCenterOfAttention(response.centerOfAttention);\r\n          } else {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: `Ocurrió un error al crear el centro de atención ${name}`,\r\n              showConfirmButton: false,\r\n              timer: 1500\r\n            })\r\n          }\r\n\r\n        });\r\n\r\n      } else {\r\n\r\n        data.id = props.centerOfAttention._id;\r\n        updateCenterOfAttention(data).then(response => {\r\n          if (response.status == 'success') {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: `El centro de atención ${name}  fue actualizado exitosamente`,\r\n              showConfirmButton: false,\r\n              timer: 1500\r\n            });\r\n            props.onClose();\r\n            props.passCenterOfAttentionEdit(response.centerOfAttention);\r\n          } else {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: `Ocurrió un error al actualizar el centro de atención ${name}`,\r\n              showConfirmButton: false,\r\n              timer: 1500\r\n            })\r\n          }\r\n\r\n        });\r\n      }\r\n    } else {\r\n      toast.error('Faltan datos por llenar', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <ToastContainer />\r\n      <Container maxWidth=\"md\">\r\n\r\n        <Paper className={classes.paper}>\r\n          <form encType={'multipart/form-data'}\r\n            onSubmit={e => {\r\n              e.preventDefault()\r\n              onSubmit()\r\n            }} >\r\n            <Grid container spacing={3}>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <Autocomplete\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  getOptionLabel={\r\n                    (option) => {\r\n                      return `${option.name.toString().toUpperCase()} `\r\n                    }\r\n                  }\r\n                  filterOptions={(x) => x}\r\n                  options={customers}\r\n                  // value={customer}\r\n                  // defaultValue={customers.length > 0 ? customers[1] : null}\r\n\r\n                  autoComplete\r\n                  getOptionSelected={(option, value) => option === value}\r\n                  onChange={(_, value) => {\r\n                    setCustomer(value);\r\n                  }}\r\n                  onInputChange={(_, newInputValue) => {\r\n                    if (newInputValue.toString().trim().length > 0) {\r\n                      let data = {\r\n                        search: newInputValue.toString().trim()\r\n                      }\r\n                      listCustomers(data).then(response => {\r\n                        setCustomers(response.customers);\r\n                      })\r\n                    }\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} label=\"Cliente\" variant=\"outlined\" margin=\"dense\" />\r\n                  )}\r\n                  renderTags={(tagValue, getTagProps) =>\r\n                    tagValue.map((option, index) => (\r\n                      <Chip\r\n                        label={option.name}\r\n                        {...getTagProps({ index })}\r\n                        disabled={customers.indexOf(option) !== -1}\r\n                      />\r\n                    ))\r\n                  }\r\n                  renderOption={(option) => {\r\n\r\n                    return (\r\n                      <Grid container alignItems=\"center\">\r\n                        <Grid item xs>\r\n                          <Typography >{`${option.name.toString().toUpperCase()}`}</Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    );\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  error={errorName}\r\n                  helperText={errorTextName}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Nombre del centro de atención\"\r\n                  value={name}\r\n                  onChange={onChangeName} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  error={errorDescription}\r\n                  helperText={errorTextDescription}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Descripción del centro de atención\"\r\n                  value={description}\r\n                  onChange={onChangeDescription} />\r\n              </Grid>\r\n\r\n              <Grid item xs={2} sm={3}>\r\n                <Button type=\"submit\" variant=\"contained\" color='primary'>\r\n                  {props.centerOfAttention ? \"Actualizar\" : \"Guardar\"}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CenterOfAttentionForm","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Container from '@material-ui/core/Container'\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport clsx from 'clsx'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Button } from '@material-ui/core'\r\nimport { DropzoneArea } from 'material-ui-dropzone'\r\n\r\nimport PropTypes from \"prop-types\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport { listUsers, addUserToCenterOfAttention } from '../../api/api';\r\n\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250,\r\n    minWidth: 290\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n\r\n  },\r\n  button:\r\n  {\r\n    margin: theme.spacing(1),\r\n  },\r\n  fab:\r\n  {\r\n    marginTop: -2,\r\n    float: \"right\"\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.shape({\r\n      current: PropTypes.any.isRequired\r\n    })\r\n  ])\r\n}\r\n\r\nconst AddUser = props => {\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    setPerson(props.person);\r\n    let data = {\r\n      withOutCenterOfAttention: true\r\n    }\r\n    listUsers(data).then(response => {\r\n      setUsers(response.users);\r\n    })\r\n\r\n  }, [])\r\n\r\n  const classes = useStyles()\r\n\r\n  const [person, setPerson] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n  const [user, setUser] = useState(\"\");\r\n  const [errorUser, setErrorUser] = useState(false);\r\n  const [errorTextUser, setErrorTextUser] = useState('');\r\n\r\n\r\n  const validateForm = () => {\r\n    let errors = 0\r\n    errors += validateUser()\r\n    return errors\r\n  }\r\n\r\n  const validateUser = (value) => {\r\n    let text = value !== undefined ? value : users\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorUser(true)\r\n      setErrorTextUser('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorUser(false)\r\n      setErrorTextUser('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const onSubmit = _ => {\r\n\r\n    let errores = validateForm()\r\n\r\n    if (errores === 0) {\r\n      let data = {\r\n        user: user._id,\r\n        centerOfAttention: props.centerOfAttention._id\r\n      }\r\n\r\n      addUserToCenterOfAttention(data).then(response => {\r\n        console.log('response', response);\r\n        if (response.status == 'success') {\r\n\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Usuario agregado al centro de atención exitosamente',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          });\r\n\r\n          props.onClose()\r\n\r\n        } else {\r\n\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Ocurrió un error al agregar el usuario',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          });\r\n        }\r\n\r\n      });\r\n\r\n    } else {\r\n\r\n      Swal.fire({\r\n        icon: 'warning',\r\n        title: 'Faltan campos obligatorios por llenar',\r\n        showConfirmButton: false,\r\n        timer: 1500\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container maxWidth=\"md\">\r\n\r\n        <Paper className={classes.paper}>\r\n          <form encType={'multipart/form-data'}\r\n            onSubmit={e => {\r\n              e.preventDefault()\r\n              onSubmit()\r\n            }} >\r\n            <Grid container spacing={3}>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <Autocomplete\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  getOptionLabel={\r\n                    (option) => {\r\n                      return `${option.name.toString().toUpperCase()} `\r\n                    }\r\n                  }\r\n                  filterOptions={(x) => x}\r\n                  options={users}\r\n                  autoComplete\r\n                  getOptionSelected={(option, value) => option === value}\r\n                  onChange={(_, value) => {\r\n                    setUser(value);\r\n                  }}\r\n                  onInputChange={(_, newInputValue) => {\r\n                    if (newInputValue.toString().trim().length > 0) {\r\n                      let data = {\r\n                        search: newInputValue.toString().trim(),\r\n                        withOutCenterOfAttention: true,\r\n                      }\r\n\r\n                      listUsers(data).then(response => {\r\n                        setUsers(response.users);\r\n                      })\r\n                    }\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      error={errorUser}\r\n                      helperText={errorTextUser}\r\n                      {...params}\r\n                      label=\"Cliente\"\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\" />\r\n                  )}\r\n                  renderTags={(tagValue, getTagProps) =>\r\n                    tagValue.map((option, index) => (\r\n                      <Chip\r\n                        label={option.name}\r\n                        disabled={users.indexOf(option) !== -1}\r\n                      />\r\n                    ))\r\n                  }\r\n                  renderOption={(option) => {\r\n                    return (\r\n                      <Grid container alignItems=\"center\">\r\n                        <Grid item xs>\r\n                          <Typography >{`${option.name.toString().toUpperCase()}`}</Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    );\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n\r\n\r\n              <Grid item xs={2} sm={3}>\r\n                <Button type=\"submit\" variant=\"contained\" color='primary'>Agregar</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AddUser;","import React, { useState, Fragment, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport CenterOfAttentionForm from \"./CenterOfAttentionForm\";\r\nimport { FiUsers, FiUser } from \"react-icons/fi\";\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { listCenterOfAttention, deleteCenterOfAttention, restoreCenterOfAttention } from '../../api/api';\r\n\r\nimport NumberFormat from 'react-number-format';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport { AiOutlineUsergroupAdd } from \"react-icons/ai\";\r\nimport AddUser from \"./AddUser\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    iconWidth: {\r\n        width: 10\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    fab: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(1),\r\n        color: 'black'\r\n    },\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n})\r\n\r\nconst CenterOfAttention = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [centersOfAttention, setCentersOfAttention] = useState([])\r\n    const [totalCentersOfAttention, setTotalCentersOfAttention] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [page, setPage] = useState(0);\r\n\r\n    const [openAddUser, setOpenAddUser] = useState(false);\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [openRestoreRole, setOpenRestoreCenterOfAttention] = useState(false);\r\n    const [openEditRole, setOpenEditRole] = useState(false);\r\n    const [openCreateCenterOfAttention, setOpenCreateCenterOfAttention] = useState(false);\r\n    const [centerOfAttention, setCenterOfAttention] = useState(null)\r\n\r\n    const [openUsers, setOpenUsers] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        let data = { start: 0, end: rowsPerPage }\r\n        listCenterOfAttention(data).then(response => {\r\n            setCentersOfAttention(response.centersOfAttention);\r\n            setTotalCentersOfAttention(response.count);\r\n        });\r\n    }, []);\r\n\r\n    const onOpenDeleteCenterOfAttention = centerOfAttention => () => {\r\n        setCenterOfAttention(centerOfAttention)\r\n        setOpen(true);\r\n    }\r\n    const onOpenRestoreCenterOfAttention = role => () => {\r\n        setCenterOfAttention(role)\r\n        setOpenRestoreCenterOfAttention(true);\r\n    }\r\n    const onCloseDisableCenterOfAttention = () => {\r\n        setOpen(false);\r\n    }\r\n    const onDisableCenterOfAttention = () => {\r\n        setOpen(false);\r\n\r\n        deleteCenterOfAttention(centerOfAttention._id).then(response => {\r\n            if (response.status === 'success') {\r\n                const newCentersOfAttention = centersOfAttention.map((currentCenterOfAttention) => {\r\n                    if (centerOfAttention._id !== currentCenterOfAttention._id)\r\n                        return currentCenterOfAttention\r\n\r\n                    currentCenterOfAttention.status = 'inactive'\r\n                    return currentCenterOfAttention\r\n                });\r\n                setCentersOfAttention(newCentersOfAttention)\r\n            }\r\n        });\r\n    }\r\n    const onRestoreCenterOfAttention = () => {\r\n\r\n        setOpenRestoreCenterOfAttention(false)\r\n\r\n        restoreCenterOfAttention(centerOfAttention._id).then(response => {\r\n            if (response.status === 'success') {\r\n                const newCentersOfAttention = centersOfAttention.map((currentRoles, index) => {\r\n\r\n                    if (centerOfAttention._id !== currentRoles._id)\r\n                        return currentRoles\r\n\r\n                    currentRoles.status = 'active'\r\n                    return currentRoles\r\n                })\r\n                setCentersOfAttention(newCentersOfAttention)\r\n            }\r\n        });\r\n    }\r\n    const onEditCenterOfAttention = role => () => {\r\n        setCenterOfAttention(role)\r\n        setOpenEditRole(true)\r\n    };\r\n    const onCloseEditCenterOfAttention = () => {\r\n        setOpenEditRole(false)\r\n    };\r\n    const onCloseRestoreRole = () => {\r\n        setOpenRestoreCenterOfAttention(false)\r\n    };\r\n    const onCreateCenterOfAttention = () => {\r\n        setOpenCreateCenterOfAttention(true)\r\n    }\r\n    const onCloseCreateCenterOfAttention = () => {\r\n        setOpenCreateCenterOfAttention(false)\r\n    }\r\n    const passCreateCenterOfAttention = centerOfAttention => {\r\n        setCentersOfAttention(centerOfAttentions => [...centerOfAttentions, centerOfAttention]);\r\n        setOpenCreateCenterOfAttention(false);\r\n    }\r\n    const passCenterOfAttentionEdit = centerOfAttention => {\r\n        setOpenEditRole(false);\r\n        const newCentersOfAttention = centersOfAttention.map((currentCenterOfAttention) => {\r\n\r\n            if (centerOfAttention._id !== currentCenterOfAttention._id)\r\n                return currentCenterOfAttention\r\n\r\n            currentCenterOfAttention = centerOfAttention;\r\n            return currentCenterOfAttention\r\n        })\r\n        setCentersOfAttention(newCentersOfAttention)\r\n    }\r\n    const handleChangePage = (e, newPage) => {\r\n        setPage(newPage);\r\n        let data = { start: (newPage * rowsPerPage), end: rowsPerPage }\r\n        listCenterOfAttention(data).then(response => {\r\n            setCentersOfAttention(response.centersOfAttention);\r\n            setTotalCentersOfAttention(response.count);\r\n\r\n        });\r\n    }\r\n    const handleChangeRowsPerPage = event => {\r\n\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n        let data = { start: 0, end: event.target.value }\r\n        listCenterOfAttention(data).then(response => {\r\n            setCentersOfAttention(response.centersOfAttention);\r\n            setTotalCentersOfAttention(response.count);\r\n        });\r\n\r\n    }\r\n    const onCloseModal = () => {\r\n        setOpenCreateCenterOfAttention(false)\r\n    }\r\n    const onCloseModalUsers = () => {\r\n        setOpenUsers(false);\r\n    }\r\n    const onOpenModalUsers = centerOfAttention => () => {\r\n        setCenterOfAttention(centerOfAttention);\r\n        setOpenUsers(true);\r\n    }\r\n    const onAddUser = centerOfAttention => () => {\r\n        setCenterOfAttention(centerOfAttention)\r\n        setOpenAddUser(true);\r\n\r\n    }\r\n    const onCloseAddUser = () => {\r\n        setOpenAddUser(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Paper className={classes.paper}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={onCreateCenterOfAttention}>Crear centro de atención</Button>\r\n\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Nombre</TableCell>\r\n                            <TableCell>Descripción</TableCell>\r\n                            <TableCell>Cliente</TableCell>\r\n                            <TableCell align='right'>Costo mantenimiento</TableCell>\r\n                            <TableCell colSpan={4}>Acciones</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            centersOfAttention.map(centerOfAttention => {\r\n                                return (\r\n                                    <TableRow key={centerOfAttention._id}>\r\n                                        <TableCell>{centerOfAttention.title} </TableCell>\r\n                                        <TableCell>{centerOfAttention.description} </TableCell>\r\n                                        <TableCell>{centerOfAttention.customer.name} </TableCell>\r\n                                        <TableCell align='right'>\r\n                                            <NumberFormat value={centerOfAttention.maintenanceCost} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                        </TableCell>\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            {\r\n                                                !centerOfAttention.administrative ?\r\n\r\n                                                    <Tooltip title=\"Editar\" placement=\"top\">\r\n                                                        <div>\r\n                                                            <EditIcon className={classes.icon} onClick={onEditCenterOfAttention(centerOfAttention)} />\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                    : \"\"\r\n                                            }\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            {\r\n                                                <Tooltip title=\"Eliminar\" placement=\"top\">\r\n                                                    <div>\r\n                                                        {\r\n                                                            centerOfAttention.status === 'active' ?\r\n                                                                <DeleteIcon className={classes.icon} onClick={onOpenDeleteCenterOfAttention(centerOfAttention)} />\r\n                                                                :\r\n                                                                <RestoreIcon className={classes.icon} onClick={onOpenRestoreCenterOfAttention(centerOfAttention)} />\r\n                                                        }\r\n                                                    </div>\r\n                                                </Tooltip>\r\n                                            }\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            <Tooltip title=\"Usuarios\" placement=\"top\">\r\n                                                <div>\r\n                                                    <FiUsers className={\"icon\"} onClick={onOpenModalUsers(centerOfAttention)} />\r\n                                                </div>\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            <Tooltip title=\"Agregar a cliente\" placement=\"top\">\r\n                                                <div>\r\n                                                    <AiOutlineUsergroupAdd className={\"icon\"} onClick={onAddUser(centerOfAttention)} />\r\n                                                </div>\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>)\r\n                            }\r\n                            )}\r\n                    </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={totalCentersOfAttention}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={onCloseDisableCenterOfAttention}\r\n                aria-labelledby=\"draggable-dialog-title\">\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                    Alerta\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Esta seguro de desabilitar este centro de atención\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseDisableCenterOfAttention} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Button onClick={onDisableCenterOfAttention} color=\"primary\">\r\n                        SI\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={openRestoreRole}\r\n                onClose={onCloseRestoreRole}>\r\n                <DialogTitle style={{ cursor: 'move' }} >\r\n                    Alerta\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Esta seguro de reactivar a este centro de atención?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseRestoreRole} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Button onClick={onRestoreCenterOfAttention} color=\"primary\">\r\n                        SI\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog maxWidth=\"md\" open={openEditRole} onCloseEditCenterOfAttention={onCloseEditCenterOfAttention} TransitionComponent={Transition}>\r\n                <DialogContent>\r\n                    <CenterOfAttentionForm onClose={onCloseEditCenterOfAttention} centerOfAttention={centerOfAttention} passCenterOfAttentionEdit={passCenterOfAttentionEdit} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseEditCenterOfAttention} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={openCreateCenterOfAttention} onClose={onCloseCreateCenterOfAttention} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle>Crear centro de atención</DialogTitle>\r\n                <DialogContent>\r\n                    <CenterOfAttentionForm onCloseModal={onCloseModal} passCreateCenterOfAttention={passCreateCenterOfAttention} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCreateCenterOfAttention} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={openUsers}\r\n                onClose={onCloseModalUsers}>\r\n                <DialogTitle >\r\n                    Usuarios\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <List className={classes.root}>\r\n                            {\r\n                                centerOfAttention ?\r\n                                    centerOfAttention.users.map(user => {\r\n                                        return (\r\n                                            <ListItem alignItems=\"flex-start\">\r\n                                                <ListItemIcon>\r\n                                                    <FiUser style={{ fontSize: 32, color: \"grey\" }} />\r\n                                                </ListItemIcon>\r\n                                                <ListItemText\r\n                                                    primary={user.name}\r\n                                                    secondary={user.role.name}\r\n                                                />\r\n                                            </ListItem>\r\n\r\n                                        );\r\n                                    })\r\n                                    : \"\"\r\n                            }\r\n                        </List>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseModalUsers} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={openAddUser}\r\n                onClose={onCloseAddUser} >\r\n                <DialogTitle>\r\n                    Agregar a cliente\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <AddUser onClose={onCloseAddUser} centerOfAttention={centerOfAttention} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseAddUser} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CenterOfAttention","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(props, ref) {\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);"],"sourceRoot":""}