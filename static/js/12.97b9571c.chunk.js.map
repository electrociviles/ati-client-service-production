{"version":3,"sources":["../node_modules/@material-ui/icons/Restore.js","views/CenterOfAttention/CenterOfAttentionForm.js","views/CenterOfAttention/CenterOfAttention.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","makeStyles","theme","root","flexGrow","height","minWidth","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","chip","margin","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","divider","paper","color","text","secondary","button","fab","marginTop","float","extendedIcon","marginRight","formControl","CenterOfAttentionForm","props","useEffect","console","log","listCustomers","then","response","setCustomers","customers","centerOfAttention","setCustomer","customer","setName","title","setDescription","description","useState","disabled","classes","name","username","setUsername","password","setPassword","email","setEmail","maintenanceCost","setMaintenanceCost","errorName","setErrorName","errorTextName","setErrorTextName","errorDescription","setErrorDescription","errorTextDescription","setErrorTextDescription","errorUsername","setErrorUsername","errorTextUsername","setErrorTextUsername","errorPassword","setErrorPassword","errorTextPassword","setErrorTextPassword","errorEmail","setErrorEmail","errorTextEmail","setErrorTextEmail","errorMaintenanceCost","setErrorMaintenanceCost","setErrorTextMaintenanceCost","Date","expirationDateMaintenance","setExpirationDateMaintenance","validateDescription","undefined","toString","trim","validateName","validateUsername","validatePassword","validateEmail","validateMaintenanceCost","onSubmit","errors","validateForm","data","_id","parseFloat","id","updateCenterOfAttention","status","Swal","fire","icon","showConfirmButton","timer","onClose","passCenterOfAttentionEdit","createCenterOfAttention","onCloseModal","passCreateCenterOfAttention","toast","error","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","Container","maxWidth","Paper","className","encType","e","preventDefault","Grid","container","item","xs","sm","Autocomplete","fullWidth","size","getOptionLabel","option","toUpperCase","filterOptions","x","options","autoComplete","getOptionSelected","onChange","_","onInputChange","newInputValue","length","search","renderInput","params","TextField","label","variant","renderTags","tagValue","getTagProps","map","index","Chip","indexOf","renderOption","Typography","helperText","clsx","textField","target","utils","DateFnsUtils","style","width","format","date","KeyboardButtonProps","Button","iconWidth","Transition","React","forwardRef","ref","Slide","direction","CenterOfAttention","centersOfAttention","setCentersOfAttention","totalCentersOfAttention","setTotalCentersOfAttention","rowsPerPage","setRowsPerPage","page","setPage","open","setOpen","openRestoreRole","setOpenRestoreCenterOfAttention","openEditRole","setOpenEditRole","openCreateCenterOfAttention","setOpenCreateCenterOfAttention","setCenterOfAttention","start","end","listCenterOfAttention","count","onOpenDeleteCenterOfAttention","onOpenRestoreCenterOfAttention","role","onCloseDisableCenterOfAttention","onCloseEditCenterOfAttention","onCloseRestoreRole","onCloseCreateCenterOfAttention","onClick","Table","TableHead","TableRow","TableCell","align","colSpan","TableBody","key","displayType","thousandSeparator","prefix","administrative","Tooltip","placement","TablePagination","rowsPerPageOptions","component","onChangePage","newPage","onChangeRowsPerPage","event","Dialog","aria-labelledby","DialogTitle","cursor","DialogContent","DialogContentText","DialogActions","autoFocus","deleteCenterOfAttention","newCentersOfAttention","currentCenterOfAttention","restoreCenterOfAttention","currentRoles","TransitionComponent","centerOfAttentions","easeOut","t","min","max","Math","CircularProgress","_props$color","_props$disableShrink","disableShrink","_props$size","_props$thickness","thickness","_props$value","_props$variant","other","_objectWithoutProperties","circleStyle","rootStyle","rootProps","circumference","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","_extends","capitalize","indeterminate","static","svg","viewBox","SIZE","circle","circleDisableShrink","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","withStyles","transition","transitions","create","animation","colorPrimary","primary","main","colorSecondary","stroke","flip"],"mappings":"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","file":"static/js/12.97b9571c.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z\"\n}), 'Restore');\n\nexports.default = _default;","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport clsx from 'clsx';\r\nimport { Button } from '@material-ui/core';\r\nimport PropTypes from \"prop-types\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { updateCenterOfAttention, listCustomers, createCenterOfAttention } from '../../api/api';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Swal from 'sweetalert2';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250,\r\n    minWidth: 290\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n\r\n  },\r\n  button:\r\n  {\r\n    margin: theme.spacing(1),\r\n  },\r\n  fab:\r\n  {\r\n    marginTop: -2,\r\n    float: \"right\"\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\n\r\n\r\nconst CenterOfAttentionForm = props => {\r\n\r\n  useEffect(() => {\r\n    console.log('props', props)\r\n\r\n    listCustomers().then(response => {\r\n      setCustomers(response.customers);\r\n      if (props.centerOfAttention) {\r\n        setCustomer(props.centerOfAttention.customer);\r\n      }\r\n    });\r\n    if (props.centerOfAttention) {\r\n      setName(props.centerOfAttention.title);\r\n      setDescription(props.centerOfAttention.description);\r\n      setCustomer(props.centerOfAttention.customer);\r\n\r\n    }\r\n  }, [])\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const classes = useStyles()\r\n\r\n  const [customers, setCustomers] = useState([]);\r\n  const [customer, setCustomer] = useState();\r\n  const [description, setDescription] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [maintenanceCost, setMaintenanceCost] = useState('');\r\n\r\n  const [errorName, setErrorName] = useState(false)\r\n  const [errorTextName, setErrorTextName] = useState('')\r\n\r\n  const [errorDescription, setErrorDescription] = useState(false)\r\n  const [errorTextDescription, setErrorTextDescription] = useState('')\r\n\r\n  const [errorUsername, setErrorUsername] = useState(false)\r\n  const [errorTextUsername, setErrorTextUsername] = useState('')\r\n\r\n  const [errorPassword, setErrorPassword] = useState(false)\r\n  const [errorTextPassword, setErrorTextPassword] = useState('')\r\n\r\n  const [errorEmail, setErrorEmail] = useState(false)\r\n  const [errorTextEmail, setErrorTextEmail] = useState('')\r\n\r\n  const [errorMaintenanceCost, setErrorMaintenanceCost] = useState(false)\r\n  const [errorTextMaintenanceCost, setErrorTextMaintenanceCost] = useState('')\r\n\r\n  // '2014-08-18T21:11:54'\r\n  const [expirationDateMaintenance, setExpirationDateMaintenance] = useState(new Date());\r\n\r\n\r\n  const onChangeDescription = e => {\r\n    setDescription(e.target.value);\r\n    validateDescription(e.target.value);\r\n  }\r\n\r\n  const onChangeName = e => {\r\n    setName(e.target.value);\r\n    validateName(e.target.value);\r\n  }\r\n\r\n  const onChangeUsername = e => {\r\n    setUsername(e.target.value);\r\n    validateUsername(e.target.value);\r\n  }\r\n\r\n  const onChangePassword = e => {\r\n    setPassword(e.target.value);\r\n    validatePassword(e.target.value);\r\n  }\r\n\r\n  const onChangeEmail = e => {\r\n    setEmail(e.target.value);\r\n    validateEmail(e.target.value);\r\n  }\r\n\r\n  const onChangeMaintenanceCost = e => {\r\n    setMaintenanceCost(e.target.value);\r\n    validateMaintenanceCost(e.target.value);\r\n  }\r\n\r\n  const validateForm = () => {\r\n    let errors = 0\r\n    errors += validateDescription()\r\n    errors += validateName()\r\n    errors += validateUsername()\r\n    errors += validatePassword()\r\n\r\n    return errors\r\n  }\r\n\r\n  const validateDescription = (value) => {\r\n    let text = value !== undefined ? value : description\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorDescription(true)\r\n      setErrorTextDescription('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorDescription(false)\r\n      setErrorTextDescription('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validateName = (value) => {\r\n    let text = value !== undefined ? value : name\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorName(true)\r\n      setErrorTextName('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorName(false)\r\n      setErrorTextName('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validateUsername = (value) => {\r\n    let text = value !== undefined ? value : username\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorUsername(true)\r\n      setErrorTextUsername('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorUsername(false)\r\n      setErrorTextUsername('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validatePassword = (value) => {\r\n    let text = value !== undefined ? value : password\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorPassword(true)\r\n      setErrorTextPassword('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorPassword(false)\r\n      setErrorTextPassword('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validateEmail = (value) => {\r\n    let text = value !== undefined ? value : email\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorEmail(true)\r\n      setErrorTextEmail('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorEmail(false)\r\n      setErrorTextEmail('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validateMaintenanceCost = (value) => {\r\n    let text = value !== undefined ? value : maintenanceCost\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorMaintenanceCost(true)\r\n      setErrorTextMaintenanceCost('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorMaintenanceCost(false)\r\n      setErrorTextMaintenanceCost('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n\r\n  const handleDateChange = (date) => {\r\n    setExpirationDateMaintenance(date);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n\r\n    let errores = validateForm()\r\n\r\n    if (errores === 0) {\r\n\r\n      let data = {\r\n        name,\r\n        description,\r\n        username,\r\n        password,\r\n        expirationDateMaintenance,\r\n        'customer': customer._id,\r\n        maintenanceCost: parseFloat(maintenanceCost)\r\n      }\r\n\r\n      if (!props.centerOfAttention) {\r\n        createCenterOfAttention(data).then(response => {\r\n\r\n          if (response.status == 'success') {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: `El centro de atención ${name}  fue creado exitosamente`,\r\n              showConfirmButton: false,\r\n              timer: 1500\r\n            });\r\n            props.onCloseModal();\r\n            props.passCreateCenterOfAttention(response.centerOfAttention);\r\n          } else {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: `Ocurrió un error al crear el centro de atención ${name}`,\r\n              showConfirmButton: false,\r\n              timer: 1500\r\n            })\r\n          }\r\n\r\n        });\r\n\r\n      } else {\r\n\r\n        data.id = props.centerOfAttention._id;\r\n        updateCenterOfAttention(data).then(response => {\r\n          if (response.status == 'success') {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: `El centro de atención ${name}  fue actualizado exitosamente`,\r\n              showConfirmButton: false,\r\n              timer: 1500\r\n            });\r\n            props.onClose();\r\n            props.passCenterOfAttentionEdit(response.centerOfAttention);\r\n          } else {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: `Ocurrió un error al actualizar el centro de atención ${name}`,\r\n              showConfirmButton: false,\r\n              timer: 1500\r\n            })\r\n          }\r\n\r\n        });\r\n      }\r\n    } else {\r\n      toast.error('🦄 Wow so easy!', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <ToastContainer />\r\n      <Container maxWidth=\"md\">\r\n\r\n        <Paper className={classes.paper}>\r\n          <form encType={'multipart/form-data'}\r\n            onSubmit={e => {\r\n              e.preventDefault()\r\n              onSubmit()\r\n            }} >\r\n            <Grid container spacing={3}>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <Autocomplete\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  getOptionLabel={\r\n                    (option) => {\r\n                      return `${option.name.toString().toUpperCase()} `\r\n                    }\r\n                  }\r\n                  filterOptions={(x) => x}\r\n                  options={customers}\r\n                  // value={customer}\r\n                  // defaultValue={customers.length > 0 ? customers[1] : null}\r\n\r\n                  autoComplete\r\n                  getOptionSelected={(option, value) => option === value}\r\n                  onChange={(_, value) => {\r\n                    setCustomer(value);\r\n                  }}\r\n                  onInputChange={(_, newInputValue) => {\r\n                    if (newInputValue.toString().trim().length > 0) {\r\n                      let data = {\r\n                        search: newInputValue.toString().trim()\r\n                      }\r\n                      listCustomers(data).then(response => {\r\n                        setCustomers(response.customers);\r\n                      })\r\n                    }\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} label=\"Cliente\" variant=\"outlined\" margin=\"dense\" />\r\n                  )}\r\n                  renderTags={(tagValue, getTagProps) =>\r\n                    tagValue.map((option, index) => (\r\n                      <Chip\r\n                        label={option.name}\r\n                        {...getTagProps({ index })}\r\n                        disabled={customers.indexOf(option) !== -1}\r\n                      />\r\n                    ))\r\n                  }\r\n                  renderOption={(option) => {\r\n\r\n                    return (\r\n                      <Grid container alignItems=\"center\">\r\n                        <Grid item xs>\r\n                          <Typography >{`${option.name.toString().toUpperCase()}`}</Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    );\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  error={errorName}\r\n                  helperText={errorTextName}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Nombre del centro de atención\"\r\n                  value={name}\r\n                  onChange={onChangeName} />\r\n              </Grid>\r\n\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <TextField\r\n                  fullWidth\r\n                  error={errorDescription}\r\n                  helperText={errorTextDescription}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Descripción del centro de atención\"\r\n                  value={description}\r\n                  onChange={onChangeDescription} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    style={{ width: '100%' }}\r\n                    margin=\"normal\"\r\n                    label=\"Vencimiento mantenimiento\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    value={expirationDateMaintenance}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  error={errorMaintenanceCost}\r\n                  helperText={errorMaintenanceCost}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Costo del mantenimiento\"\r\n                  value={maintenanceCost}\r\n                  onChange={onChangeMaintenanceCost} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n\r\n                {\r\n                  !props.centerOfAttention ? <fieldset>\r\n                    <legend><Typography>Datos del oset</Typography></legend>\r\n                    <Grid container spacing={1}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          fullWidth\r\n                          error={errorUsername}\r\n                          helperText={errorTextUsername}\r\n                          margin=\"dense\"\r\n                          autoComplete='off'\r\n                          className={clsx(classes.margin, classes.textField)}\r\n                          variant=\"outlined\"\r\n                          label=\"Nombre de usuario\"\r\n                          value={username}\r\n                          onChange={onChangeUsername} />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                          fullWidth\r\n                          error={errorPassword}\r\n                          helperText={errorTextPassword}\r\n                          margin=\"dense\"\r\n                          autoComplete='off'\r\n                          className={clsx(classes.margin, classes.textField)}\r\n                          variant=\"outlined\"\r\n                          label=\"Contraseña\"\r\n                          value={password}\r\n                          onChange={onChangePassword} />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          error={errorEmail}\r\n                          helperText={errorTextEmail}\r\n                          margin=\"dense\"\r\n                          autoComplete='off'\r\n                          className={clsx(classes.margin, classes.textField)}\r\n                          variant=\"outlined\"\r\n                          label=\"Correo electrónico\"\r\n                          value={email}\r\n                          onChange={onChangeEmail} />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </fieldset>\r\n                    : ''\r\n                }\r\n              </Grid>\r\n\r\n              <Grid item xs={2} sm={3}>\r\n                <Button disabled={disabled} type=\"submit\" variant=\"contained\" color='primary'>\r\n                  {props.centerOfAttention ? \"Actualizar\" : \"Guardar\"}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CenterOfAttentionForm","import React, { useState, Fragment, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport CenterOfAttentionForm from \"./CenterOfAttentionForm\";\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { listCenterOfAttention, deleteCenterOfAttention, restoreCenterOfAttention } from '../../api/api';\r\n\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    iconWidth: {\r\n        width: 10\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    fab: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(1),\r\n        color: 'black'\r\n    },\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n})\r\n\r\n\r\n\r\nconst CenterOfAttention = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [centersOfAttention, setCentersOfAttention] = useState([])\r\n    const [totalCentersOfAttention, setTotalCentersOfAttention] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [page, setPage] = useState(0);\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [openRestoreRole, setOpenRestoreCenterOfAttention] = useState(false);\r\n    const [openEditRole, setOpenEditRole] = useState(false);\r\n    const [openCreateCenterOfAttention, setOpenCreateCenterOfAttention] = useState(false);\r\n    const [centerOfAttention, setCenterOfAttention] = useState({})\r\n\r\n    useEffect(() => {\r\n        let data = { start: 0, end: rowsPerPage }\r\n        listCenterOfAttention(data).then(response => {\r\n            setCentersOfAttention(response.centersOfAttention);\r\n            setTotalCentersOfAttention(response.count);\r\n        });\r\n    }, []);\r\n\r\n    const onOpenDeleteCenterOfAttention = centerOfAttention => () => {\r\n        setCenterOfAttention(centerOfAttention)\r\n        setOpen(true);\r\n    }\r\n    const onOpenRestoreCenterOfAttention = role => () => {\r\n        setCenterOfAttention(role)\r\n        setOpenRestoreCenterOfAttention(true);\r\n    }\r\n    const onCloseDisableCenterOfAttention = () => {\r\n        setOpen(false);\r\n    }\r\n    const onDisableCenterOfAttention = () => {\r\n        setOpen(false);\r\n\r\n        deleteCenterOfAttention(centerOfAttention._id).then(response => {\r\n            if (response.status === 'success') {\r\n                const newCentersOfAttention = centersOfAttention.map((currentCenterOfAttention) => {\r\n                    if (centerOfAttention._id !== currentCenterOfAttention._id)\r\n                        return currentCenterOfAttention\r\n\r\n                    currentCenterOfAttention.status = 'inactive'\r\n                    return currentCenterOfAttention\r\n                });\r\n                setCentersOfAttention(newCentersOfAttention)\r\n            }\r\n        });\r\n    }\r\n    const onRestoreCenterOfAttention = () => {\r\n\r\n        setOpenRestoreCenterOfAttention(false)\r\n\r\n        restoreCenterOfAttention(centerOfAttention._id).then(response => {\r\n            if (response.status === 'success') {\r\n                const newCentersOfAttention = centersOfAttention.map((currentRoles, index) => {\r\n\r\n                    if (centerOfAttention._id !== currentRoles._id)\r\n                        return currentRoles\r\n\r\n                    currentRoles.status = 'active'\r\n                    return currentRoles\r\n                })\r\n                setCentersOfAttention(newCentersOfAttention)\r\n            }\r\n        });\r\n    }\r\n    const onEditCenterOfAttention = role => () => {\r\n        setCenterOfAttention(role)\r\n        setOpenEditRole(true)\r\n    };\r\n    const onCloseEditCenterOfAttention = () => {\r\n        setOpenEditRole(false)\r\n    };\r\n    const onCloseRestoreRole = () => {\r\n        setOpenRestoreCenterOfAttention(false)\r\n    };\r\n    const onCreateCenterOfAttention = () => {\r\n        setOpenCreateCenterOfAttention(true)\r\n    }\r\n    const onCloseCreateCenterOfAttention = () => {\r\n        setOpenCreateCenterOfAttention(false)\r\n    }\r\n    const passCreateCenterOfAttention = centerOfAttention => {\r\n        setCentersOfAttention(centerOfAttentions => [...centerOfAttentions, centerOfAttention]);\r\n        setOpenCreateCenterOfAttention(false);\r\n    }\r\n    const passCenterOfAttentionEdit = centerOfAttention => {\r\n        setOpenEditRole(false);\r\n        const newCentersOfAttention = centersOfAttention.map((currentCenterOfAttention) => {\r\n\r\n            if (centerOfAttention._id !== currentCenterOfAttention._id)\r\n                return currentCenterOfAttention\r\n\r\n            currentCenterOfAttention = centerOfAttention;\r\n            return currentCenterOfAttention\r\n        })\r\n        setCentersOfAttention(newCentersOfAttention)\r\n    }\r\n    const handleChangePage = (e, newPage) => {\r\n        setPage(newPage);\r\n        let data = { start: (newPage * rowsPerPage), end: rowsPerPage }\r\n        listCenterOfAttention(data).then(response => {\r\n            setCentersOfAttention(response.centersOfAttention);\r\n            setTotalCentersOfAttention(response.count);\r\n\r\n        });\r\n    }\r\n    const handleChangeRowsPerPage = event => {\r\n\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n        let data = { start: 0, end: event.target.value }\r\n        listCenterOfAttention(data).then(response => {\r\n            setCentersOfAttention(response.centersOfAttention);\r\n            setTotalCentersOfAttention(response.count);\r\n        });\r\n\r\n    }\r\n    const onCloseModal = () => {\r\n        setOpenCreateCenterOfAttention(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Paper className={classes.paper}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={onCreateCenterOfAttention}>Crear centro de atención</Button>\r\n\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Nombre</TableCell>\r\n                            <TableCell>Descripción</TableCell>\r\n                            <TableCell>Cliente</TableCell>\r\n                            <TableCell align='right'>Costo mantenimiento</TableCell>\r\n                            <TableCell colSpan={4}>Acciones</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            centersOfAttention.map(centerOfAttention => {\r\n                                return (\r\n                                    <TableRow key={centerOfAttention._id}>\r\n                                        <TableCell>{centerOfAttention.title} </TableCell>\r\n                                        <TableCell>{centerOfAttention.description} </TableCell>\r\n                                        <TableCell>{centerOfAttention.customer.name} </TableCell>\r\n                                        <TableCell align='right'>\r\n                                            <NumberFormat value={centerOfAttention.maintenanceCost} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                        </TableCell>\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            {\r\n                                                !centerOfAttention.administrative ?\r\n                                                    <Tooltip title=\"Editar\" placement=\"top\">\r\n                                                        <EditIcon className={classes.icon} onClick={onEditCenterOfAttention(centerOfAttention)} />\r\n                                                    </Tooltip>\r\n                                                    : \"\"\r\n                                            }\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            {\r\n                                                <Tooltip title=\"Eliminar\" placement=\"top\">\r\n                                                    {\r\n                                                        centerOfAttention.status === 'active' ?\r\n                                                            <DeleteIcon className={classes.icon} onClick={onOpenDeleteCenterOfAttention(centerOfAttention)} />\r\n                                                            :\r\n                                                            <RestoreIcon className={classes.icon} onClick={onOpenRestoreCenterOfAttention(centerOfAttention)} />\r\n                                                    }\r\n                                                </Tooltip>\r\n                                            }\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>)\r\n                            }\r\n                            )}\r\n                    </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={totalCentersOfAttention}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={onCloseDisableCenterOfAttention}\r\n                aria-labelledby=\"draggable-dialog-title\">\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                    Alerta\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Esta seguro de desabilitar este centro de atención\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseDisableCenterOfAttention} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Button onClick={onDisableCenterOfAttention} color=\"primary\">\r\n                        SI\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={openRestoreRole}\r\n                onClose={onCloseRestoreRole}>\r\n                <DialogTitle style={{ cursor: 'move' }} >\r\n                    Alerta\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Esta seguro de reactivar a este centro de atención?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseRestoreRole} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Button onClick={onRestoreCenterOfAttention} color=\"primary\">\r\n                        SI\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog maxWidth=\"md\" open={openEditRole} onCloseEditCenterOfAttention={onCloseEditCenterOfAttention} TransitionComponent={Transition}>\r\n                <DialogContent>\r\n                    <CenterOfAttentionForm onClose={onCloseEditCenterOfAttention} centerOfAttention={centerOfAttention} passCenterOfAttentionEdit={passCenterOfAttentionEdit} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseEditCenterOfAttention} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={openCreateCenterOfAttention} onClose={onCloseCreateCenterOfAttention} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle>Crear centro de atención</DialogTitle>\r\n                <DialogContent>\r\n                    <CenterOfAttentionForm onCloseModal={onCloseModal} passCreateCenterOfAttention={passCreateCenterOfAttention} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCreateCenterOfAttention} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CenterOfAttention","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\n\nfunction getRelativeValue(value, min, max) {\n  return (Math.min(Math.max(min, value), max) - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1); // https://gist.github.com/gre/1650294\n\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n    '@keyframes circular-rotate': {\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = \"\".concat((easeIn((100 - value) / 100) * circumference).toFixed(3), \"px\");\n      rootStyle.transform = \"rotate(\".concat((easeOut(value / 70) * 270).toFixed(3), \"deg)\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends(_extends({\n      width: size,\n      height: size\n    }, rootStyle), style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'static'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);"],"sourceRoot":""}