{"version":3,"sources":["views/Roles/WebPermission.js","views/Roles/MobilePermission.js","views/Roles/AssignRole.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","height","minWidth","checkbox","width","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","margin","marginTop","chip","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","divider","paper","color","text","secondary","button","fab","float","extendedIcon","marginRight","formControl","WebPermission","useState","pages","setPages","roles","setRoles","classes","role","saved","values","setValues","useEffect","getRoles","then","response","prop","listMenu","getMenu","menus","onChangeMenu","idpage","indexParent","indexChild","event","console","log","target","checked","status","idrole","updateMenuRole","_","aux","children","push","length","i","splice","React","Container","Typography","Paper","className","onSubmit","e","preventDefault","roleName","Grid","container","direction","item","xs","TextField","fullWidth","select","clsx","textField","variant","label","value","onChange","map","option","MenuItem","key","_id","name","Table","TableBody","page","index","TableRow","TableCell","title","TableHead","Switch","includes","edge","subPage","indexSubPage","MobilePermission","updateMenu","AssingRole","setValue","TabContext","TabList","newValue","aria-label","Tab","TabPanel"],"mappings":"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","file":"static/js/24.adbf91c9.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport clsx from 'clsx';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Swal from 'sweetalert2'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { getRoles, getMenu, updateMenuRole } from '../../api/api';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250,\r\n        minWidth: 290\r\n    },\r\n    checkbox: {\r\n        width: 10\r\n    },\r\n    input: {\r\n        display: \"flex\",\r\n        padding: 0,\r\n        height: \"auto\"\r\n    },\r\n    valueContainer: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        overflow: \"hidden\"\r\n    },\r\n    margin: {\r\n        marginTop: 10\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5, 0.25)\r\n    },\r\n    chipFocused: {\r\n        backgroundColor: emphasize(\r\n            theme.palette.type === \"light\"\r\n                ? theme.palette.grey[300]\r\n                : theme.palette.grey[700],\r\n            0.08\r\n        )\r\n    },\r\n    noOptionsMessage: {\r\n        padding: theme.spacing(1, 2)\r\n    },\r\n    singleValue: {\r\n        fontSize: 16\r\n    },\r\n    placeholder: {\r\n        position: \"absolute\",\r\n        left: 2,\r\n        bottom: 6,\r\n        fontSize: 16\r\n    },\r\n\r\n    divider: {\r\n        height: theme.spacing(2)\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    button:\r\n    {\r\n        margin: theme.spacing(1),\r\n    },\r\n    fab:\r\n    {\r\n        marginTop: -2,\r\n        float: \"right\"\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst WebPermission = () => {\r\n\r\n    const [pages, setPages] = useState([]);\r\n    const [roles, setRoles] = useState([]);\r\n    const classes = useStyles();\r\n    const [values, setValues] = useState({\r\n        role: '',\r\n        saved: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        getRoles().then(response => {\r\n            setRoles(response.roles);\r\n        });\r\n    }, []);\r\n\r\n    const inputChange = prop => event => {\r\n        console.log('event.target.value => ', event.target.value);\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        listMenu();\r\n    }\r\n\r\n    const listMenu = () => {\r\n        getMenu({ type: \"web\" }).then(response => {\r\n            setPages(response.menus.pages);\r\n        });\r\n    }\r\n\r\n    const onChangeMenu = (idpage, indexParent, indexChild) => event => {\r\n        // console.log('onChnageMenu')\r\n        console.log('idpage', idpage)\r\n        console.log('checked', event.target.checked)\r\n        console.log('role', values.role)\r\n        let status = event.target.checked\r\n\r\n        const input = {\r\n            idpage,\r\n            idrole: values.role,\r\n            status: status\r\n        }\r\n\r\n\r\n        updateMenuRole(input).then(_ => {\r\n            let aux = pages\r\n            if (indexChild >= 0) {\r\n                if (status) {\r\n                    aux[indexParent].children[indexChild].roles.push(values.role)\r\n                }\r\n                else {\r\n                    console.log('length', aux[indexParent].children[indexChild].roles.length)\r\n                    for (let i = 0; i < aux[indexParent].children[indexChild].roles.length; i++) {\r\n\r\n                        console.log('role01', aux[indexParent].children[indexChild].roles[i])\r\n                        console.log('role02', values.role)\r\n                        if (aux[indexParent].children[indexChild].roles[i] === values.role)\r\n                            aux[indexParent].children[indexChild].roles.splice(i, 1)\r\n                    }\r\n                }\r\n\r\n            }\r\n            else {\r\n                console.log(\"index02\", indexParent)\r\n                console.log(\"status\", status)\r\n                if (status) {\r\n                    aux[indexParent].roles.push(values.role)\r\n                }\r\n                else {\r\n                    aux[indexParent].roles.splice(indexParent, 1)\r\n                }\r\n            }\r\n\r\n            setPages([...aux])\r\n        });\r\n\r\n    }\r\n\r\n\r\n    const onSubmitRole = e => {\r\n\r\n        const input = {\r\n            name: values.roleName,\r\n            status: true\r\n        }\r\n    }\r\n\r\n    const [value, setValue] = React.useState('1');\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <Typography><b>Permisos aplicación web</b></Typography>\r\n                <Paper className={classes.paper}>\r\n                    <form onSubmit={e => {\r\n                        e.preventDefault()\r\n                        onSubmitRole()\r\n                    }} >\r\n                        <Grid container spacing={1} direction=\"column\" >\r\n                            <Grid item xs={6} >\r\n                                <TextField\r\n                                    fullWidth\r\n                                    select\r\n                                    className={clsx(classes.margin, classes.textField)}\r\n                                    variant=\"outlined\"\r\n                                    label=\"Rol\"\r\n                                    value={values.role}\r\n                                    onChange={inputChange('role')}>\r\n                                    {\r\n                                        roles.map(option => (\r\n                                            <MenuItem key={option._id} value={option._id} >\r\n                                                {option.name}\r\n                                            </MenuItem>))\r\n\r\n                                    }\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n\r\n                <Grid item xs={12} >\r\n                    <Paper className={classes.paper}>\r\n                        {\r\n                            <Table>\r\n\r\n                                <TableBody>\r\n                                    {\r\n                                        pages.map(function (page, index) {\r\n\r\n                                            if (page.children.length <= 0) {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell>\r\n                                                            <fieldset>\r\n                                                                <legend> <Typography> {page.title} </Typography></legend>\r\n                                                                <Table>\r\n                                                                    <TableHead>\r\n                                                                        <TableRow>\r\n                                                                            <TableCell>{page.title}</TableCell>\r\n                                                                            <TableCell className={classes.checkbox}><Switch checked={page.roles.includes(values.role) ? true : false} edge=\"end\" onChange={onChangeMenu(page._id, index, -1)} /></TableCell>\r\n                                                                        </TableRow>\r\n                                                                    </TableHead>\r\n                                                                </Table>\r\n                                                            </fieldset>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            }\r\n                                            else {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell>\r\n                                                            <fieldset>\r\n                                                                <legend> <Typography>{page.title} </Typography></legend>\r\n                                                                <Table>\r\n                                                                    <TableHead>\r\n                                                                        <TableRow>\r\n                                                                            <TableCell>{page.title}</TableCell>\r\n                                                                            <TableCell><Switch edge=\"end\" checked={page.roles.includes(values.role) ? true : false} onChange={onChangeMenu(page._id, index, -1)} /></TableCell>\r\n                                                                        </TableRow>\r\n                                                                    </TableHead>\r\n                                                                    <TableBody>\r\n                                                                        {\r\n                                                                            page.children.map(function (subPage, indexSubPage) {\r\n                                                                                return (\r\n                                                                                    <TableRow key={indexSubPage}>\r\n                                                                                        <TableCell>{subPage.title}</TableCell>\r\n                                                                                        <TableCell className={classes.checkbox} ><Switch edge=\"end\" checked={subPage.roles.includes(values.role) ? true : false} onChange={onChangeMenu(subPage._id, index, indexSubPage)} /></TableCell>\r\n                                                                                    </TableRow>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </TableBody>\r\n                                                                </Table>\r\n                                                            </fieldset>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n\r\n\r\n                                                )\r\n\r\n                                            }\r\n\r\n                                        })\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default WebPermission","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport clsx from 'clsx';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Swal from 'sweetalert2'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { getRoles, getMenu, updateMenuRole } from '../../api/api';\r\nimport { updateMenu } from '../../utils/socket.io';\r\nimport { update } from 'lodash';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250,\r\n        minWidth: 290\r\n    },\r\n    checkbox: {\r\n        width: 10\r\n    },\r\n    input: {\r\n        display: \"flex\",\r\n        padding: 0,\r\n        height: \"auto\"\r\n    },\r\n    valueContainer: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        overflow: \"hidden\"\r\n    },\r\n    margin: {\r\n        marginTop: 10\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5, 0.25)\r\n    },\r\n    chipFocused: {\r\n        backgroundColor: emphasize(\r\n            theme.palette.type === \"light\"\r\n                ? theme.palette.grey[300]\r\n                : theme.palette.grey[700],\r\n            0.08\r\n        )\r\n    },\r\n    noOptionsMessage: {\r\n        padding: theme.spacing(1, 2)\r\n    },\r\n    singleValue: {\r\n        fontSize: 16\r\n    },\r\n    placeholder: {\r\n        position: \"absolute\",\r\n        left: 2,\r\n        bottom: 6,\r\n        fontSize: 16\r\n    },\r\n\r\n    divider: {\r\n        height: theme.spacing(2)\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    button:\r\n    {\r\n        margin: theme.spacing(1),\r\n    },\r\n    fab:\r\n    {\r\n        marginTop: -2,\r\n        float: \"right\"\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst MobilePermission = () => {\r\n\r\n    const [pages, setPages] = useState([]);\r\n    const [roles, setRoles] = useState([]);\r\n    const classes = useStyles();\r\n    const [values, setValues] = useState({\r\n        role: '',\r\n        saved: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        getRoles().then(response => {\r\n            setRoles(response.roles);\r\n        });\r\n    }, []);\r\n\r\n    const inputChange = prop => event => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        listMenu();\r\n    }\r\n\r\n    const listMenu = () => {\r\n        getMenu({ type: \"mobile\" }).then(response => {\r\n            setPages(response.menus.pages);\r\n        });\r\n    }\r\n\r\n    const onChangeMenu = (idpage, indexParent, indexChild) => event => {\r\n\r\n        let status = event.target.checked\r\n        const input = {\r\n            idpage,\r\n            idrole: values.role,\r\n            status: status\r\n        }\r\n\r\n        console.log(\"::::::::::::::::::::::::::::::::::::::::::::::\");\r\n        updateMenu(input);\r\n\r\n        updateMenuRole(input).then(_ => {\r\n            let aux = pages\r\n            if (indexChild >= 0) {\r\n                if (status) {\r\n                    aux[indexParent].children[indexChild].roles.push(values.role)\r\n                }\r\n                else {\r\n                    console.log('length', aux[indexParent].children[indexChild].roles.length)\r\n                    for (let i = 0; i < aux[indexParent].children[indexChild].roles.length; i++) {\r\n\r\n                        console.log('role01', aux[indexParent].children[indexChild].roles[i])\r\n                        console.log('role02', values.role)\r\n                        if (aux[indexParent].children[indexChild].roles[i] === values.role)\r\n                            aux[indexParent].children[indexChild].roles.splice(i, 1)\r\n                    }\r\n                }\r\n\r\n            }\r\n            else {\r\n                console.log(\"index02\", indexParent)\r\n                console.log(\"status\", status)\r\n                if (status) {\r\n                    aux[indexParent].roles.push(values.role)\r\n                }\r\n                else {\r\n                    aux[indexParent].roles.splice(indexParent, 1)\r\n                }\r\n            }\r\n\r\n            setPages([...aux])\r\n        });\r\n\r\n    }\r\n\r\n\r\n    const onSubmitRole = e => {\r\n\r\n        const input = {\r\n            name: values.roleName,\r\n            status: true\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <Typography> <b>Permisos aplicación movil</b></Typography>\r\n                <Paper className={classes.paper}>\r\n                    <form onSubmit={e => {\r\n                        e.preventDefault()\r\n                        onSubmitRole()\r\n                    }} >\r\n                        <Grid container spacing={1} direction=\"column\" >\r\n                            <Grid item xs={6} >\r\n                                <TextField\r\n                                    fullWidth\r\n                                    select\r\n                                    className={clsx(classes.margin, classes.textField)}\r\n                                    variant=\"outlined\"\r\n                                    label=\"Rol\"\r\n                                    value={values.role}\r\n                                    onChange={inputChange('role')}>\r\n                                    {\r\n                                        roles.map(option => (\r\n                                            <MenuItem key={option._id} value={option._id} >\r\n                                                {option.name}\r\n                                            </MenuItem>))\r\n\r\n                                    }\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n\r\n                <Grid item xs={12} >\r\n                    <Paper className={classes.paper}>\r\n                        {\r\n                            <Table>\r\n\r\n                                <TableBody>\r\n                                    {\r\n                                        pages.map(function (page, index) {\r\n\r\n                                            if (page.children.length <= 0) {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell>\r\n                                                            <fieldset>\r\n                                                                <legend> <Typography> {page.title} </Typography></legend>\r\n                                                                <Table>\r\n                                                                    <TableHead>\r\n                                                                        <TableRow>\r\n                                                                            <TableCell>{page.title}</TableCell>\r\n                                                                            <TableCell className={classes.checkbox}><Switch checked={page.roles.includes(values.role) ? true : false} edge=\"end\" onChange={onChangeMenu(page._id, index, -1)} /></TableCell>\r\n                                                                        </TableRow>\r\n                                                                    </TableHead>\r\n                                                                </Table>\r\n                                                            </fieldset>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            }\r\n                                            else {\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell>\r\n                                                            <fieldset>\r\n                                                                <legend> <Typography>{page.title} </Typography></legend>\r\n                                                                <Table>\r\n                                                                    <TableHead>\r\n                                                                        <TableRow>\r\n                                                                            <TableCell>{page.title}</TableCell>\r\n                                                                            <TableCell><Switch edge=\"end\" checked={page.roles.includes(values.role) ? true : false} onChange={onChangeMenu(page._id, index, -1)} /></TableCell>\r\n                                                                        </TableRow>\r\n                                                                    </TableHead>\r\n                                                                    <TableBody>\r\n                                                                        {\r\n                                                                            page.children.map(function (subPage, indexSubPage) {\r\n                                                                                return (\r\n                                                                                    <TableRow key={indexSubPage}>\r\n                                                                                        <TableCell>{subPage.title}</TableCell>\r\n                                                                                        <TableCell className={classes.checkbox} ><Switch edge=\"end\" checked={subPage.roles.includes(values.role) ? true : false} onChange={onChangeMenu(subPage._id, index, indexSubPage)} /></TableCell>\r\n                                                                                    </TableRow>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </TableBody>\r\n                                                                </Table>\r\n                                                            </fieldset>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n\r\n\r\n                                                )\r\n\r\n                                            }\r\n\r\n                                        })\r\n                                    }\r\n                                </TableBody>\r\n                            </Table>\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MobilePermission","import React, { Fragment } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabList from '@material-ui/lab/TabList';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport WebPermission from './WebPermission';\r\nimport MobilePermission from \"./MobilePermission\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 250,\r\n        minWidth: 290\r\n    },\r\n    checkbox: {\r\n        width: 10\r\n    },\r\n    input: {\r\n        display: \"flex\",\r\n        padding: 0,\r\n        height: \"auto\"\r\n    },\r\n    valueContainer: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        overflow: \"hidden\"\r\n    },\r\n    margin: {\r\n        marginTop: 10\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5, 0.25)\r\n    },\r\n    chipFocused: {\r\n        backgroundColor: emphasize(\r\n            theme.palette.type === \"light\"\r\n                ? theme.palette.grey[300]\r\n                : theme.palette.grey[700],\r\n            0.08\r\n        )\r\n    },\r\n    noOptionsMessage: {\r\n        padding: theme.spacing(1, 2)\r\n    },\r\n    singleValue: {\r\n        fontSize: 16\r\n    },\r\n    placeholder: {\r\n        position: \"absolute\",\r\n        left: 2,\r\n        bottom: 6,\r\n        fontSize: 16\r\n    },\r\n\r\n    divider: {\r\n        height: theme.spacing(2)\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    button:\r\n    {\r\n        margin: theme.spacing(1),\r\n    },\r\n    fab:\r\n    {\r\n        marginTop: -2,\r\n        float: \"right\"\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst AssingRole = () => {\r\n\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('1');\r\n\r\n    const handleChange = (_, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.root}>\r\n                <TabContext value={value}>\r\n                    <TabList onChange={handleChange} aria-label=\"simple tabs example\">\r\n                        <Tab label=\"Permisos aplicación web\" value=\"1\" />\r\n                        <Tab label=\"Permisos aplicación movil\" value=\"2\" />\r\n                        <Tab label=\"Notificaciones\" value=\"3\" />\r\n                    </TabList>\r\n                    <TabPanel value=\"1\">\r\n                        <WebPermission />\r\n                    </TabPanel>\r\n                    <TabPanel value=\"2\">\r\n                        <MobilePermission />\r\n                    </TabPanel>\r\n                    <TabPanel value=\"3\">Item Three</TabPanel>\r\n                </TabContext>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AssingRole"],"sourceRoot":""}