{"version":3,"sources":["views/Customer/CustomerDetail.js","views/Customer/CustomerForm.js","views/Customer/Customers.js","../node_modules/@material-ui/core/esm/Container/Container.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","height","minWidth","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","chip","margin","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","divider","paper","color","text","secondary","button","fab","marginTop","float","extendedIcon","marginRight","formControl","CustomerDetail","props","console","log","classes","useState","Card","CardHeader","title","Divider","CardContent","className","content","Table","TableBody","TableRow","TableCell","customer","name","selected","nit","address","phone","email","CustomerForm","useEffect","setName","setNit","setAddress","setPhone","setEmail","disabled","username","setUsername","password","setPassword","setErrorUsername","setErrorTextUsername","setErrorPassword","setErrorTextPassword","errorName","setErrorName","errorTextName","setErrorTextName","errorNit","setErrorNit","errorTextNit","setErrorTextNit","errorEmail","setErrorEmail","errorTextEmail","setErrorTextEmail","validateName","value","undefined","toString","trim","validateNit","validateEmail","validateUsername","validatePassword","onSubmitCustomer","_","errors","validateForm","data","id","_id","updateCustomer","then","response","status","toast","info","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","onCloseModal","onUpdateCustomers","error","createCustomer","message","Container","maxWidth","Paper","encType","onSubmit","e","preventDefault","Grid","container","item","xs","sm","TextField","fullWidth","helperText","autoComplete","clsx","textField","variant","label","onChange","target","Button","iconWidth","width","icon","DialogTitle","withStyles","closeButton","right","top","children","onClose","other","disableTypography","Typography","IconButton","aria-label","onClick","Transition","React","forwardRef","ref","Slide","direction","Customers","start","end","rowsPerPage","paginate","listCustomers","setCustomers","customers","setTotalCustomers","count","totalCustomers","page","setPage","setRowsPerPage","open","setOpen","openRestoreCustomer","setOpenRestoreCustomer","openDetailCustomer","setOpenDetailCustomer","openEditCustomer","setOpenEditCustomer","openCreateCustomer","setOpenCreateCustomer","setCustomerSelected","onOpenRestoreCustomer","onCloseDeleteCustomer","onDetailCustomer","closeDetailCustomer","onEditCustomer","onCloseEditCustomer","onCloseRestoreCustomer","onCloseCreateCustomer","Fab","size","TableHead","map","key","Tooltip","placement","TablePagination","rowsPerPageOptions","component","onChangePage","event","newPage","onChangeRowsPerPage","Dialog","aria-labelledby","style","cursor","DialogContent","DialogContentText","DialogActions","autoFocus","deleteCustomer","success","newCustomers","currentCustomer","catch","restoreCustomer","estado","TransitionComponent","handleClose","modal","_props$component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","_objectWithoutProperties","_extends","concat","capitalize","String","_defineProperty","marginLeft","boxSizing","paddingLeft","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","maxWidthXs","Math","max","maxWidthSm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl"],"mappings":"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","file":"static/js/13.fece7fb5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250,\r\n    minWidth: 290\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n\r\n  },\r\n  button:\r\n  {\r\n    margin: theme.spacing(1),\r\n  },\r\n  fab:\r\n  {\r\n    marginTop: -2,\r\n    float: \"right\"\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst CustomerDetail = props => {\r\n\r\n  console.log('props', props)\r\n\r\n  const classes = useStyles()\r\n\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n\r\n  const handleEditOpen = () => {\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleEditClose = () => {\r\n    setOpenEdit(false);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Detalle Usuario\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Nombres</TableCell>\r\n              <TableCell>{props.customer.name}</TableCell>\r\n            </TableRow>\r\n            <TableRow selected>\r\n              <TableCell>Nit</TableCell>\r\n              <TableCell>{props.customer.nit}</TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow>\r\n              <TableCell>Dirección</TableCell>\r\n              <TableCell>{props.customer.address}</TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow selected>\r\n              <TableCell>Telefono</TableCell>\r\n              <TableCell>{props.customer.phone}</TableCell>\r\n            </TableRow>\r\n\r\n\r\n            <TableRow>\r\n              <TableCell>Correo electrónico</TableCell>\r\n              <TableCell>{props.customer.email}</TableCell>\r\n            </TableRow>\r\n\r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CustomerDetail","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { emphasize, makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport clsx from 'clsx'\r\n\r\nimport { Button } from '@material-ui/core'\r\nimport { DropzoneArea } from 'material-ui-dropzone'\r\n\r\nimport PropTypes from \"prop-types\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport { createCustomer, updateCustomer } from '../../api/api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250,\r\n    minWidth: 290\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    height: \"auto\"\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n\r\n  },\r\n  button:\r\n  {\r\n    margin: theme.spacing(1),\r\n  },\r\n  fab:\r\n  {\r\n    marginTop: -2,\r\n    float: \"right\"\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([\r\n    PropTypes.func,\r\n    PropTypes.shape({\r\n      current: PropTypes.any.isRequired\r\n    })\r\n  ])\r\n}\r\nconst CustomerForm = props => {\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(props)\r\n\r\n    if (props.customer) {\r\n      setName(props.customer.name);\r\n      setNit(props.customer.nit);\r\n      setAddress(props.customer.address);\r\n      setPhone(props.customer.phone);\r\n      setEmail(props.customer.email);\r\n    }\r\n  }, [])\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const classes = useStyles()\r\n\r\n\r\n  const [name, setName] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [nit, setNit] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  const [errorUsername, setErrorUsername] = useState(false)\r\n  const [errorTextUsername, setErrorTextUsername] = useState('')\r\n\r\n  const [errorPassword, setErrorPassword] = useState(false)\r\n  const [errorTextPassword, setErrorTextPassword] = useState('')\r\n\r\n  const [errorName, setErrorName] = useState(false)\r\n  const [errorTextName, setErrorTextName] = useState('')\r\n\r\n  const [errorNit, setErrorNit] = useState(false)\r\n  const [errorTextNit, setErrorTextNit] = useState('')\r\n\r\n  const [errorAddress, setErrorAddress] = useState(false)\r\n  const [errorTextAddress, setErrorTextAddress] = useState('')\r\n\r\n  const [errorPhone, setErrorPhone] = useState(false)\r\n  const [errorTextPhone, setErrorTextPhone] = useState('')\r\n\r\n  const [errorEmail, setErrorEmail] = useState(false)\r\n  const [errorTextEmail, setErrorTextEmail] = useState('')\r\n\r\n  const onChangeName = e => {\r\n    setName(e.target.value);\r\n    validateName(e.target.value);\r\n  }\r\n  const onChangeNit = e => {\r\n    setNit(e.target.value);\r\n    validateNit(e.target.value);\r\n  }\r\n  const onChangeAddress = e => {\r\n    setAddress(e.target.value)\r\n  }\r\n  const onChangePhone = e => {\r\n    setPhone(e.target.value)\r\n  }\r\n  const onChangeEmail = e => {\r\n    setEmail(e.target.value)\r\n  }\r\n  const onChangeUsername = e => {\r\n    setUsername(e.target.value);\r\n    validateUsername(e.target.value);\r\n  }\r\n  const onChangePassword = e => {\r\n    setPassword(e.target.value);\r\n    validatePassword(e.target.value);\r\n  }\r\n  const validateForm = () => {\r\n    let errors = 0\r\n    errors += validateName()\r\n    errors += validateEmail()\r\n    errors += validateNit()\r\n    return errors\r\n  }\r\n\r\n  const validateName = (value) => {\r\n    let text = value !== undefined ? value : name\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorName(true)\r\n      setErrorTextName('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorName(false)\r\n      setErrorTextName('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validateNit = (value) => {\r\n    let text = value !== undefined ? value : nit\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorNit(true)\r\n      setErrorTextNit('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorNit(false)\r\n      setErrorTextNit('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validateEmail = (value) => {\r\n    let text = value !== undefined ? value : email\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorEmail(true)\r\n      setErrorTextEmail('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorEmail(false)\r\n      setErrorTextEmail('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validateUsername = (value) => {\r\n    let text = value !== undefined ? value : username\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorUsername(true)\r\n      setErrorTextUsername('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorUsername(false)\r\n      setErrorTextUsername('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const validatePassword = (value) => {\r\n    let text = value !== undefined ? value : password\r\n\r\n    if (text == null || text.toString().trim() === '') {\r\n      setErrorPassword(true)\r\n      setErrorTextPassword('Este campo es requerido')\r\n      return 1\r\n    }\r\n    else {\r\n      setErrorPassword(false)\r\n      setErrorTextPassword('')\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const onSubmitCustomer = _ => {\r\n\r\n    let errores = validateForm()\r\n\r\n    if (errores === 0) {\r\n\r\n      let data = {\r\n        name,\r\n        nit,\r\n        address,\r\n        phone,\r\n        email,\r\n        username,\r\n        password,\r\n      }\r\n\r\n      if (!props.customer) {\r\n        createCustomer(data).then(response => {\r\n          console.log('response', response);\r\n          if (response.status == 'success') {\r\n            toast.info('Cliente registrado exitosamente', {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n            props.onCloseModal(true);\r\n            props.onUpdateCustomers();\r\n          } else {\r\n            toast.error(response.message, {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n          }\r\n\r\n        });\r\n\r\n      } else {\r\n        data.id = props.customer._id;\r\n        updateCustomer(data).then(response => {\r\n          console.log('response', response);\r\n          if (response.status == 'success') {\r\n            toast.info('Cliente actualizado exitosamente', {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n            props.onCloseModal(true);\r\n            props.onUpdateCustomers();\r\n          } else {\r\n            toast.error('Ocurrió un error al registrar el cliente', {\r\n              position: \"top-right\",\r\n              autoClose: 5000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n          }\r\n\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <ToastContainer />\r\n      <Container maxWidth=\"md\">\r\n\r\n        <Paper className={classes.paper}>\r\n          <form encType={'multipart/form-data'}\r\n            onSubmit={e => {\r\n              e.preventDefault()\r\n              onSubmitCustomer()\r\n            }} >\r\n            <Grid container spacing={3}>\r\n\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  error={errorName}\r\n                  helperText={errorTextName}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Nombre\"\r\n                  value={name}\r\n                  onChange={onChangeName} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  error={errorNit}\r\n                  helperText={errorTextNit}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  value={nit}\r\n                  onChange={onChangeNit}\r\n                  label=\"Nit\" />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Direccion\"\r\n                  value={address}\r\n                  onChange={onChangeAddress} />\r\n              </Grid>\r\n\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Telefono\"\r\n                  value={phone}\r\n                  onChange={onChangePhone} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  error={errorEmail}\r\n                  helperText={errorTextEmail}\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  id=\"outlined-simple-start-adornment\"\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  value={email}\r\n                  label=\"Correo\"\r\n                  onChange={onChangeEmail} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Nombre de usuario\"\r\n                  value={username}\r\n                  onChange={onChangeUsername} />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  autoComplete='off'\r\n                  className={clsx(classes.margin, classes.textField)}\r\n                  variant=\"outlined\"\r\n                  label=\"Contraseña\"\r\n                  value={password}\r\n                  onChange={onChangePassword} />\r\n              </Grid>\r\n\r\n\r\n\r\n\r\n\r\n              <Grid item xs={2} sm={12}>\r\n                <Button disabled={disabled} type=\"submit\" variant=\"contained\" color='primary'>\r\n                  {props.customer ? \"Actualizar\" : \"Guardar\"}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CustomerForm","import React, { useState, useEffect, Fragment } from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport CustomerDetail from './CustomerDetail'\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport CustomerForm from \"../Customer/CustomerForm\";\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { deleteCustomer, restoreCustomer, listCustomers } from '../../api/api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    iconWidth: {\r\n        width: 10\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: 10,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    fab: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(1),\r\n        color: 'black'\r\n    },\r\n}))\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n})\r\n\r\n\r\n\r\nconst Customers = _ => {\r\n\r\n    useEffect(() => {\r\n        let data = { start: 0, end: rowsPerPage, paginate: true }\r\n        listCustomers(data).then(response => {\r\n            setCustomers(response.customers);\r\n            setTotalCustomers(response.count);\r\n        });\r\n    }, []);\r\n\r\n    const classes = useStyles()\r\n\r\n    const [customers, setCustomers] = useState([])\r\n    const [totalCustomers, setTotalCustomers] = useState(0)\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [openRestoreCustomer, setOpenRestoreCustomer] = useState(false);\r\n    const [openDetailCustomer, setOpenDetailCustomer] = useState(false);\r\n    const [openEditCustomer, setOpenEditCustomer] = useState(false);\r\n    const [openCreateCustomer, setOpenCreateCustomer] = useState(false);\r\n    const [customer, setCustomerSelected] = useState({})\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n        let data = { start: (newPage * rowsPerPage), end: rowsPerPage, paginate: true }\r\n        listCustomers(data).then(response => {\r\n            setCustomers(response.customers);\r\n            setTotalCustomers(response.count);\r\n        });\r\n    }\r\n    const handleChangeRowsPerPage = event => {\r\n\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n        let data = { start: 0, end: event.target.value, paginate: true }\r\n        listCustomers(data).then(response => {\r\n            setCustomers(response.customers);\r\n            setTotalCustomers(response.count);\r\n        });\r\n\r\n    }\r\n\r\n    const onUpdateCustomers = () => {\r\n        listCustomers().then(response => {\r\n            console.log(response);\r\n            setCustomers(response.customers);\r\n            setTotalCustomers(response.count);\r\n        });\r\n    }\r\n\r\n    const onOpenDeleteCustomer = id => () => {\r\n        setCustomerSelected(id)\r\n        setOpen(true);\r\n    }\r\n\r\n    const onOpenRestoreCustomer = id => () => {\r\n        setCustomerSelected(id)\r\n        setOpenRestoreCustomer(true);\r\n    }\r\n\r\n    const onCloseDeleteCustomer = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const onDeleteCustomer = () => {\r\n        setOpen(false);\r\n\r\n        deleteCustomer(customer).then(response => {\r\n            if (response.status === 'success') {\r\n                toast.success(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                const newCustomers = customers.map((currentCustomer) => {\r\n                    if (customer !== currentCustomer._id)\r\n                        return currentCustomer\r\n\r\n                    currentCustomer.status = \"inactivo\";\r\n                    return currentCustomer\r\n                })\r\n                setCustomers(newCustomers)\r\n            } else {\r\n                toast.error(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }).catch(e => {\r\n\r\n            toast.error('Ocurrió un error al desactivar el cliente', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        })\r\n\r\n    }\r\n\r\n    const onRestoreCustomer = () => {\r\n\r\n        setOpenRestoreCustomer(false)\r\n\r\n        restoreCustomer(customer).then(response => {\r\n            if (response.status === 'success') {\r\n                toast.success(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                const newCustomers = customers.map((currentCustomer) => {\r\n                    if (customer !== currentCustomer._id)\r\n                        return currentCustomer\r\n\r\n                    currentCustomer.estado = \"activo\";\r\n                    return currentCustomer\r\n                })\r\n                setCustomers(newCustomers)\r\n            } else {\r\n                toast.error(response.message, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }).catch(e => {\r\n            toast.error('Ocurrió un error al activar el cliente', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        })\r\n    }\r\n\r\n    const onDetailCustomer = customer => () => {\r\n        setCustomerSelected(customer)\r\n        setOpenDetailCustomer(true)\r\n    }\r\n\r\n    const closeDetailCustomer = () => {\r\n        setOpenDetailCustomer(false)\r\n    }\r\n\r\n    const onEditCustomer = customer => () => {\r\n        setCustomerSelected(customer)\r\n        setOpenEditCustomer(true)\r\n    };\r\n    const onCloseEditCustomer = () => {\r\n        setOpenEditCustomer(false)\r\n    };\r\n    const onCloseRestoreCustomer = () => {\r\n        setOpenRestoreCustomer(false)\r\n    };\r\n\r\n    const onCreateCustomer = () => {\r\n        setOpenCreateCustomer(true)\r\n    }\r\n    const onCloseCreateCustomer = () => {\r\n        setOpenCreateCustomer(false)\r\n    }\r\n    const onCloseModal = () => {\r\n        setOpenCreateCustomer(false);\r\n        setOpenEditCustomer(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            <Paper className={classes.paper}>\r\n                <Fab onClick={onCreateCustomer} variant=\"extended\" color=\"primary\" size=\"small\" className={classes.margin}>\r\n                    <AddIcon className={classes.extendedIcon} />\r\n                    Nuevo cliente\r\n                </Fab>\r\n\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>NOMBRE</TableCell>\r\n                            <TableCell>NIT</TableCell>\r\n                            <TableCell>DIRECCION</TableCell>\r\n                            <TableCell>TELEFONO</TableCell>\r\n                            <TableCell>CORREO</TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            customers.map(item => {\r\n\r\n                                return (\r\n                                    <TableRow key={item._id}>\r\n                                        <TableCell>{item.name} </TableCell>\r\n                                        <TableCell>{item.nit}</TableCell>\r\n                                        <TableCell>{item.address}</TableCell>\r\n                                        <TableCell>{item.phone}</TableCell>\r\n                                        <TableCell>{item.email}</TableCell>\r\n\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            <Tooltip title=\"Detalle\" placement=\"top\">\r\n                                                <SearchIcon className={classes.icon} onClick={onDetailCustomer(item)} />\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            <Tooltip title=\"Editar\" placement=\"top\">\r\n                                                <EditIcon className={classes.icon} onClick={onEditCustomer(item)} />\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.iconWidth}>\r\n                                            <Tooltip title={'Eliminar'} placement=\"top\">\r\n                                                {\r\n                                                    item.status === 'activo' ?\r\n                                                        <DeleteIcon className={classes.icon} onClick={onOpenDeleteCustomer(item._id)} />\r\n                                                        :\r\n                                                        <RestoreIcon className={classes.icon} onClick={onOpenRestoreCustomer(item._id)} />\r\n                                                }\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                    </TableRow>)\r\n                            }\r\n                            )}\r\n                    </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={totalCustomers}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={onCloseDeleteCustomer}\r\n                aria-labelledby=\"draggable-dialog-title\">\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                    Alerta\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Esta seguro de desabilitar este cliente?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseDeleteCustomer} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Button onClick={onDeleteCustomer} color=\"primary\">\r\n                        SI\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={openRestoreCustomer}\r\n                onClose={onCloseRestoreCustomer}\r\n                aria-labelledby=\"draggable-dialog-title\">\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                    Alerta\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Esta seguro de habilitar este cliente?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseRestoreCustomer} color=\"primary\">\r\n                        NO\r\n                    </Button>\r\n                    <Button onClick={onRestoreCustomer} color=\"primary\">\r\n                        SI\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={openDetailCustomer} onClose={closeDetailCustomer} TransitionComponent={Transition}>\r\n                <DialogContent>\r\n                    <CustomerDetail customer={customer} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={closeDetailCustomer} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog maxWidth=\"md\" open={openEditCustomer} onClose={onCloseEditCustomer} TransitionComponent={Transition}>\r\n                <DialogContent>\r\n                    <CustomerForm onCloseModal={onCloseModal} onUpdateCustomers={onUpdateCustomers} customer={customer} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={onCloseEditCustomer} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                fullWidth={true}\r\n                maxWidth=\"md\"\r\n                open={openCreateCustomer}>\r\n                <DialogTitle onClose={onCloseCreateCustomer} >Crear cliente</DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <CustomerForm handleClose={onCloseCreateCustomer} onCloseModal={onCloseModal} onUpdateCustomers={onUpdateCustomers} modal={true} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onCloseCreateCustomer} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Fragment>)\r\n}\r\n\r\nexport default Customers","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);"],"sourceRoot":""}