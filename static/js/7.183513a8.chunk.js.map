{"version":3,"sources":["views/Projects/ImageDetail.js","views/Projects/BoardDetail.js","views/Projects/ProjectForm.js","views/Projects/Projects.js"],"names":["ImageDetail","props","useState","url","setUrl","useEffect","src","zoomSrc","useStyles","makeStyles","theme","root","flexGrow","height","minWidth","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","chip","margin","spacing","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","divider","paper","color","text","secondary","button","fab","marginTop","float","extendedIcon","marginRight","formControl","Transition","React","forwardRef","ref","Slide","direction","AttentionDetail","project","setProject","setBoards","setType","board","setBoard","cellsBefore","setCellsBefore","cellsVoltaje","setCellsVoltaje","setCellsCorriente","cellsAfter","setCellsAfter","openDetailImage","setOpenDetailImage","boards","onSelectBoard","_","console","log","newItemsBoard","itemsBoards","map","item","photos","length","tmpCellsBefore","filter","itemBoard","mode","tmpCellsVoltaje","tmpCellsCorriente","tmpCellsAfter","showImages","onOpenItemBoard","currentCell","openItemBoard","_id","then","response","status","cell","closeDatailImage","classes","Card","CardHeader","title","Divider","CardContent","className","content","Table","TableBody","TableRow","TableCell","i","key","Chip","size","label","name","variant","onClick","onSendEmailBoard","sendEmailBoard","itemBefore","letterOne","style","colorOne","photo","index","width","config","urlImages","itemVoltaje","textColorOne","colorTwo","textColorTwo","letterTwo","value","Dialog","fullWidth","maxWidth","open","onClose","TransitionComponent","DialogContent","DialogActions","Button","autoFocus","ProjectForm","listCustomers","setCustomers","customers","person","disabled","customer","setCustomer","description","setDescription","errorDescription","setErrorDescription","errorTextDescription","setErrorTextDescription","validateDescription","undefined","toString","trim","onSubmitPerson","errors","validateForm","data","updateUser","toast","info","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","error","createProject","Container","Paper","encType","onSubmit","e","preventDefault","Grid","container","xs","sm","TextField","select","clsx","textField","onChange","target","MenuItem","Autocomplete","getOptionLabel","option","toUpperCase","filterOptions","x","options","autoComplete","getOptionSelected","onInputChange","newInputValue","search","renderInput","params","renderTags","tagValue","getTagProps","indexOf","renderOption","Typography","helperText","id","iconWidth","icon","DialogTitle","withStyles","closeButton","right","top","children","other","disableTypography","IconButton","aria-label","Projects","listProjects","setProjects","projects","setTotalProjects","count","totalProjects","page","setPage","rowsPerPage","setRowsPerPage","setOpen","openDetailBoards","setOpenDetailBoards","openProjectForm","setOpenProjectForm","onCloseDeleteProject","onDetailBoard","closeDatailBoards","onCloseProjectForm","Fab","TableHead","Tooltip","placement","TablePagination","rowsPerPageOptions","component","onChangePage","newPage","onChangeRowsPerPage","event","aria-labelledby","cursor","DialogContentText","deleteProject","success","message","newProjects","currentProject","catch","BoardDetail"],"mappings":"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","file":"static/js/7.183513a8.chunk.js","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react'\n\nimport InnerImageZoom from 'react-inner-image-zoom';\nimport 'react-inner-image-zoom/lib/InnerImageZoom/styles.min.css';\n\n\n\nconst ImageDetail = props => {\n\n    const [url, setUrl] = useState('');\n\n    useEffect(() => {\n\n        setUrl(props.url);\n    }, [props.url]);\n\n    return (\n        <div >\n            {\n                url ?\n                    <InnerImageZoom src={url} zoomSrc={url} />\n                    : ''\n            }\n        </div>\n    )\n}\n\nexport default ImageDetail","import React, { useState, useEffect, Fragment } from 'react'\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\n\nimport Chip from '@material-ui/core/Chip';\nimport config from '../../config';\nimport './projects.css';\nimport { Zoom } from \"react-slideshow-image\";\n\nimport 'react-slideshow-image/dist/styles.css';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Slide from '@material-ui/core/Slide';\n\nimport ImageDetail from './ImageDetail';\nimport { BiShowAlt } from 'react-icons/bi';\nimport { AiOutlineMail } from 'react-icons/ai';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Button,\n} from '@material-ui/core';\n\nimport { openItemBoard, onSendEmailBoard } from '../../api/api';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n    minWidth: 290\n  },\n  input: {\n    display: \"flex\",\n    padding: 0,\n    height: \"auto\"\n  },\n  valueContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flex: 1,\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: theme.spacing(1, 2)\n  },\n  singleValue: {\n    fontSize: 16\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 2,\n    bottom: 6,\n    fontSize: 16\n  },\n\n  divider: {\n    height: theme.spacing(2)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n\n  },\n  button:\n  {\n    margin: theme.spacing(1),\n  },\n  fab:\n  {\n    marginTop: -2,\n    float: \"right\"\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}))\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n})\n\nconst AttentionDetail = props => {\n\n  const [project, setProject] = useState(null);\n  const [boards, setBoards] = useState([]);\n  const [type, setType] = useState(\"\");\n  const [board, setBoard] = useState(null);\n  const [cellsBefore, setCellsBefore] = useState([]);\n  const [cellsVoltaje, setCellsVoltaje] = useState([]);\n  const [cellsCorriente, setCellsCorriente] = useState([]);\n  const [cellsAfter, setCellsAfter] = useState([]);\n  const [openDetailImage, setOpenDetailImage] = useState(false);\n  const [url, setUrl] = useState('');\n\n  useEffect(() => {\n    setProject(props.project);\n    setType(props.project.type);\n    setBoards(props.project.boards);\n  }, [type, project, props.project]);\n\n  const onSelectBoard = board => _ => {\n    console.log(board);\n\n    let newItemsBoard = board.itemsBoards.map(item => {\n      if (item.photos.length === 0) {\n        item.photos = [{\n          url: 'default.png',\n          type: 'remote'\n        }];\n      }\n\n      return item\n    });\n    board.itemsBoards = newItemsBoard;\n    setBoard(board);\n\n    let tmpCellsBefore = board.itemsBoards.filter(itemBoard => itemBoard.item.mode == 'before')\n    setCellsBefore(tmpCellsBefore);\n\n    let tmpCellsVoltaje = board.itemsBoards.filter(itemBoard => itemBoard.item.type == 'voltaje')\n    setCellsVoltaje(tmpCellsVoltaje);\n\n    let tmpCellsCorriente = board.itemsBoards.filter(itemBoard => itemBoard.item.type == 'corriente')\n    setCellsCorriente(tmpCellsCorriente);\n\n    let tmpCellsAfter = board.itemsBoards.filter(itemBoard => itemBoard.item.mode == 'after')\n    setCellsAfter(tmpCellsAfter);\n  }\n\n  const showImages = url => _ => {\n    console.log(\"showImages\", url);\n    setUrl(url);\n    setOpenDetailImage(true);\n  }\n  const onOpenItemBoard = currentCell => _ => {\n    console.log('currentCell', currentCell)\n    openItemBoard(currentCell._id).then(response => {\n\n      if (response.status === 'success') {\n        switch (currentCell.item.mode) {\n          case 'before':\n            let tmpCellsBefore = cellsBefore.map(cell => {\n              console.log('cell ', cell)\n              if (cell._id === currentCell._id) {\n                cell.status = 'activo';\n              }\n              return cell;\n            })\n            setCellsBefore(tmpCellsBefore);\n            break;\n          case 'after':\n            let tmpCellsAfter = cellsAfter.map(cell => {\n              if (cell._id === currentCell._id) {\n                cell.status = 'activo';\n              }\n              return cell;\n            })\n            setCellsAfter(tmpCellsAfter)\n            break;\n        }\n        switch (currentCell.item.type) {\n          case 'voltaje':\n            let tmpCellsVoltaje = cellsBefore.map(cell => {\n              if (cell._id === currentCell._id) {\n                cell.status = 'activo';\n              }\n              return cell;\n            })\n            setCellsVoltaje(tmpCellsVoltaje);\n            break;\n          case 'corriente':\n            let tmpCellsCorriente = cellsBefore.map(cell => {\n              if (cell._id === currentCell._id) {\n                cell.status = 'activo';\n              }\n              return cell;\n            })\n            setCellsCorriente(tmpCellsCorriente);\n            break;\n        }\n      }\n    });\n  }\n\n  const sendEmailBoard = board => _ => {\n\n    onSendEmailBoard(board._id).then(response => {\n      console.log(response);\n    })\n  }\n\n  const closeDatailImage = () => {\n    setOpenDetailImage(false)\n  }\n\n  const classes = useStyles()\n\n  return (\n    <Card>\n      <CardHeader title=\"TABLEROS\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>\n                <div className='board__item__wrapper'>\n                  {\n                    project ?\n                      project.boards.map((board, i) => {\n                        return (<div key={i} className='board_item'>\n                          <Chip\n                            size='small'\n                            color='primary'\n                            label={board.name}\n                            variant=\"outlined\"\n                            onClick={onSelectBoard(board)} />\n                        </div>)\n                      })\n                      : ''\n                  }\n                </div>\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell>\n                <div className='project__wrapper'>\n                  <div className='project__info'>\n                    {\n                      project ?\n                        <Fragment>\n                          <div className='project_name'>{project.name}</div>\n                          <div className='project_type'>{project.type === 'tri' ? 'Trifásico' : 'Monofásico'}</div>\n                          <div className='board_name'>{board ? board.name : ''}</div>\n                          <div className='board_email'>{board ? <AiOutlineMail className='icon' onClick={sendEmailBoard(board)} /> : ''}</div>\n                        </Fragment>\n                        : ''\n                    }\n                  </div>\n                  <div className='project__board__wrapper'>\n                    <Fragment>\n                      {\n                        cellsBefore.length > 0 ?\n                          <Fragment>\n                            <div className='title_action'>IMAGENES ANTES DE MANTENIMIENTO</div>\n                            <div className='board__item__wrapper'>\n\n                              {\n                                cellsBefore.map((itemBefore, i) => {\n                                  return (\n                                    <div className=\"card\" key={i}>\n                                      <div className='card_title'>{itemBefore.item.title}</div>\n                                      {\n                                        itemBefore.item.letterOne !== '' ?\n                                          <div className='card_colors'>\n                                            <div className='card_color_left' style={{ backgroundColor: `#FCF338` }}>{itemBefore.item.colorOne}</div>\n                                            <div className='card_color_right'></div>\n                                          </div>\n                                          : ''\n                                      }\n                                      <div className='card_header'>\n                                        {\n                                          itemBefore.status === 'inactivo'\n                                            ?\n                                            <div className='show__wrapper'>\n                                              <BiShowAlt className='icon' onClick={onOpenItemBoard(itemBefore)} />\n                                              <div className='show_text'>Esta marcación se encuentra oculta pulse en el icono para mostrar</div>\n                                            </div>\n                                            : ''\n                                        }\n                                      </div>\n                                      <div className='card_body'>\n                                        <div className=\"slide-container\">\n                                          {\n                                            itemBefore.photos.length > 0 ?\n                                              <Zoom>\n                                                {\n                                                  itemBefore.photos.map((photo, index) =>\n                                                    <img key={index} style={{ width: \"100%\" }} src={`${config.urlImages}${photo.url}`} onClick={showImages(`${config.urlImages}${photo.url}`)} />\n                                                  )\n                                                }\n                                              </Zoom> : ''\n                                          }\n                                        </div>\n                                      </div>\n                                    </div>\n                                  )\n                                })\n                              }\n\n                            </div>\n                          </Fragment> : ''\n                      }\n                      {\n                        cellsVoltaje.length > 0 ?\n                          <Fragment>\n                            <div className='title_action'>VOLTAJES</div>\n                            <div className='board__item__wrapper'>\n\n                              {\n                                cellsVoltaje.map((itemVoltaje, i) => {\n                                  return (\n                                    <div className=\"card\" key={i}>\n                                      <div className='card_title'>{itemVoltaje.item.title}</div>\n                                      {\n                                        itemVoltaje.item.letterOne !== '' ?\n                                          <div className='card_colors'>\n                                            <div\n                                              className='card_color_left'\n                                              style={{\n                                                backgroundColor: `#${itemVoltaje.item.colorOne}`,\n                                                color: `#${itemVoltaje.item.textColorOne}`\n                                              }}\n                                            >\n                                              {itemVoltaje.item.letterOne}\n                                            </div>\n                                            <div\n                                              className='card_color_right'\n                                              style={{\n                                                backgroundColor: `#${itemVoltaje.item.colorTwo}`,\n                                                color: `#${itemVoltaje.item.textColorTwo}`\n                                              }}\n                                            >\n                                              {itemVoltaje.item.letterTwo}\n                                            </div>\n                                          </div>\n                                          : ''\n                                      }\n                                      <div className='card_header'>\n                                        {\n                                          itemVoltaje.status === 'inactivo'\n                                            ?\n                                            <div className='show__wrapper'>\n                                              <BiShowAlt className='icon' onClick={onOpenItemBoard(itemVoltaje)} />\n                                              <div className='show_text'>Esta marcación se encuentra oculta pulse en el icono para mostrar</div>\n                                            </div>\n                                            : ''\n                                        }\n                                      </div>\n                                      <div className='card_body'>\n                                        <div className=\"slide-container\">\n                                          {\n                                            itemVoltaje.photos.length > 0 ?\n                                              <Zoom>\n                                                {\n                                                  itemVoltaje.photos.map((photo, index) =>\n                                                    <img key={index} style={{ width: \"100%\" }} src={`${config.urlImages}${photo.url}`} onClick={showImages(`${config.urlImages}${photo.url}`)} />\n                                                  )\n                                                }\n                                              </Zoom>\n                                              : ''\n                                          }\n                                        </div>\n                                      </div>\n                                      {\n                                        <div className='card_footer'>\n                                          <span className='text_value'>Valor:</span>\n                                          {itemVoltaje.item.value}\n                                        </div>\n                                      }\n                                    </div>\n                                  )\n                                })\n                              }\n\n                            </div>\n                          </Fragment> : ''\n                      }\n                    </Fragment>\n                  </div>\n\n                </div>\n\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table >\n      </CardContent >\n      <Dialog\n        fullWidth maxWidth=\"sm\"\n        open={openDetailImage}\n        onClose={closeDatailImage}\n        TransitionComponent={Transition}>\n        <DialogContent>\n          <ImageDetail url={url} />\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={closeDatailImage} color=\"primary\">\n            Cerrar\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n    </Card >\n  )\n}\n\nexport default AttentionDetail","import React, { Fragment, useState, useEffect } from 'react';\nimport { emphasize, makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport clsx from 'clsx';\nimport { Button } from '@material-ui/core';\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { updateUser, listCustomers, createProject } from '../../api/api';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n    minWidth: 290\n  },\n  input: {\n    display: \"flex\",\n    padding: 0,\n    height: \"auto\"\n  },\n  valueContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flex: 1,\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: theme.spacing(1, 2)\n  },\n  singleValue: {\n    fontSize: 16\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 2,\n    bottom: 6,\n    fontSize: 16\n  },\n\n  divider: {\n    height: theme.spacing(2)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n\n  },\n  button:\n  {\n    margin: theme.spacing(1),\n  },\n  fab:\n  {\n    marginTop: -2,\n    float: \"right\"\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}))\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />\n}\n\ninputComponent.propTypes = {\n  inputRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({\n      current: PropTypes.any.isRequired\n    })\n  ])\n}\nconst ProjectForm = props => {\n\n  useEffect(() => {\n    console.log(props)\n\n    listCustomers().then(response => {\n      setCustomers(response.customers);\n    });\n    if (props.person) {\n\n      // setName(props.person.name);\n      // setDocumentNumber(props.person.document_number);\n      // setUsername(props.person.username);\n      // setRole(props.person.role);\n    }\n  }, [])\n\n  const [type, setType] = useState('')\n  const [disabled, setDisabled] = useState(false)\n\n  const [file, setFile] = useState({})\n  const classes = useStyles()\n\n  const [customers, setCustomers] = useState([]);\n  const [customer, setCustomer] = useState();\n  const [description, setDescription] = useState('');\n  const [documentNumber, setDocumentNumber] = useState('');\n  const [username, setUsername] = useState('');\n  const [repeatPassword, setRepeatPassword] = useState('');\n  const [role, setRole] = useState(null);\n\n  const [errorDescription, setErrorDescription] = useState(false)\n  const [errorTextDescription, setErrorTextDescription] = useState('')\n\n  const [errorDocument, setErrorDocument] = useState(false)\n  const [errorTextDocument, setErrorTextDocument] = useState('')\n\n  const onChangeDescription = e => {\n    setDescription(e.target.value);\n    validateDescription(e.target.value);\n  }\n\n  const validateForm = () => {\n    let errors = 0\n    errors += validateDescription()\n    // errors += validatePrice()\n    // errors += validateQuantity()\n    return errors\n  }\n\n  const validateDescription = (value) => {\n    let text = value !== undefined ? value : description\n\n    if (text == null || text.toString().trim() === '') {\n      setErrorDescription(true)\n      setErrorTextDescription('Este campo es requerido')\n      return 1\n    }\n    else {\n      setErrorDescription(false)\n      setErrorTextDescription('')\n      return 0\n    }\n  }\n\n  const validateDocument = (value) => {\n    let text = value !== undefined ? value : documentNumber\n\n    if (text == null || text.toString().trim() === '') {\n      setErrorDocument(true)\n      setErrorTextDocument('Este campo es requerido')\n      return 1\n    }\n    else {\n      setErrorDocument(false)\n      setErrorTextDocument('')\n      return 0\n    }\n  }\n\n  const onChangeType = e => {\n    setType(e.target.value)\n  }\n\n  const onSubmitPerson = _ => {\n\n    let errores = validateForm()\n    // errores += validateType();\n\n\n    if (errores === 0) {\n\n      let data = {\n        'name': description,\n        'type': type,\n        'customer': customer._id,\n      }\n\n      console.log(data)\n\n      if (!props.person) {\n        createProject(data).then(response => {\n          console.log('response', response);\n          if (response.status == 'success') {\n            toast.info('Proyecto registrado exitosamente', {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          } else {\n            toast.error('Ocurrió un error al registrar el proyecto', {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          }\n\n        });\n\n      } else {\n\n        updateUser(data).then(response => {\n          console.log('response', response);\n          if (response.status == 'success') {\n            toast.info('Proyecto registrado exitosamente', {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          } else {\n            toast.error('Ocurrió un error al registrar el proyecto', {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          }\n\n        });\n      }\n    } else {\n      toast.error('🦄 Wow so easy!', {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  }\n\n\n  return (\n    <Fragment>\n      <ToastContainer />\n      <Container maxWidth=\"md\">\n\n        <Paper className={classes.paper}>\n          <form encType={'multipart/form-data'}\n            onSubmit={e => {\n              e.preventDefault()\n              onSubmitPerson()\n            }} >\n            <Grid container spacing={3}>\n\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  select\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Tipo\"\n                  margin=\"dense\"\n                  value={type}\n                  onChange={onChangeType}\n                >\n                  <MenuItem key={\"tri\"} value={\"tri\"}>Trifásico</MenuItem>\n                  <MenuItem key={\"mono\"} value={\"mono\"}>Monofásico</MenuItem>\n                </TextField>\n              </Grid>\n\n              <Grid item xs={12} sm={8}>\n                <Autocomplete\n                  fullWidth\n                  size=\"small\"\n                  getOptionLabel={\n                    (option) => {\n                      return `${option.name.toString().toUpperCase()} `\n                    }\n                  }\n                  filterOptions={(x) => x}\n                  options={customers}\n                  autoComplete\n                  getOptionSelected={(option, value) => option === value}\n                  onChange={(_, value) => {\n                    setCustomer(value);\n                  }}\n                  onInputChange={(_, newInputValue) => {\n                    console.log('newInputValue', newInputValue)\n                    if (newInputValue.toString().trim().length > 0) {\n                      let data = {\n                        search: newInputValue.toString().trim()\n                      }\n                      listCustomers(data).then(response => {\n                        setCustomers(response.customers);\n                      })\n                    }\n                  }}\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"Cliente\" variant=\"outlined\" margin=\"dense\" />\n                  )}\n                  renderTags={(tagValue, getTagProps) =>\n                    tagValue.map((option, index) => (\n                      <Chip\n                        label={option.name}\n                        {...getTagProps({ index })}\n                        disabled={customers.indexOf(option) !== -1}\n                      />\n                    ))\n                  }\n                  renderOption={(option) => {\n\n                    return (\n                      <Grid container alignItems=\"center\">\n                        <Grid item xs>\n                          <Typography >{`${option.name.toString().toUpperCase()}`}</Typography>\n                        </Grid>\n                      </Grid>\n                    );\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12} sm={12}>\n                <TextField\n                  fullWidth\n                  error={errorDescription}\n                  helperText={errorTextDescription}\n                  margin=\"dense\"\n                  autoComplete='off'\n                  id=\"outlined-simple-start-adornment\"\n                  className={clsx(classes.margin, classes.textField)}\n                  variant=\"outlined\"\n                  label=\"Descripción\"\n                  value={description}\n                  onChange={onChangeDescription} />\n              </Grid>\n\n\n\n\n              <Grid item xs={2} sm={3}>\n                <Button disabled={disabled} type=\"submit\" variant=\"contained\" color='primary'>\n                  {props.person ? \"Actualizar\" : \"Guardar\"}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n\n      </Container>\n    </Fragment>\n  )\n}\n\nexport default ProjectForm","import React, { useState, useEffect, Fragment } from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport BoardDetail from './BoardDetail';\nimport ProjectForm from './ProjectForm';\nimport { Button } from '@material-ui/core';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Slide from '@material-ui/core/Slide';\n\nimport Tooltip from '@material-ui/core/Tooltip'\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { listProjects, deleteProject } from '../../api/api';\nimport Chip from '@material-ui/core/Chip';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './projects.css';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    iconWidth: {\n        width: 10\n    },\n    paper: {\n        padding: theme.spacing(2),\n        marginTop: 10,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    input: {\n        display: 'none',\n    },\n    fab: {\n        margin: theme.spacing(1),\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n        color: 'black'\n    },\n}))\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    }\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n})\n\nconst Projects = _ => {\n\n    useEffect(() => {\n        listProjects().then(response => {\n            setProjects(response.projects);\n            setTotalProjects(response.count);\n        });\n    }, []);\n\n    const classes = useStyles()\n\n    const [projects, setProjects] = useState([])\n    const [project, setProject] = useState(null)\n    const [totalProjects, setTotalProjects] = useState(0)\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n\n\n    const [open, setOpen] = useState(false);\n    const [openDetailBoards, setOpenDetailBoards] = useState(false);\n    const [openProjectForm, setOpenProjectForm] = useState(false);\n\n    const handleChangePage = (_, newPage) => {\n        setPage(newPage);\n        // getPersons({ variables: { start: newPage, end: rowsPerPage } })\n    }\n\n    const handleChangeRowsPerPage = event => {\n\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n        // getPersons({ variables: { start: 0, end: event.target.value } })\n    }\n\n    const onCloseDeleteProject = () => {\n        setOpen(false);\n    }\n\n    const onDeleteProject = id => {\n        setOpen(false);\n\n        deleteProject(id).then(response => {\n            if (response.status === 'success') {\n                toast.success(response.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n                const newProjects = projects.map((currentProject) => {\n                    if (id !== currentProject._id)\n                        return currentProject\n\n                    currentProject.status = \"deleted\";\n                    return currentProject\n                })\n                setProjects(newProjects)\n            } else {\n                toast.error(response.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n        }).catch(e => {\n\n            toast.error('Ocurrió un error al eliminar el proyecto', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        })\n\n    }\n\n    const onDetailBoard = project => () => {\n        setProject(project)\n        setOpenDetailBoards(true)\n    }\n\n    const closeDatailBoards = () => {\n        setOpenDetailBoards(false)\n    }\n\n    const onOpenProjectForm = () => {\n        setOpenProjectForm(true)\n    }\n\n    const onCloseProjectForm = () => {\n        setOpenProjectForm(false)\n    }\n\n\n\n    return (\n        <Fragment>\n            <ToastContainer />\n            <Paper className={classes.paper}>\n                <Fab onClick={onOpenProjectForm} variant=\"extended\" color=\"primary\" size=\"small\" className={classes.margin}>\n                    <AddIcon className={classes.extendedIcon} />\n                    Nuevo proyecto\n                </Fab>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>DESCRIPCIÓN</TableCell>\n                            <TableCell>CLIENTE</TableCell>\n                            <TableCell>TABLEROS</TableCell>\n                            <TableCell>VER</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            projects.map(item => {\n                                return (\n                                    <TableRow key={item._id}>\n                                        <TableCell>{item.name} </TableCell>\n                                        <TableCell>{item.customer.name}</TableCell>\n                                        <TableCell className={classes.iconWidth}>\n                                            <Chip size='small' label={item.boards.length} variant=\"outlined\" />\n                                        </TableCell>\n                                        <TableCell className={classes.iconWidth}>\n                                            <Tooltip title=\"Detalle\" placement=\"top\">\n                                                <SearchIcon className={classes.icon} onClick={onDetailBoard(item)} />\n                                            </Tooltip>\n                                        </TableCell>\n\n                                    </TableRow>)\n                            })\n                        }\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={totalProjects}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n\n            <Dialog\n                open={open}\n                onClose={onCloseDeleteProject}\n                aria-labelledby=\"draggable-dialog-title\">\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n                    Alerta\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Esta seguro de eliminar esta atención?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={onCloseDeleteProject} color=\"primary\">\n                        NO\n                    </Button>\n                    <Button onClick={onDeleteProject} color=\"primary\">\n                        SI\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog maxWidth=\"md\" open={openProjectForm} onClose={onCloseProjectForm} TransitionComponent={Transition}>\n                <DialogContent>\n                    <ProjectForm onClose={onCloseProjectForm} project={project} />\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={onCloseProjectForm} color=\"primary\">\n                        Cerrar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                fullWidth maxWidth=\"lg\"\n                open={openDetailBoards}\n                onClose={closeDatailBoards}\n                TransitionComponent={Transition}>\n                <DialogContent>\n                    <BoardDetail project={project} />\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={closeDatailBoards} color=\"primary\">\n                        Cerrar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n        </Fragment>)\n}\n\nexport default Projects"],"sourceRoot":""}